{"id":"f595a3c669d0a26efbc374da207fd05b","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@account-abstraction/contracts/core/BaseAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-empty-blocks */\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"../utils/Exec.sol\";\nimport \"./UserOperationLib.sol\";\n\n/**\n * Basic account implementation.\n * This contract provides the basic logic for implementing the IAccount interface - validateUserOp\n * Specific account implementation should inherit it and provide the account-specific logic.\n */\nabstract contract BaseAccount is IAccount {\n    using UserOperationLib for PackedUserOperation;\n\n    struct Call {\n        address target;\n        uint256 value;\n        bytes data;\n    }\n\n    error ExecuteError(uint256 index, bytes error);\n\n    /**\n     * Return the account nonce.\n     * This method returns the next sequential nonce.\n     * For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\n     */\n    function getNonce() public view virtual returns (uint256) {\n        return entryPoint().getNonce(address(this), 0);\n    }\n\n    /**\n     * Return the entryPoint used by this account.\n     * Subclass should return the current entryPoint used by this account.\n     */\n    function entryPoint() public view virtual returns (IEntryPoint);\n\n    /**\n     * execute a single call from the account.\n     */\n    function execute(address target, uint256 value, bytes calldata data) virtual external {\n        _requireForExecute();\n\n        bool ok = Exec.call(target, value, data, gasleft());\n        if (!ok) {\n            Exec.revertWithReturnData();\n        }\n    }\n\n    /**\n     * execute a batch of calls.\n     * revert on the first call that fails.\n     * If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,\n     *  to mark the failing call index.\n     */\n    function executeBatch(Call[] calldata calls) virtual external {\n        _requireForExecute();\n\n        uint256 callsLength = calls.length;\n        for (uint256 i = 0; i < callsLength; i++) {\n            Call calldata call = calls[i];\n            bool ok = Exec.call(call.target, call.value, call.data, gasleft());\n            if (!ok) {\n                if (callsLength == 1) {\n                    Exec.revertWithReturnData();\n                } else {\n                    revert ExecuteError(i, Exec.getReturnData(0));\n                }\n            }\n        }\n    }\n\n    /// @inheritdoc IAccount\n    function validateUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external virtual override returns (uint256 validationData) {\n        _requireFromEntryPoint();\n        validationData = _validateSignature(userOp, userOpHash);\n        _validateNonce(userOp.nonce);\n        _payPrefund(missingAccountFunds);\n    }\n\n    /**\n     * Ensure the request comes from the known entrypoint.\n     */\n    function _requireFromEntryPoint() internal view virtual {\n        require(\n            msg.sender == address(entryPoint()),\n            \"account: not from EntryPoint\"\n        );\n    }\n\n    function _requireForExecute() internal view virtual {\n        _requireFromEntryPoint();\n    }\n\n    /**\n     * Validate the signature is valid for this message.\n     * @param userOp          - Validate the userOp.signature field.\n     * @param userOpHash      - Convenient field: the hash of the request, to check the signature against.\n     *                          (also hashes the entrypoint and chain id)\n     * @return validationData - Signature and time-range of this operation.\n     *                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n     *                                    otherwise, an address of an aggregator contract.\n     *                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n     *                          <6-byte> validAfter - first timestamp this operation is valid\n     *                          If the account doesn't use time-range, it is enough to return\n     *                          SIG_VALIDATION_FAILED value (1) for signature failure.\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function _validateSignature(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash\n    ) internal virtual returns (uint256 validationData);\n\n    /**\n     * Validate the nonce of the UserOperation.\n     * This method may validate the nonce requirement of this account.\n     * e.g.\n     * To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n     *      `require(nonce < type(uint64).max)`\n     * For a hypothetical account that *requires* the nonce to be out-of-order:\n     *      `require(nonce & type(uint64).max == 0)`\n     *\n     * The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n     * action is needed by the account itself.\n     *\n     * @param nonce to validate\n     *\n     * solhint-disable-next-line no-empty-blocks\n     */\n    function _validateNonce(uint256 nonce) internal view virtual {\n    }\n\n    /**\n     * Sends to the entrypoint (msg.sender) the missing funds for this transaction.\n     * SubClass MAY override this method for better funds management\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n     * it will not be required to send again).\n     * @param missingAccountFunds - The minimum value this method should send the entrypoint.\n     *                              This value MAY be zero, in case there is enough deposit,\n     *                              or the userOp has a paymaster.\n     */\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\n        if (missingAccountFunds != 0) {\n            (bool success,) = payable(msg.sender).call{\n                    value: missingAccountFunds\n                }(\"\");\n            (success);\n            // Ignore failure (its EntryPoint's job to verify, not account.)\n        }\n    }\n}\n"},"@account-abstraction/contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-inline-assembly */\n\n\n /*\n  * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n  * must return this value in case of signature failure, instead of revert.\n  */\nuint256 constant SIG_VALIDATION_FAILED = 1;\n\n\n/*\n * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n * return this value on success.\n */\nuint256 constant SIG_VALIDATION_SUCCESS = 0;\n\n\n/**\n * Returned data from validateUserOp.\n * validateUserOp returns a uint256, which is created by `_packedValidationData` and\n * parsed by `_parseValidationData`.\n * @param aggregator  - address(0) - The account validated the signature by itself.\n *                      address(1) - The account failed to validate the signature.\n *                      otherwise - This is an address of a signature aggregator that must\n *                                  be used to validate the signature.\n * @param validAfter  - This UserOp is valid only after this timestamp.\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n */\nstruct ValidationData {\n    address aggregator;\n    uint48 validAfter;\n    uint48 validUntil;\n}\n\n/**\n * Extract aggregator/sigFailed, validAfter, validUntil.\n * Also convert zero validUntil to type(uint48).max.\n * @param validationData - The packed validation data.\n * @return data - The unpacked in-memory validation data.\n */\nfunction _parseValidationData(\n    uint256 validationData\n) pure returns (ValidationData memory data) {\n    address aggregator = address(uint160(validationData));\n    uint48 validUntil = uint48(validationData >> 160);\n    if (validUntil == 0) {\n        validUntil = type(uint48).max;\n    }\n    uint48 validAfter = uint48(validationData >> (48 + 160));\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Helper to pack the return value for validateUserOp.\n * @param data - The ValidationData to pack.\n * @return the packed validation data.\n */\nfunction _packValidationData(\n    ValidationData memory data\n) pure returns (uint256) {\n    return\n        uint160(data.aggregator) |\n        (uint256(data.validUntil) << 160) |\n        (uint256(data.validAfter) << (160 + 48));\n}\n\n/**\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\n * @param sigFailed  - True for signature failure, false for success.\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n * @param validAfter - First timestamp this UserOperation is valid.\n * @return the packed validation data.\n */\nfunction _packValidationData(\n    bool sigFailed,\n    uint48 validUntil,\n    uint48 validAfter\n) pure returns (uint256) {\n    return\n        (sigFailed ?  SIG_VALIDATION_FAILED : SIG_VALIDATION_SUCCESS) |\n        (uint256(validUntil) << 160) |\n        (uint256(validAfter) << (160 + 48));\n}\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n *\n * @param data - the calldata bytes array to perform keccak on.\n * @return ret - the keccak hash of the 'data' array.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly (\"memory-safe\") {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n\n/**\n * The minimum of two numbers.\n * @param a - First number.\n * @param b - Second number.\n * @return - the minimum value.\n */\n    function min(uint256 a, uint256 b) pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n/**\n * standard solidity memory allocation finalization.\n * copied from solidity generated code\n * @param memPointer - The current memory pointer\n * @param allocationSize - Bytes allocated from memPointer.\n */\n    function finalizeAllocation(uint256 memPointer, uint256 allocationSize) pure {\n\n        assembly (\"memory-safe\"){\n            finalize_allocation(memPointer, allocationSize)\n\n            function finalize_allocation(memPtr, size) {\n                let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n                mstore(64, newFreePtr)\n            }\n\n            function round_up_to_mul_of_32(value) -> result {\n                result := and(add(value, 31), not(31))\n            }\n        }\n    }\n"},"@account-abstraction/contracts/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/PackedUserOperation.sol\";\nimport {calldataKeccak, min} from \"./Helpers.sol\";\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20;\n    uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36;\n    uint256 public constant PAYMASTER_DATA_OFFSET = 52;\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        PackedUserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            (uint256 maxPriorityFeePerGas, uint256 maxFeePerGas) = unpackUints(userOp.gasFees);\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    bytes32 internal constant PACKED_USEROP_TYPEHASH =\n    keccak256(\n        \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\"\n    );\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp.\n     */\n    function encode(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes memory ret) {\n        address sender = userOp.sender;\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = overrideInitCodeHash != 0 ? overrideInitCodeHash : calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        bytes32 accountGasLimits = userOp.accountGasLimits;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        bytes32 gasFees = userOp.gasFees;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            UserOperationLib.PACKED_USEROP_TYPEHASH,\n            sender, nonce,\n            hashInitCode, hashCallData,\n            accountGasLimits, preVerificationGas, gasFees,\n            hashPaymasterAndData\n        );\n    }\n\n    function unpackUints(\n        bytes32 packed\n    ) internal pure returns (uint256 high128, uint256 low128) {\n        return (unpackHigh128(packed), unpackLow128(packed));\n    }\n\n    // Unpack just the high 128-bits from a packed value\n    function unpackHigh128(bytes32 packed) internal pure returns (uint256) {\n        return uint256(packed) >> 128;\n    }\n\n    // Unpack just the low 128-bits from a packed value\n    function unpackLow128(bytes32 packed) internal pure returns (uint256) {\n        return uint128(uint256(packed));\n    }\n\n    function unpackMaxPriorityFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.gasFees);\n    }\n\n    function unpackMaxFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.gasFees);\n    }\n\n    function unpackVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.accountGasLimits);\n    }\n\n    function unpackCallGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.accountGasLimits);\n    }\n\n    function unpackPaymasterVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET]));\n    }\n\n    function unpackPostOpGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]));\n    }\n\n    function unpackPaymasterStaticFields(\n        bytes calldata paymasterAndData\n    ) internal pure returns (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) {\n        return (\n            address(bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]))\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing.\n     */\n    function hash(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes32) {\n        return keccak256(encode(userOp, overrideInitCodeHash));\n    }\n}\n"},"@account-abstraction/contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./PackedUserOperation.sol\";\n\ninterface IAccount {\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp              - The operation that is about to be executed.\n     * @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n     *                              This is the minimum amount to transfer to the sender(entryPoint) to be\n     *                              able to make the call. The excess is left as a deposit in the entrypoint\n     *                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n     *                              In case there is a paymaster in the request (or the current deposit is high\n     *                              enough), this value will be zero.\n     * @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n     *                              `_unpackValidationData` to encode and decode.\n     *                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n     *                                 otherwise, an address of an \"aggregator\" contract.\n     *                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n     *                              <6-byte> validAfter - First timestamp this operation is valid\n     *                                                    If an account doesn't use time-range, it is enough to\n     *                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *                              Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external returns (uint256 validationData);\n}\n"},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n    /**\n     * Validate an aggregated signature.\n     * Reverts if the aggregated signature does not match the given list of operations.\n     * @param userOps   - An array of UserOperations to validate the signature for.\n     * @param signature - The aggregated signature.\n     */\n    function validateSignatures(\n        PackedUserOperation[] calldata userOps,\n        bytes calldata signature\n    ) external;\n\n    /**\n     * Validate the signature of a single userOp.\n     * This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n     * the aggregator this account uses.\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp        - The userOperation received from the user.\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\n     */\n    function validateUserOpSignature(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * Aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code to perform this aggregation.\n     * @param userOps              - An array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature - The aggregated signature.\n     */\n    function aggregateSignatures(\n        PackedUserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatedSignature);\n}\n"},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./PackedUserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\nimport \"./ISenderCreator.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n    /***\n     * An event emitted after each successful request.\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\n     * @param sender        - The account that generates this request.\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\n     * @param nonce         - The nonce value from the request.\n     * @param success       - True if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\n     *                        validation and execution).\n     */\n    event UserOperationEvent(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address indexed paymaster,\n        uint256 nonce,\n        bool success,\n        uint256 actualGasCost,\n        uint256 actualGasUsed\n    );\n\n    /**\n     * Account \"sender\" was deployed.\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender     - The account that is deployed\n     * @param factory    - The factory used to deploy this account (in the initCode)\n     * @param paymaster  - The paymaster used by this UserOp\n     */\n    event AccountDeployed(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address factory,\n        address paymaster\n    );\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the reverted \"callData\" call.\n     */\n    event UserOperationRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the reverted call to \"postOp\".\n     */\n    event PostOpRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     */\n    event UserOperationPrefundTooLow(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce\n    );\n\n    /**\n     * An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\n     * Any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\n     * Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *                  so a failure can be attributed to the correct entity.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. see FailedOp(uint256,string), above\n     * @param inner   - data from inner cought revert reason\n     * @dev note that inner is truncated to 2048 bytes\n     */\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\n\n    error PostOpReverted(bytes returnData);\n\n    /**\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\n     * @param aggregator The aggregator that failed to verify the signature\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    // Return value of getSenderAddress.\n    error SenderAddressResult(address sender);\n\n    // UserOps handled, per aggregator.\n    struct UserOpsPerAggregator {\n        PackedUserOperation[] userOps;\n        // Aggregator address\n        IAggregator aggregator;\n        // Aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperations.\n     * No signature aggregator is used.\n     * If any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops         - The operations to execute.\n     * @param beneficiary - The address to receive the fees.\n     */\n    function handleOps(\n        PackedUserOperation[] calldata ops,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n     * @param beneficiary      - The address to receive the fees.\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Generate a request Id - unique identifier for this request.\n     * The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\n     * @param userOp - The user operation to generate the request ID for.\n     * @return hash the hash of this UserOperation\n     */\n    function getUserOpHash(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes32);\n\n    /**\n     * Gas and return values during simulation.\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\n     * @param prefund          - The required prefund for this operation\n     * @param accountValidationData   - returned validationData from account.\n     * @param paymasterValidationData - return validationData from paymaster.\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        uint256 accountValidationData;\n        uint256 paymasterValidationData;\n        bytes paymasterContext;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * This method always revert, and returns the address in SenderAddressResult error.\n     * @notice this method cannot be used for EIP-7702 derived contracts.\n     *\n     * @param initCode - The constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n    error DelegateAndRevert(bool success, bytes ret);\n\n    /**\n     * Helper method for dry-run testing.\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n     *  actual EntryPoint code is less convenient.\n     * @param target a target contract to make a delegatecall from entrypoint\n     * @param data data to pass to target in a delegatecall\n     */\n    function delegateAndRevert(address target, bytes calldata data) external;\n\n    /**\n     * @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\n     */\n    function senderCreator() external view returns (ISenderCreator);\n}\n"},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     *\n     * @param key - the \"nonce key\" to increment the \"nonce sequence\" for.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n    enum PostOpMode {\n        // User op succeeded.\n        opSucceeded,\n        // User op reverted. Still has to pay for gas.\n        opReverted,\n        // Only used internally in the EntryPoint (cleanup after postOp reverts). Never calling paymaster with this value\n        postOpReverted\n    }\n\n    /**\n     * Payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp          - The user operation.\n     * @param userOpHash      - Hash of the user's request data.\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\n     *                          value of validateUserOperation.\n     *                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n     *                                                    other values are invalid for paymaster.\n     *                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n     *                          <6-byte> validAfter - first timestamp this operation is valid\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * Post-operation handler.\n     * Must verify sender is the entryPoint.\n     * @param mode          - Enum with the following options:\n     *                        opSucceeded - User operation succeeded.\n     *                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n     *                        postOpReverted - never passed in a call to postOp().\n     * @param context       - The context value returned by validatePaymasterUserOp\n     * @param actualGasCost - Actual cost of gas used so far (without this postOp call).\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n     *                        and maxPriorityFee (and basefee)\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\n     */\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) external;\n}\n"},"@account-abstraction/contracts/interfaces/ISenderCreator.sol":{"content":"\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface ISenderCreator {\n    /**\n     * @dev Creates a new sender contract.\n     * @return sender Address of the newly created sender contract.\n     */\n    function createSender(bytes calldata initCode) external returns (address sender);\n\n    /**\n     * Use initCallData to initialize an EIP-7702 account.\n     * The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\n     * Note: Can be called multiple times as long as an appropriate initCode is supplied\n     *\n     * @param sender - the 'sender' EIP-7702 account to be initialized.\n     * @param initCallData - the call data to be passed to the sender account call.\n     */\n    function initEip7702Sender(address sender, bytes calldata initCallData) external;\n}\n"},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * Manage deposits and stakes.\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n    event Deposited(address indexed account, uint256 totalDeposit);\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    // Emitted when stake or unstake delay are modified.\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    // Emitted once a stake is scheduled for withdrawal.\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit         - The entity's deposit.\n     * @param staked          - True if this entity is staked.\n     * @param stake           - Actual amount of ether staked for this entity.\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n     * @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n     *      and the rest fit into a 2nd cell (used during stake/unstake)\n     *      - 112 bit allows for 10^15 eth\n     *      - 48 bit for full timestamp\n     *      - 32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint256 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    // API struct used by getStakeInfo and simulateValidation.\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /**\n     * Get deposit info.\n     * @param account - The account to query.\n     * @return info   - Full deposit information of given account.\n     */\n    function getDepositInfo(\n        address account\n    ) external view returns (DepositInfo memory info);\n\n    /**\n     * Get account balance.\n     * @param account - The account to query.\n     * @return        - The deposit (for gas payment) of the account.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * Add to the deposit of the given account.\n     * @param account - The account to add to.\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * Add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 unstakeDelaySec) external payable;\n\n    /**\n     * Attempt to unlock the stake.\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * Withdraw from the (unlocked) stake.\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * Withdraw from the deposit.\n     * @param withdrawAddress - The address to send withdrawn value.\n     * @param withdrawAmount  - The amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external;\n}\n"},"@account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * User Operation struct\n * @param sender                - The sender account of this request.\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\n * @param initCode              - If set, the account contract will be created by this constructor\n * @param callData              - The method call to execute on this account.\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n *                                Covers batch overhead.\n * @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n *                                The paymaster will pay for the transaction instead of the sender.\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct PackedUserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    bytes32 accountGasLimits;\n    uint256 preVerificationGas;\n    bytes32 gasFees;\n    bytes paymasterAndData;\n    bytes signature;\n}\n"},"@account-abstraction/contracts/utils/Exec.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n// solhint-disable no-inline-assembly\n\n/**\n * Utility functions helpful when making different kinds of contract calls in Solidity.\n */\nlibrary Exec {\n\n    function call(\n        address to,\n        uint256 value,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    function staticcall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal view returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := staticcall(txGas, to, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    function delegateCall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := delegatecall(txGas, to, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    // get returned data from last call or delegateCall\n    // maxLen - maximum length of data to return, or zero, for the full length\n    function getReturnData(uint256 maxLen) internal pure returns (bytes memory returnData) {\n        assembly (\"memory-safe\") {\n            let len := returndatasize()\n            if gt(maxLen,0) {\n                if gt(len, maxLen) {\n                    len := maxLen\n                }\n            }\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, add(len, 0x20)))\n            mstore(ptr, len)\n            returndatacopy(add(ptr, 0x20), 0, len)\n            returnData := ptr\n        }\n    }\n\n    // revert with explicit byte array (probably reverted info from call)\n    function revertWithData(bytes memory returnData) internal pure {\n        assembly (\"memory-safe\") {\n            revert(add(returnData, 32), mload(returnData))\n        }\n    }\n\n    // Propagate revert data from last call\n    function revertWithReturnData() internal pure {\n        revertWithData(getReturnData(0));\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/PayMaster.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@account-abstraction/contracts/interfaces/IPaymaster.sol\";\r\nimport \"@account-abstraction/contracts/interfaces/IEntryPoint.sol\";\r\nimport \"@account-abstraction/contracts/core/UserOperationLib.sol\";\r\n\r\n\r\n\r\n\r\n/**\r\n * @title Sponsored Paymaster\r\n * @notice This contract pays gas fees on behalf of users using its own ERC20 token balance.\r\n */\r\ncontract Paymaster is IPaymaster, Ownable {\r\n    IEntryPoint public immutable entryPoint;\r\n    uint256 public gasLimit;\r\n\r\n    event PaymasterSetup(address indexed entryPoint, address indexed token, uint256 gasLimit);\r\n    event GasPayment(address indexed user, uint256 amount);\r\n\r\n    constructor(address _entryPoint, uint256 _gasLimit,  address initialOwner) Ownable(initialOwner)  {\r\n        \r\n        require(_entryPoint != address(0), \"Invalid EntryPoint\");\r\n        entryPoint = IEntryPoint(_entryPoint);\r\n        gasLimit = _gasLimit;\r\n        emit PaymasterSetup(_entryPoint, address(0), _gasLimit);\r\n    }\r\n\r\n    /**\r\n     * @notice Validates whether this paymaster will sponsor the given UserOperation.\r\n     * @dev This version simply checks if gas required is within allowed limits.\r\n     */\r\n\r\n    function validatePaymasterUserOp(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32, // userOpHash\r\n        uint256 requiredPreFund\r\n    ) external view override returns (bytes memory context, uint256 validationData) {\r\n        require(msg.sender == address(entryPoint), \"Unauthorized caller\");\r\n    \r\n        // Only sponsor if this is a wallet creation (initCode is non-empty)\r\n        if (userOp.initCode.length == 0) {\r\n            return (\"\", 1); // don't sponsor, return non-zero validationData\r\n        }\r\n    \r\n        // Optional: check that requiredPreFund isn't crazy high\r\n        if (requiredPreFund > gasLimit) {\r\n            return (\"\", 1);\r\n        }\r\n    \r\n        return (\"\", 0); // Sponsor this operation\r\n    }\r\n    \r\n\r\n    /**\r\n     * @notice Pays the gas fee after the operation completes.\r\n     * @dev Called only by EntryPoint.\r\n     */\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata /*context */,\r\n        uint256 actualGasCost,\r\n       uint256 /* actualUserOpFeePerGas */\r\n    ) external override {\r\n        require(msg.sender == address(entryPoint), \"Only EntryPoint can call postOp\");\r\n\r\n        if (mode == PostOpMode.opSucceeded || mode == PostOpMode.opReverted) {\r\n            (bool success, ) = payable(msg.sender).call{value: actualGasCost}(\"\");\r\n            require(success, \"Native token transfer failed\");\r\n\r\n        }\r\n\r\n        emit GasPayment(msg.sender, actualGasCost);\r\n    }\r\n\r\n    /**\r\n     * @notice Updates the gas limit allowed for sponsored operations.\r\n     */\r\n    function setGasLimit(uint256 newGasLimit) external onlyOwner {\r\n        gasLimit = newGasLimit;\r\n    }\r\n\r\n    receive() external payable {}\r\n    fallback() external payable {}\r\n}"},"contracts/SmartAccount.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@account-abstraction/contracts/interfaces/IEntryPoint.sol\";\r\nimport \"@account-abstraction/contracts/core/BaseAccount.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\nimport \"@account-abstraction/contracts/core/UserOperationLib.sol\";\r\n\r\ncontract SmartAccount is BaseAccount {\r\n    using ECDSA for bytes32;\r\n    using MessageHashUtils for bytes32;\r\n\r\n    IEntryPoint private immutable _entryPoint;\r\n\r\n    address public owner;\r\n\r\n    constructor(IEntryPoint entryPoint_, address _owner) {\r\n        _entryPoint = entryPoint_;\r\n        owner = _owner;\r\n    }\r\n\r\n    function entryPoint() public view override returns (IEntryPoint) {\r\n        return _entryPoint;\r\n    }\r\n\r\n    function _validateSignature(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32 userOpHash\r\n    ) internal view override returns (uint256 validationData) {\r\n        bytes32 hash = userOpHash.toEthSignedMessageHash();\r\n        if (hash.recover(userOp.signature) != owner) {\r\n            return 1; // Signature validation failed\r\n        }\r\n        return 0; // Signature valid\r\n    }\r\n\r\n    function _validateAndUpdateNonce(\r\n        PackedUserOperation calldata userOp\r\n    ) internal {\r\n        require(nonce == userOp.nonce, \"Invalid nonce\");\r\n        nonce++;\r\n    }\r\n\r\n    uint256 public nonce;\r\n\r\n    function execute(\r\n        address dest,\r\n        uint256 value,\r\n        bytes calldata func\r\n    ) external override {\r\n        require(msg.sender == owner, \"Only owner\");\r\n        (bool success, ) = dest.call{value: value}(func);\r\n        require(success, \"Execution failed\");\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n"},"contracts/SmartAccountFactory.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"./SmartAccount.sol\";\r\nimport \"@account-abstraction/contracts/interfaces/IEntryPoint.sol\";\r\n\r\ncontract SmartAccountFactory {\r\n    IEntryPoint private immutable _entryPoint;\r\n\r\n    function entryPoint() public view returns (IEntryPoint) {\r\n        return _entryPoint;\r\n    }\r\n\r\n    address public immutable walletImplementation;\r\n\r\n    event WalletDeployed(address wallet, address owner);\r\n\r\n    constructor(IEntryPoint entryPoint_) {\r\n        _entryPoint = entryPoint_;\r\n\r\n        SmartAccount wallet = new SmartAccount(entryPoint_, address(this));\r\n        walletImplementation = address(wallet);\r\n    }\r\n\r\n    function getAddress(\r\n        address owner,\r\n        uint256 salt\r\n    ) public view returns (address predicted) {\r\n        bytes32 bytecodeHash = keccak256(getBytecode(owner));\r\n        return\r\n            address(\r\n                uint160(\r\n                    uint(\r\n                        keccak256(\r\n                            abi.encodePacked(\r\n                                bytes1(0xff),\r\n                                address(this),\r\n                                bytes32(salt),\r\n                                bytecodeHash\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n            );\r\n    }\r\n\r\n    function createWallet(\r\n        address owner,\r\n        uint256 salt\r\n    ) external returns (address wallet) {\r\n        bytes memory bytecode = getBytecode(owner);\r\n        assembly {\r\n            wallet := create2(0, add(bytecode, 32), mload(bytecode), salt)\r\n            if iszero(extcodesize(wallet)) {\r\n                revert(0, 0)\r\n            }\r\n        }\r\n        emit WalletDeployed(wallet, owner);\r\n    }\r\n\r\n    function getBytecode(address owner) internal view returns (bytes memory) {\r\n        return\r\n            abi.encodePacked(\r\n                type(SmartAccount).creationCode,\r\n                abi.encode(_entryPoint, owner)\r\n            );\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@account-abstraction/contracts/core/BaseAccount.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/BaseAccount.sol","exportedSymbols":{"BaseAccount":[261],"Exec":[1294],"IAccount":[803],"IAggregator":[837],"IEntryPoint":[1022],"INonceManager":[1041],"ISenderCreator":[1097],"IStakeManager":[1201],"PackedUserOperation":[1223],"UserOperationLib":[786],"calldataKeccak":[422],"min":[440]},"id":262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@account-abstraction/contracts/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":262,"sourceUnit":804,"src":"182:36:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":262,"sourceUnit":1023,"src":"219:39:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/utils/Exec.sol","file":"../utils/Exec.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":262,"sourceUnit":1295,"src":"259:27:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/UserOperationLib.sol","file":"./UserOperationLib.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":262,"sourceUnit":787,"src":"287:32:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"IAccount","nameLocations":["587:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":803,"src":"587:8:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"587:8:0"}],"canonicalName":"BaseAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"321:232:0","text":" Basic account implementation.\n This contract provides the basic logic for implementing the IAccount interface - validateUserOp\n Specific account implementation should inherit it and provide the account-specific logic."},"fullyImplemented":false,"id":261,"linearizedBaseContracts":[261,803],"name":"BaseAccount","nameLocation":"572:11:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":12,"libraryName":{"id":9,"name":"UserOperationLib","nameLocations":["608:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":786,"src":"608:16:0"},"nodeType":"UsingForDirective","src":"602:47:0","typeName":{"id":11,"nodeType":"UserDefinedTypeName","pathNode":{"id":10,"name":"PackedUserOperation","nameLocations":["629:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"629:19:0"},"referencedDeclaration":1223,"src":"629:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}}},{"canonicalName":"BaseAccount.Call","id":19,"members":[{"constant":false,"id":14,"mutability":"mutable","name":"target","nameLocation":"685:6:0","nodeType":"VariableDeclaration","scope":19,"src":"677:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"value","nameLocation":"709:5:0","nodeType":"VariableDeclaration","scope":19,"src":"701:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"701:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"data","nameLocation":"730:4:0","nodeType":"VariableDeclaration","scope":19,"src":"724:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":17,"name":"bytes","nodeType":"ElementaryTypeName","src":"724:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"662:4:0","nodeType":"StructDefinition","scope":261,"src":"655:86:0","visibility":"public"},{"errorSelector":"5a154675","id":25,"name":"ExecuteError","nameLocation":"753:12:0","nodeType":"ErrorDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"index","nameLocation":"774:5:0","nodeType":"VariableDeclaration","scope":25,"src":"766:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"error","nameLocation":"787:5:0","nodeType":"VariableDeclaration","scope":25,"src":"781:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":22,"name":"bytes","nodeType":"ElementaryTypeName","src":"781:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"765:28:0"},"src":"747:47:0"},{"body":{"id":41,"nodeType":"Block","src":"1039:63:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":36,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1086:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BaseAccount_$261","typeString":"contract BaseAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseAccount_$261","typeString":"contract BaseAccount"}],"id":35,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1078:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:0","typeDescriptions":{}}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1078:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1093:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":31,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1056:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$1022_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1056:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1069:8:0","memberName":"getNonce","nodeType":"MemberAccess","referencedDeclaration":1034,"src":"1056:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$","typeString":"function (address,uint192) view external returns (uint256)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1056:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":30,"id":40,"nodeType":"Return","src":"1049:46:0"}]},"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"800:176:0","text":" Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"functionSelector":"d087d288","id":42,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"990:8:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"998:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42,"src":"1030:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1030:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1029:9:0"},"scope":261,"src":"981:121:0","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"1108:137:0","text":" Return the entryPoint used by this account.\n Subclass should return the current entryPoint used by this account."},"functionSelector":"b0d691fe","id":49,"implemented":false,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1259:10:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[],"src":"1269:2:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49,"src":"1301:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},"typeName":{"id":46,"nodeType":"UserDefinedTypeName","pathNode":{"id":45,"name":"IEntryPoint","nameLocations":["1301:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1022,"src":"1301:11:0"},"referencedDeclaration":1022,"src":"1301:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1300:13:0"},"scope":261,"src":"1250:64:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":82,"nodeType":"Block","src":"1469:169:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"_requireForExecute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"1479:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61,"nodeType":"ExpressionStatement","src":"1479:20:0"},{"assignments":[63],"declarations":[{"constant":false,"id":63,"mutability":"mutable","name":"ok","nameLocation":"1515:2:0","nodeType":"VariableDeclaration","scope":82,"src":"1510:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62,"name":"bool","nodeType":"ElementaryTypeName","src":"1510:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":72,"initialValue":{"arguments":[{"id":66,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"1530:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":67,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1538:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":68,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1545:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[],"expression":{"argumentTypes":[],"id":69,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1551:7:0","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1551:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":64,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1520:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$1294_$","typeString":"type(library Exec)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1525:4:0","memberName":"call","nodeType":"MemberAccess","referencedDeclaration":1241,"src":"1520:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,uint256) returns (bool)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1520:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1510:51:0"},{"condition":{"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1575:3:0","subExpression":{"id":73,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1576:2:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":81,"nodeType":"IfStatement","src":"1571:61:0","trueBody":{"id":80,"nodeType":"Block","src":"1580:52:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":75,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1594:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$1294_$","typeString":"type(library Exec)"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1599:20:0","memberName":"revertWithReturnData","nodeType":"MemberAccess","referencedDeclaration":1293,"src":"1594:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$__$","typeString":"function () pure"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1594:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"1594:27:0"}]}}]},"documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"1320:58:0","text":" execute a single call from the account."},"functionSelector":"b61d27f6","id":83,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1392:7:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"target","nameLocation":"1408:6:0","nodeType":"VariableDeclaration","scope":83,"src":"1400:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"1400:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"value","nameLocation":"1424:5:0","nodeType":"VariableDeclaration","scope":83,"src":"1416:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"data","nameLocation":"1446:4:0","nodeType":"VariableDeclaration","scope":83,"src":"1431:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":55,"name":"bytes","nodeType":"ElementaryTypeName","src":"1431:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1399:52:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"1469:0:0"},"scope":261,"src":"1383:255:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":155,"nodeType":"Block","src":"1949:503:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":91,"name":"_requireForExecute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"1959:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":93,"nodeType":"ExpressionStatement","src":"1959:20:0"},{"assignments":[95],"declarations":[{"constant":false,"id":95,"mutability":"mutable","name":"callsLength","nameLocation":"1998:11:0","nodeType":"VariableDeclaration","scope":155,"src":"1990:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"1990:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":98,"initialValue":{"expression":{"id":96,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2012:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$19_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaseAccount.Call calldata[] calldata"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2018:6:0","memberName":"length","nodeType":"MemberAccess","src":"2012:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1990:34:0"},{"body":{"id":153,"nodeType":"Block","src":"2076:370:0","statements":[{"assignments":[111],"declarations":[{"constant":false,"id":111,"mutability":"mutable","name":"call","nameLocation":"2104:4:0","nodeType":"VariableDeclaration","scope":153,"src":"2090:18:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$19_calldata_ptr","typeString":"struct BaseAccount.Call"},"typeName":{"id":110,"nodeType":"UserDefinedTypeName","pathNode":{"id":109,"name":"Call","nameLocations":["2090:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2090:4:0"},"referencedDeclaration":19,"src":"2090:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$19_storage_ptr","typeString":"struct BaseAccount.Call"}},"visibility":"internal"}],"id":115,"initialValue":{"baseExpression":{"id":112,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2111:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$19_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaseAccount.Call calldata[] calldata"}},"id":114,"indexExpression":{"id":113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2117:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2111:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$19_calldata_ptr","typeString":"struct BaseAccount.Call calldata"}},"nodeType":"VariableDeclarationStatement","src":"2090:29:0"},{"assignments":[117],"declarations":[{"constant":false,"id":117,"mutability":"mutable","name":"ok","nameLocation":"2138:2:0","nodeType":"VariableDeclaration","scope":153,"src":"2133:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":116,"name":"bool","nodeType":"ElementaryTypeName","src":"2133:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":129,"initialValue":{"arguments":[{"expression":{"id":120,"name":"call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2153:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$19_calldata_ptr","typeString":"struct BaseAccount.Call calldata"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2158:6:0","memberName":"target","nodeType":"MemberAccess","referencedDeclaration":14,"src":"2153:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":122,"name":"call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2166:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$19_calldata_ptr","typeString":"struct BaseAccount.Call calldata"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2171:5:0","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":16,"src":"2166:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":124,"name":"call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2178:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$19_calldata_ptr","typeString":"struct BaseAccount.Call calldata"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2183:4:0","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2178:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[],"expression":{"argumentTypes":[],"id":126,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2189:7:0","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":118,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"2143:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$1294_$","typeString":"type(library Exec)"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2148:4:0","memberName":"call","nodeType":"MemberAccess","referencedDeclaration":1241,"src":"2143:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,uint256) returns (bool)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2143:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2133:66:0"},{"condition":{"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2217:3:0","subExpression":{"id":130,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2218:2:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":152,"nodeType":"IfStatement","src":"2213:223:0","trueBody":{"id":151,"nodeType":"Block","src":"2222:214:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":132,"name":"callsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2244:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2244:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":149,"nodeType":"Block","src":"2336:86:0","statements":[{"errorCall":{"arguments":[{"id":142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2378:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2400:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":143,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"2381:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$1294_$","typeString":"type(library Exec)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2386:13:0","memberName":"getReturnData","nodeType":"MemberAccess","referencedDeclaration":1276,"src":"2381:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":141,"name":"ExecuteError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2365:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_error_$","typeString":"function (uint256,bytes memory) pure returns (error)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":148,"nodeType":"RevertStatement","src":"2358:45:0"}]},"id":150,"nodeType":"IfStatement","src":"2240:182:0","trueBody":{"id":140,"nodeType":"Block","src":"2262:68:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":135,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"2284:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$1294_$","typeString":"type(library Exec)"}},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2289:20:0","memberName":"revertWithReturnData","nodeType":"MemberAccess","referencedDeclaration":1293,"src":"2284:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$__$","typeString":"function () pure"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":139,"nodeType":"ExpressionStatement","src":"2284:27:0"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2054:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":104,"name":"callsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2058:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2054:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":154,"initializationExpression":{"assignments":[100],"declarations":[{"constant":false,"id":100,"mutability":"mutable","name":"i","nameLocation":"2047:1:0","nodeType":"VariableDeclaration","scope":154,"src":"2039:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":102,"initialValue":{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2051:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2039:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2071:3:0","subExpression":{"id":106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2071:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":108,"nodeType":"ExpressionStatement","src":"2071:3:0"},"nodeType":"ForStatement","src":"2034:412:0"}]},"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"1644:238:0","text":" execute a batch of calls.\n revert on the first call that fails.\n If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,\n  to mark the failing call index."},"functionSelector":"34fcd5be","id":156,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"1896:12:0","nodeType":"FunctionDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"calls","nameLocation":"1925:5:0","nodeType":"VariableDeclaration","scope":156,"src":"1909:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$19_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BaseAccount.Call[]"},"typeName":{"baseType":{"id":86,"nodeType":"UserDefinedTypeName","pathNode":{"id":85,"name":"Call","nameLocations":["1909:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1909:4:0"},"referencedDeclaration":19,"src":"1909:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$19_storage_ptr","typeString":"struct BaseAccount.Call"}},"id":87,"nodeType":"ArrayTypeName","src":"1909:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$19_storage_$dyn_storage_ptr","typeString":"struct BaseAccount.Call[]"}},"visibility":"internal"}],"src":"1908:23:0"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"1949:0:0"},"scope":261,"src":"1887:565:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"baseFunctions":[802],"body":{"id":189,"nodeType":"Block","src":"2686:186:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":170,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"2696:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":172,"nodeType":"ExpressionStatement","src":"2696:24:0"},{"expression":{"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":173,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2730:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":175,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2766:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":176,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2774:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":174,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2747:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PackedUserOperation_$1223_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct PackedUserOperation calldata,bytes32) returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2730:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":179,"nodeType":"ExpressionStatement","src":"2730:55:0"},{"expression":{"arguments":[{"expression":{"id":181,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2810:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2817:5:0","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"2810:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":180,"name":"_validateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2795:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2795:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"2795:28:0"},{"expression":{"arguments":[{"id":186,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2845:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":185,"name":"_payPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2833:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2833:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"2833:32:0"}]},"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"2458:24:0","text":"@inheritdoc IAccount"},"functionSelector":"19822f7c","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2496:14:0","nodeType":"FunctionDefinition","overrides":{"id":166,"nodeType":"OverrideSpecifier","overrides":[],"src":"2644:8:0"},"parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"userOp","nameLocation":"2549:6:0","nodeType":"VariableDeclaration","scope":190,"src":"2520:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"PackedUserOperation","nameLocations":["2520:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"2520:19:0"},"referencedDeclaration":1223,"src":"2520:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"userOpHash","nameLocation":"2573:10:0","nodeType":"VariableDeclaration","scope":190,"src":"2565:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2565:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2601:19:0","nodeType":"VariableDeclaration","scope":190,"src":"2593:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2593:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2510:116:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"validationData","nameLocation":"2670:14:0","nodeType":"VariableDeclaration","scope":190,"src":"2662:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2662:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2661:24:0"},"scope":261,"src":"2487:385:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":206,"nodeType":"Block","src":"3009:127:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":195,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3040:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3044:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3040:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":199,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3062:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$1022_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}],"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3054:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"3054:7:0","typeDescriptions":{}}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3040:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3089:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""},"value":"account: not from EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""}],"id":194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3019:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:110:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"3019:110:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2878:70:0","text":" Ensure the request comes from the known entrypoint."},"id":207,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"2962:22:0","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2984:2:0"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"3009:0:0"},"scope":261,"src":"2953:183:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":213,"nodeType":"Block","src":"3194:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":210,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3204:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3204:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"ExpressionStatement","src":"3204:24:0"}]},"id":214,"implemented":true,"kind":"function","modifiers":[],"name":"_requireForExecute","nameLocation":"3151:18:0","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3169:2:0"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"3194:0:0"},"scope":261,"src":"3142:93:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3241:1114:0","text":" Validate the signature is valid for this message.\n @param userOp          - Validate the userOp.signature field.\n @param userOpHash      - Convenient field: the hash of the request, to check the signature against.\n                          (also hashes the entrypoint and chain id)\n @return validationData - Signature and time-range of this operation.\n                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                    otherwise, an address of an aggregator contract.\n                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          If the account doesn't use time-range, it is enough to return\n                          SIG_VALIDATION_FAILED value (1) for signature failure.\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"id":225,"implemented":false,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"4369:18:0","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"userOp","nameLocation":"4426:6:0","nodeType":"VariableDeclaration","scope":225,"src":"4397:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":217,"nodeType":"UserDefinedTypeName","pathNode":{"id":216,"name":"PackedUserOperation","nameLocations":["4397:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"4397:19:0"},"referencedDeclaration":1223,"src":"4397:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"userOpHash","nameLocation":"4450:10:0","nodeType":"VariableDeclaration","scope":225,"src":"4442:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4442:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4387:79:0"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"validationData","nameLocation":"4501:14:0","nodeType":"VariableDeclaration","scope":225,"src":"4493:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"4493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4492:24:0"},"scope":261,"src":"4360:157:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"5229:7:0","statements":[]},"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"4523:640:0","text":" Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"},"id":232,"implemented":true,"kind":"function","modifiers":[],"name":"_validateNonce","nameLocation":"5177:14:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"nonce","nameLocation":"5200:5:0","nodeType":"VariableDeclaration","scope":232,"src":"5192:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"5192:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5191:15:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"5229:0:0"},"scope":261,"src":"5168:68:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":259,"nodeType":"Block","src":"5878:283:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":238,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"5892:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5892:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":258,"nodeType":"IfStatement","src":"5888:267:0","trueBody":{"id":257,"nodeType":"Block","src":"5918:237:0","statements":[{"assignments":[242,null],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"success","nameLocation":"5938:7:0","nodeType":"VariableDeclaration","scope":257,"src":"5933:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":241,"name":"bool","nodeType":"ElementaryTypeName","src":"5933:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":253,"initialValue":{"arguments":[{"hexValue":"","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6041:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":245,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5958:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5962:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5958:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5950:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"5950:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5950:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5970:4:0","memberName":"call","nodeType":"MemberAccess","src":"5950:24:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":249,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6003:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5950:90:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5950:94:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5932:112:0"},{"expression":{"components":[{"id":254,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6059:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6058:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":256,"nodeType":"ExpressionStatement","src":"6058:9:0"}]}}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"5242:564:0","text":" Sends to the entrypoint (msg.sender) the missing funds for this transaction.\n SubClass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again).\n @param missingAccountFunds - The minimum value this method should send the entrypoint.\n                              This value MAY be zero, in case there is enough deposit,\n                              or the userOp has a paymaster."},"id":260,"implemented":true,"kind":"function","modifiers":[],"name":"_payPrefund","nameLocation":"5820:11:0","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"5840:19:0","nodeType":"VariableDeclaration","scope":260,"src":"5832:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5832:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5831:29:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"5878:0:0"},"scope":261,"src":"5811:350:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":262,"src":"554:5609:0","usedErrors":[25],"usedEvents":[]}],"src":"32:6132:0"},"id":0},"@account-abstraction/contracts/core/Helpers.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","exportedSymbols":{"SIG_VALIDATION_FAILED":[266],"SIG_VALIDATION_SUCCESS":[269],"ValidationData":[277],"_packValidationData":[374,412],"_parseValidationData":[337],"calldataKeccak":[422],"finalizeAllocation":[450],"min":[440]},"id":451,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":263,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:1"},{"constant":true,"id":266,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"277:21:1","nodeType":"VariableDeclaration","scope":451,"src":"260:42:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"301:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":269,"mutability":"constant","name":"SIG_VALIDATION_SUCCESS","nameLocation":"436:22:1","nodeType":"VariableDeclaration","scope":451,"src":"419:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"419:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"461:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"canonicalName":"ValidationData","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"466:659:1","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, which is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"."},"id":277,"members":[{"constant":false,"id":272,"mutability":"mutable","name":"aggregator","nameLocation":"1162:10:1","nodeType":"VariableDeclaration","scope":277,"src":"1154:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"validAfter","nameLocation":"1185:10:1","nodeType":"VariableDeclaration","scope":277,"src":"1178:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":273,"name":"uint48","nodeType":"ElementaryTypeName","src":"1178:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"validUntil","nameLocation":"1208:10:1","nodeType":"VariableDeclaration","scope":277,"src":"1201:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":275,"name":"uint48","nodeType":"ElementaryTypeName","src":"1201:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"1133:14:1","nodeType":"StructDefinition","scope":451,"src":"1126:95:1","visibility":"public"},{"body":{"id":336,"nodeType":"Block","src":"1556:314:1","statements":[{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"aggregator","nameLocation":"1570:10:1","nodeType":"VariableDeclaration","scope":336,"src":"1562:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":295,"initialValue":{"arguments":[{"arguments":[{"id":292,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1599:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1591:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":290,"name":"uint160","nodeType":"ElementaryTypeName","src":"1591:7:1","typeDescriptions":{}}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1591:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1583:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:1","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1583:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1562:53:1"},{"assignments":[297],"declarations":[{"constant":false,"id":297,"mutability":"mutable","name":"validUntil","nameLocation":"1628:10:1","nodeType":"VariableDeclaration","scope":336,"src":"1621:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":296,"name":"uint48","nodeType":"ElementaryTypeName","src":"1621:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":304,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":300,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1648:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1666:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1648:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1641:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":298,"name":"uint48","nodeType":"ElementaryTypeName","src":"1641:6:1","typeDescriptions":{}}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1621:49:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1680:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1694:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1680:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":317,"nodeType":"IfStatement","src":"1676:67:1","trueBody":{"id":316,"nodeType":"Block","src":"1697:46:1","statements":[{"expression":{"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":308,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1707:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1725:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":310,"name":"uint48","nodeType":"ElementaryTypeName","src":"1725:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":309,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1720:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1720:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1733:3:1","memberName":"max","nodeType":"MemberAccess","src":"1720:16:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1707:29:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":315,"nodeType":"ExpressionStatement","src":"1707:29:1"}]}},{"assignments":[319],"declarations":[{"constant":false,"id":319,"mutability":"mutable","name":"validAfter","nameLocation":"1755:10:1","nodeType":"VariableDeclaration","scope":336,"src":"1748:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":318,"name":"uint48","nodeType":"ElementaryTypeName","src":"1748:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":329,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":322,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1775:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1794:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1799:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1794:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1793:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1775:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1768:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":320,"name":"uint48","nodeType":"ElementaryTypeName","src":"1768:6:1","typeDescriptions":{}}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1748:56:1"},{"expression":{"arguments":[{"id":331,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"1832:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1844:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":333,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1856:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":330,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"1817:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$277_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$277_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":285,"id":335,"nodeType":"Return","src":"1810:57:1"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"1223:230:1","text":" Extract aggregator/sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data.\n @return data - The unpacked in-memory validation data."},"id":337,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1463:20:1","nodeType":"FunctionDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"validationData","nameLocation":"1497:14:1","nodeType":"VariableDeclaration","scope":337,"src":"1489:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1483:30:1"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"data","nameLocation":"1550:4:1","nodeType":"VariableDeclaration","scope":337,"src":"1528:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$277_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":283,"nodeType":"UserDefinedTypeName","pathNode":{"id":282,"name":"ValidationData","nameLocations":["1528:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":277,"src":"1528:14:1"},"referencedDeclaration":277,"src":"1528:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$277_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1527:28:1"},"scope":451,"src":"1454:416:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"2105:143:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":348,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"2134:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$277_memory_ptr","typeString":"struct ValidationData memory"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2139:10:1","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":272,"src":"2134:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2126:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":346,"name":"uint160","nodeType":"ElementaryTypeName","src":"2126:7:1","typeDescriptions":{}}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":353,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"2170:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$277_memory_ptr","typeString":"struct ValidationData memory"}},"id":354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2175:10:1","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":276,"src":"2170:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2162:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:1","typeDescriptions":{}}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2190:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2162:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2161:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:68:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":362,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"2214:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$277_memory_ptr","typeString":"struct ValidationData memory"}},"id":363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2219:10:1","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":274,"src":"2214:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2206:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2206:7:1","typeDescriptions":{}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2206:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2235:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2235:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2234:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2206:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2205:40:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:119:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":345,"id":372,"nodeType":"Return","src":"2111:134:1"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1872:146:1","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack.\n @return the packed validation data."},"id":374,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2028:19:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"data","nameLocation":"2075:4:1","nodeType":"VariableDeclaration","scope":374,"src":"2053:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$277_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":340,"nodeType":"UserDefinedTypeName","pathNode":{"id":339,"name":"ValidationData","nameLocations":["2053:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":277,"src":"2053:14:1"},"referencedDeclaration":277,"src":"2053:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$277_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2047:34:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":374,"src":"2096:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2095:9:1"},"scope":451,"src":"2019:229:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":411,"nodeType":"Block","src":"2731:170:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":386,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2753:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":388,"name":"SIG_VALIDATION_SUCCESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2790:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2753:59:1","trueExpression":{"id":387,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2766:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2752:61:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":393,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2833:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2825:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2825:7:1","typeDescriptions":{}}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2848:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2825:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2824:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2752:100:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":401,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2872:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:1","typeDescriptions":{}}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2888:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2894:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2888:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2887:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2864:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2863:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2752:146:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":385,"id":410,"nodeType":"Return","src":"2737:161:1"}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"2250:360:1","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n @param validAfter - First timestamp this UserOperation is valid.\n @return the packed validation data."},"id":412,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2620:19:1","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"sigFailed","nameLocation":"2650:9:1","nodeType":"VariableDeclaration","scope":412,"src":"2645:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":376,"name":"bool","nodeType":"ElementaryTypeName","src":"2645:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"validUntil","nameLocation":"2672:10:1","nodeType":"VariableDeclaration","scope":412,"src":"2665:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":378,"name":"uint48","nodeType":"ElementaryTypeName","src":"2665:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"validAfter","nameLocation":"2695:10:1","nodeType":"VariableDeclaration","scope":412,"src":"2688:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":380,"name":"uint48","nodeType":"ElementaryTypeName","src":"2688:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2639:68:1"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"2722:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2721:9:1"},"scope":451,"src":"2611:290:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":421,"nodeType":"Block","src":"3277:209:1","statements":[{"AST":{"nativeSrc":"3312:168:1","nodeType":"YulBlock","src":"3312:168:1","statements":[{"nativeSrc":"3326:22:1","nodeType":"YulVariableDeclaration","src":"3326:22:1","value":{"arguments":[{"kind":"number","nativeSrc":"3343:4:1","nodeType":"YulLiteral","src":"3343:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3337:5:1","nodeType":"YulIdentifier","src":"3337:5:1"},"nativeSrc":"3337:11:1","nodeType":"YulFunctionCall","src":"3337:11:1"},"variables":[{"name":"mem","nativeSrc":"3330:3:1","nodeType":"YulTypedName","src":"3330:3:1","type":""}]},{"nativeSrc":"3361:22:1","nodeType":"YulVariableDeclaration","src":"3361:22:1","value":{"name":"data.length","nativeSrc":"3372:11:1","nodeType":"YulIdentifier","src":"3372:11:1"},"variables":[{"name":"len","nativeSrc":"3365:3:1","nodeType":"YulTypedName","src":"3365:3:1","type":""}]},{"expression":{"arguments":[{"name":"mem","nativeSrc":"3409:3:1","nodeType":"YulIdentifier","src":"3409:3:1"},{"name":"data.offset","nativeSrc":"3414:11:1","nodeType":"YulIdentifier","src":"3414:11:1"},{"name":"len","nativeSrc":"3427:3:1","nodeType":"YulIdentifier","src":"3427:3:1"}],"functionName":{"name":"calldatacopy","nativeSrc":"3396:12:1","nodeType":"YulIdentifier","src":"3396:12:1"},"nativeSrc":"3396:35:1","nodeType":"YulFunctionCall","src":"3396:35:1"},"nativeSrc":"3396:35:1","nodeType":"YulExpressionStatement","src":"3396:35:1"},{"nativeSrc":"3444:26:1","nodeType":"YulAssignment","src":"3444:26:1","value":{"arguments":[{"name":"mem","nativeSrc":"3461:3:1","nodeType":"YulIdentifier","src":"3461:3:1"},{"name":"len","nativeSrc":"3466:3:1","nodeType":"YulIdentifier","src":"3466:3:1"}],"functionName":{"name":"keccak256","nativeSrc":"3451:9:1","nodeType":"YulIdentifier","src":"3451:9:1"},"nativeSrc":"3451:19:1","nodeType":"YulFunctionCall","src":"3451:19:1"},"variableNames":[{"name":"ret","nativeSrc":"3444:3:1","nodeType":"YulIdentifier","src":"3444:3:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":415,"isOffset":false,"isSlot":false,"src":"3372:11:1","suffix":"length","valueSize":1},{"declaration":415,"isOffset":true,"isSlot":false,"src":"3414:11:1","suffix":"offset","valueSize":1},{"declaration":418,"isOffset":false,"isSlot":false,"src":"3444:3:1","valueSize":1}],"flags":["memory-safe"],"id":420,"nodeType":"InlineAssembly","src":"3287:193:1"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"2903:297:1","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n @param data - the calldata bytes array to perform keccak on.\n @return ret - the keccak hash of the 'data' array."},"id":422,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3214:14:1","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"data","nameLocation":"3244:4:1","nodeType":"VariableDeclaration","scope":422,"src":"3229:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3228:21:1"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"ret","nameLocation":"3272:3:1","nodeType":"VariableDeclaration","scope":422,"src":"3264:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3264:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3263:13:1"},"scope":451,"src":"3205:281:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":439,"nodeType":"Block","src":"3679:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3696:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3700:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3696:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3708:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3696:13:1","trueExpression":{"id":435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3704:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":431,"id":438,"nodeType":"Return","src":"3689:20:1"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"3489:127:1","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number.\n @return - the minimum value."},"id":440,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"min","nameLocation":"3630:3:1","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"a","nameLocation":"3642:1:1","nodeType":"VariableDeclaration","scope":440,"src":"3634:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"b","nameLocation":"3653:1:1","nodeType":"VariableDeclaration","scope":440,"src":"3645:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3633:22:1"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":440,"src":"3670:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"3670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3669:9:1"},"scope":451,"src":"3621:95:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":449,"nodeType":"Block","src":"4009:430:1","statements":[{"AST":{"nativeSrc":"4044:389:1","nodeType":"YulBlock","src":"4044:389:1","statements":[{"expression":{"arguments":[{"name":"memPointer","nativeSrc":"4078:10:1","nodeType":"YulIdentifier","src":"4078:10:1"},{"name":"allocationSize","nativeSrc":"4090:14:1","nodeType":"YulIdentifier","src":"4090:14:1"}],"functionName":{"name":"finalize_allocation","nativeSrc":"4058:19:1","nodeType":"YulIdentifier","src":"4058:19:1"},"nativeSrc":"4058:47:1","nodeType":"YulFunctionCall","src":"4058:47:1"},"nativeSrc":"4058:47:1","nodeType":"YulExpressionStatement","src":"4058:47:1"},{"body":{"nativeSrc":"4162:129:1","nodeType":"YulBlock","src":"4162:129:1","statements":[{"nativeSrc":"4180:58:1","nodeType":"YulVariableDeclaration","src":"4180:58:1","value":{"arguments":[{"name":"memPtr","nativeSrc":"4202:6:1","nodeType":"YulIdentifier","src":"4202:6:1"},{"arguments":[{"name":"size","nativeSrc":"4232:4:1","nodeType":"YulIdentifier","src":"4232:4:1"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4210:21:1","nodeType":"YulIdentifier","src":"4210:21:1"},"nativeSrc":"4210:27:1","nodeType":"YulFunctionCall","src":"4210:27:1"}],"functionName":{"name":"add","nativeSrc":"4198:3:1","nodeType":"YulIdentifier","src":"4198:3:1"},"nativeSrc":"4198:40:1","nodeType":"YulFunctionCall","src":"4198:40:1"},"variables":[{"name":"newFreePtr","nativeSrc":"4184:10:1","nodeType":"YulTypedName","src":"4184:10:1","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4262:2:1","nodeType":"YulLiteral","src":"4262:2:1","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4266:10:1","nodeType":"YulIdentifier","src":"4266:10:1"}],"functionName":{"name":"mstore","nativeSrc":"4255:6:1","nodeType":"YulIdentifier","src":"4255:6:1"},"nativeSrc":"4255:22:1","nodeType":"YulFunctionCall","src":"4255:22:1"},"nativeSrc":"4255:22:1","nodeType":"YulExpressionStatement","src":"4255:22:1"}]},"name":"finalize_allocation","nativeSrc":"4119:172:1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4148:6:1","nodeType":"YulTypedName","src":"4148:6:1","type":""},{"name":"size","nativeSrc":"4156:4:1","nodeType":"YulTypedName","src":"4156:4:1","type":""}],"src":"4119:172:1"},{"body":{"nativeSrc":"4353:70:1","nodeType":"YulBlock","src":"4353:70:1","statements":[{"nativeSrc":"4371:38:1","nodeType":"YulAssignment","src":"4371:38:1","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4389:5:1","nodeType":"YulIdentifier","src":"4389:5:1"},{"kind":"number","nativeSrc":"4396:2:1","nodeType":"YulLiteral","src":"4396:2:1","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4385:3:1","nodeType":"YulIdentifier","src":"4385:3:1"},"nativeSrc":"4385:14:1","nodeType":"YulFunctionCall","src":"4385:14:1"},{"arguments":[{"kind":"number","nativeSrc":"4405:2:1","nodeType":"YulLiteral","src":"4405:2:1","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4401:3:1","nodeType":"YulIdentifier","src":"4401:3:1"},"nativeSrc":"4401:7:1","nodeType":"YulFunctionCall","src":"4401:7:1"}],"functionName":{"name":"and","nativeSrc":"4381:3:1","nodeType":"YulIdentifier","src":"4381:3:1"},"nativeSrc":"4381:28:1","nodeType":"YulFunctionCall","src":"4381:28:1"},"variableNames":[{"name":"result","nativeSrc":"4371:6:1","nodeType":"YulIdentifier","src":"4371:6:1"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"4305:118:1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4336:5:1","nodeType":"YulTypedName","src":"4336:5:1","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4346:6:1","nodeType":"YulTypedName","src":"4346:6:1","type":""}],"src":"4305:118:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":445,"isOffset":false,"isSlot":false,"src":"4090:14:1","valueSize":1},{"declaration":443,"isOffset":false,"isSlot":false,"src":"4078:10:1","valueSize":1}],"flags":["memory-safe"],"id":448,"nodeType":"InlineAssembly","src":"4020:413:1"}]},"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"3718:209:1","text":" standard solidity memory allocation finalization.\n copied from solidity generated code\n @param memPointer - The current memory pointer\n @param allocationSize - Bytes allocated from memPointer."},"id":450,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"finalizeAllocation","nameLocation":"3941:18:1","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"memPointer","nameLocation":"3968:10:1","nodeType":"VariableDeclaration","scope":450,"src":"3960:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"3960:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"allocationSize","nameLocation":"3988:14:1","nodeType":"VariableDeclaration","scope":450,"src":"3980:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3959:44:1"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"4009:0:1"},"scope":451,"src":"3932:507:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"32:4408:1"},"id":1},"@account-abstraction/contracts/core/UserOperationLib.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/UserOperationLib.sol","exportedSymbols":{"PackedUserOperation":[1223],"UserOperationLib":[786],"calldataKeccak":[422],"min":[440]},"id":787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":452,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"../interfaces/PackedUserOperation.sol","id":453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":787,"sourceUnit":1224,"src":"100:47:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","file":"./Helpers.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":787,"sourceUnit":451,"src":"148:50:2","symbolAliases":[{"foreign":{"id":454,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"156:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":455,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"172:3:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"200:77:2","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":786,"linearizedBaseContracts":[786],"name":"UserOperationLib","nameLocation":"286:16:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"b29a8ff4","id":460,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"334:31:2","nodeType":"VariableDeclaration","scope":786,"src":"310:60:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"368:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"25093e1b","id":463,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"400:27:2","nodeType":"VariableDeclaration","scope":786,"src":"376:56:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"430:2:2","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"public"},{"constant":true,"functionSelector":"ede31502","id":466,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"462:21:2","nodeType":"VariableDeclaration","scope":786,"src":"438:50:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"486:2:2","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"public"},{"body":{"id":493,"nodeType":"Block","src":"795:209:2","statements":[{"id":492,"nodeType":"UncheckedBlock","src":"805:193:2","statements":[{"assignments":[476,478],"declarations":[{"constant":false,"id":476,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"838:20:2","nodeType":"VariableDeclaration","scope":492,"src":"830:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"868:12:2","nodeType":"VariableDeclaration","scope":492,"src":"860:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":483,"initialValue":{"arguments":[{"expression":{"id":480,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"896:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"903:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"896:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":479,"name":"unpackUints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"884:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"884:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"829:82:2"},{"expression":{"arguments":[{"id":485,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"936:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"950:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":487,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"973:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"979:7:2","memberName":"basefee","nodeType":"MemberAccess","src":"973:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"950:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":484,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"932:3:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":474,"id":491,"nodeType":"Return","src":"925:62:2"}]}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"495:194:2","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":494,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"703:8:2","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"userOp","nameLocation":"750:6:2","nodeType":"VariableDeclaration","scope":494,"src":"721:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"PackedUserOperation","nameLocations":["721:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"721:19:2"},"referencedDeclaration":1223,"src":"721:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"711:51:2"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"786:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"785:9:2"},"scope":786,"src":"694:310:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":499,"mutability":"constant","name":"PACKED_USEROP_TYPEHASH","nameLocation":"1036:22:2","nodeType":"VariableDeclaration","scope":786,"src":"1010:252:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1010:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5061636b6564557365724f7065726174696f6e28616464726573732073656e6465722c75696e74323536206e6f6e63652c627974657320696e6974436f64652c62797465732063616c6c446174612c62797465733332206163636f756e744761734c696d6974732c75696e7432353620707265566572696669636174696f6e4761732c6279746573333220676173466565732c6279746573207061796d6173746572416e644461746129","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1084:172:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e","typeString":"literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""},"value":"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e","typeString":"literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""}],"id":496,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1065:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:197:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":575,"nodeType":"Block","src":"1641:761:2","statements":[{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"sender","nameLocation":"1659:6:2","nodeType":"VariableDeclaration","scope":575,"src":"1651:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"expression":{"id":512,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"1668:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1675:6:2","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"1668:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1651:30:2"},{"assignments":[516],"declarations":[{"constant":false,"id":516,"mutability":"mutable","name":"nonce","nameLocation":"1699:5:2","nodeType":"VariableDeclaration","scope":575,"src":"1691:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":519,"initialValue":{"expression":{"id":517,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"1707:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1714:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"1707:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1691:28:2"},{"assignments":[521],"declarations":[{"constant":false,"id":521,"mutability":"mutable","name":"hashInitCode","nameLocation":"1737:12:2","nodeType":"VariableDeclaration","scope":575,"src":"1729:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1729:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":531,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":522,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1752:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1776:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1752:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":527,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"1818:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1825:8:2","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"1818:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":526,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"1803:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1752:82:2","trueExpression":{"id":525,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1780:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1729:105:2"},{"assignments":[533],"declarations":[{"constant":false,"id":533,"mutability":"mutable","name":"hashCallData","nameLocation":"1852:12:2","nodeType":"VariableDeclaration","scope":575,"src":"1844:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1844:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":538,"initialValue":{"arguments":[{"expression":{"id":535,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"1882:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:8:2","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":1212,"src":"1882:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":534,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"1867:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1867:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1844:54:2"},{"assignments":[540],"declarations":[{"constant":false,"id":540,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1916:16:2","nodeType":"VariableDeclaration","scope":575,"src":"1908:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":543,"initialValue":{"expression":{"id":541,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"1935:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1214,"src":"1935:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1908:50:2"},{"assignments":[545],"declarations":[{"constant":false,"id":545,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1976:18:2","nodeType":"VariableDeclaration","scope":575,"src":"1968:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1968:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":548,"initialValue":{"expression":{"id":546,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"1997:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2004:18:2","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":1216,"src":"1997:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1968:54:2"},{"assignments":[550],"declarations":[{"constant":false,"id":550,"mutability":"mutable","name":"gasFees","nameLocation":"2040:7:2","nodeType":"VariableDeclaration","scope":575,"src":"2032:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":553,"initialValue":{"expression":{"id":551,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2050:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2057:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"2050:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2032:32:2"},{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2082:20:2","nodeType":"VariableDeclaration","scope":575,"src":"2074:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2074:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":560,"initialValue":{"arguments":[{"expression":{"id":557,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2120:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2127:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"2120:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":556,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2105:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2074:70:2"},{"expression":{"arguments":[{"expression":{"id":563,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"2186:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$786_$","typeString":"type(library UserOperationLib)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2203:22:2","memberName":"PACKED_USEROP_TYPEHASH","nodeType":"MemberAccess","referencedDeclaration":499,"src":"2186:39:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":565,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2239:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2247:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":567,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2266:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":568,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2280:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":569,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"2306:16:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":570,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"2324:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":571,"name":"gasFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2344:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":572,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"2365:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":561,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2162:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2166:6:2","memberName":"encode","nodeType":"MemberAccess","src":"2162:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:233:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":509,"id":574,"nodeType":"Return","src":"2155:240:2"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"1269:221:2","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp."},"id":576,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"1504:6:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"userOp","nameLocation":"1549:6:2","nodeType":"VariableDeclaration","scope":576,"src":"1520:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":502,"nodeType":"UserDefinedTypeName","pathNode":{"id":501,"name":"PackedUserOperation","nameLocations":["1520:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"1520:19:2"},"referencedDeclaration":1223,"src":"1520:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"overrideInitCodeHash","nameLocation":"1573:20:2","nodeType":"VariableDeclaration","scope":576,"src":"1565:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1565:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1510:89:2"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"ret","nameLocation":"1636:3:2","nodeType":"VariableDeclaration","scope":576,"src":"1623:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":507,"name":"bytes","nodeType":"ElementaryTypeName","src":"1623:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1622:18:2"},"scope":786,"src":"1495:907:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"2515:69:2","statements":[{"expression":{"components":[{"arguments":[{"id":586,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2547:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":585,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"2533:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":589,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2569:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":588,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2556:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2532:45:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":584,"id":592,"nodeType":"Return","src":"2525:52:2"}]},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"unpackUints","nameLocation":"2417:11:2","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"packed","nameLocation":"2446:6:2","nodeType":"VariableDeclaration","scope":594,"src":"2438:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2428:30:2"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"high128","nameLocation":"2490:7:2","nodeType":"VariableDeclaration","scope":594,"src":"2482:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"low128","nameLocation":"2507:6:2","nodeType":"VariableDeclaration","scope":594,"src":"2499:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2481:33:2"},"scope":786,"src":"2408:176:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":608,"nodeType":"Block","src":"2718:46:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":603,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"2743:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2735:7:2","typeDescriptions":{}}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2754:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2735:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":600,"id":607,"nodeType":"Return","src":"2728:29:2"}]},"id":609,"implemented":true,"kind":"function","modifiers":[],"name":"unpackHigh128","nameLocation":"2656:13:2","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"packed","nameLocation":"2678:6:2","nodeType":"VariableDeclaration","scope":609,"src":"2670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2670:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2669:16:2"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":609,"src":"2709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:9:2"},"scope":786,"src":"2647:117:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":624,"nodeType":"Block","src":"2896:48:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":620,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"2929:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2921:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2921:7:2","typeDescriptions":{}}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":616,"name":"uint128","nodeType":"ElementaryTypeName","src":"2913:7:2","typeDescriptions":{}}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":615,"id":623,"nodeType":"Return","src":"2906:31:2"}]},"id":625,"implemented":true,"kind":"function","modifiers":[],"name":"unpackLow128","nameLocation":"2835:12:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"packed","nameLocation":"2856:6:2","nodeType":"VariableDeclaration","scope":625,"src":"2848:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2848:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2847:16:2"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":625,"src":"2887:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2886:9:2"},"scope":786,"src":"2826:118:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"3059:53:2","statements":[{"expression":{"arguments":[{"expression":{"id":634,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3090:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3097:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"3090:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":633,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3076:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":632,"id":637,"nodeType":"Return","src":"3069:36:2"}]},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxPriorityFeePerGas","nameLocation":"2959:26:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"userOp","nameLocation":"3015:6:2","nodeType":"VariableDeclaration","scope":639,"src":"2986:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":627,"nodeType":"UserDefinedTypeName","pathNode":{"id":626,"name":"PackedUserOperation","nameLocations":["2986:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"2986:19:2"},"referencedDeclaration":1223,"src":"2986:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"2985:37:2"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":639,"src":"3050:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:2"},"scope":786,"src":"2950:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":652,"nodeType":"Block","src":"3219:52:2","statements":[{"expression":{"arguments":[{"expression":{"id":648,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"3249:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"3249:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":647,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"3236:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":646,"id":651,"nodeType":"Return","src":"3229:35:2"}]},"id":653,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxFeePerGas","nameLocation":"3127:18:2","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"userOp","nameLocation":"3175:6:2","nodeType":"VariableDeclaration","scope":653,"src":"3146:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":641,"nodeType":"UserDefinedTypeName","pathNode":{"id":640,"name":"PackedUserOperation","nameLocations":["3146:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"3146:19:2"},"referencedDeclaration":1223,"src":"3146:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3145:37:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":653,"src":"3210:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:2"},"scope":786,"src":"3118:153:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"3386:62:2","statements":[{"expression":{"arguments":[{"expression":{"id":662,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"3417:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1214,"src":"3417:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":661,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3403:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3403:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":660,"id":665,"nodeType":"Return","src":"3396:45:2"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"unpackVerificationGasLimit","nameLocation":"3286:26:2","nodeType":"FunctionDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"userOp","nameLocation":"3342:6:2","nodeType":"VariableDeclaration","scope":667,"src":"3313:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":655,"nodeType":"UserDefinedTypeName","pathNode":{"id":654,"name":"PackedUserOperation","nameLocations":["3313:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"3313:19:2"},"referencedDeclaration":1223,"src":"3313:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3312:37:2"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"3377:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"3377:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3376:9:2"},"scope":786,"src":"3277:171:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":680,"nodeType":"Block","src":"3555:61:2","statements":[{"expression":{"arguments":[{"expression":{"id":676,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3585:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3592:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1214,"src":"3585:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":675,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"3572:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":674,"id":679,"nodeType":"Return","src":"3565:44:2"}]},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"unpackCallGasLimit","nameLocation":"3463:18:2","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"userOp","nameLocation":"3511:6:2","nodeType":"VariableDeclaration","scope":681,"src":"3482:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":669,"nodeType":"UserDefinedTypeName","pathNode":{"id":668,"name":"PackedUserOperation","nameLocations":["3482:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"3482:19:2"},"referencedDeclaration":1223,"src":"3482:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3481:37:2"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"3546:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"3546:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3545:9:2"},"scope":786,"src":"3454:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"3740:128:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":693,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"3773:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3780:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"3773:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":696,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3831:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3773:86:2","startExpression":{"id":695,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"3797:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3765:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":691,"name":"bytes16","nodeType":"ElementaryTypeName","src":"3765:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3757:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":689,"name":"uint128","nodeType":"ElementaryTypeName","src":"3757:7:2","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:104:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":688,"id":700,"nodeType":"Return","src":"3750:111:2"}]},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterVerificationGasLimit","nameLocation":"3631:35:2","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"userOp","nameLocation":"3696:6:2","nodeType":"VariableDeclaration","scope":702,"src":"3667:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":683,"nodeType":"UserDefinedTypeName","pathNode":{"id":682,"name":"PackedUserOperation","nameLocations":["3667:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"3667:19:2"},"referencedDeclaration":1223,"src":"3667:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3666:37:2"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":702,"src":"3731:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3731:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3730:9:2"},"scope":786,"src":"3622:246:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"3977:118:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":714,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"4010:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4017:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"4010:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":717,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"4064:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4010:76:2","startExpression":{"id":716,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4034:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4002:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":712,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4002:7:2","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4002:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":710,"name":"uint128","nodeType":"ElementaryTypeName","src":"3994:7:2","typeDescriptions":{}}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:94:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":709,"id":721,"nodeType":"Return","src":"3987:101:2"}]},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPostOpGasLimit","nameLocation":"3883:20:2","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"userOp","nameLocation":"3933:6:2","nodeType":"VariableDeclaration","scope":723,"src":"3904:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":704,"nodeType":"UserDefinedTypeName","pathNode":{"id":703,"name":"PackedUserOperation","nameLocations":["3904:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"3904:19:2"},"referencedDeclaration":1223,"src":"3904:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3903:37:2"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"3968:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:2"},"scope":786,"src":"3874:221:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"4279:329:2","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"baseExpression":{"id":738,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4326:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":739,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"4345:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4326:51:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4318:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":736,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4318:7:2","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4310:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:2","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4310:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"baseExpression":{"id":747,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4409:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":749,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4460:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4409:79:2","startExpression":{"id":748,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"4426:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4401:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":745,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4401:7:2","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4401:88:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4393:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":743,"name":"uint128","nodeType":"ElementaryTypeName","src":"4393:7:2","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4393:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"baseExpression":{"id":757,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4520:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":759,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"4567:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4520:69:2","startExpression":{"id":758,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4537:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4512:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":755,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4512:7:2","typeDescriptions":{}}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":753,"name":"uint128","nodeType":"ElementaryTypeName","src":"4504:7:2","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:87:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4296:305:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint128_$_t_uint128_$","typeString":"tuple(address,uint128,uint128)"}},"functionReturnParameters":733,"id":764,"nodeType":"Return","src":"4289:312:2"}]},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterStaticFields","nameLocation":"4110:27:2","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"paymasterAndData","nameLocation":"4162:16:2","nodeType":"VariableDeclaration","scope":766,"src":"4147:31:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":724,"name":"bytes","nodeType":"ElementaryTypeName","src":"4147:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4137:47:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"paymaster","nameLocation":"4216:9:2","nodeType":"VariableDeclaration","scope":766,"src":"4208:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"validationGasLimit","nameLocation":"4235:18:2","nodeType":"VariableDeclaration","scope":766,"src":"4227:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"4227:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"postOpGasLimit","nameLocation":"4263:14:2","nodeType":"VariableDeclaration","scope":766,"src":"4255:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4207:71:2"},"scope":786,"src":"4101:507:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":784,"nodeType":"Block","src":"4971:71:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":779,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"5005:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":780,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"5013:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":778,"name":"encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4998:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$1223_calldata_ptr_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct PackedUserOperation calldata,bytes32) pure returns (bytes memory)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":777,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4988:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4988:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":776,"id":783,"nodeType":"Return","src":"4981:54:2"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"4614:217:2","text":" Hash the user operation data.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing."},"id":785,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"4845:4:2","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"userOp","nameLocation":"4888:6:2","nodeType":"VariableDeclaration","scope":785,"src":"4859:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":769,"nodeType":"UserDefinedTypeName","pathNode":{"id":768,"name":"PackedUserOperation","nameLocations":["4859:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"4859:19:2"},"referencedDeclaration":1223,"src":"4859:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"overrideInitCodeHash","nameLocation":"4912:20:2","nodeType":"VariableDeclaration","scope":785,"src":"4904:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4904:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4849:89:2"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":785,"src":"4962:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4962:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4961:9:2"},"scope":786,"src":"4836:206:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":787,"src":"278:4766:2","usedErrors":[],"usedEvents":[]}],"src":"32:5013:2"},"id":2},"@account-abstraction/contracts/interfaces/IAccount.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[803],"PackedUserOperation":[1223]},"id":804,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":788,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":804,"sourceUnit":1224,"src":"58:35:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":803,"linearizedBaseContracts":[803],"name":"IAccount","nameLocation":"105:8:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"120:2304:3","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp              - The operation that is about to be executed.\n @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n                              This is the minimum amount to transfer to the sender(entryPoint) to be\n                              able to make the call. The excess is left as a deposit in the entrypoint\n                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n                              In case there is a paymaster in the request (or the current deposit is high\n                              enough), this value will be zero.\n @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n                              `_unpackValidationData` to encode and decode.\n                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                 otherwise, an address of an \"aggregator\" contract.\n                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                              <6-byte> validAfter - First timestamp this operation is valid\n                                                    If an account doesn't use time-range, it is enough to\n                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n                              Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"19822f7c","id":802,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2438:14:3","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"userOp","nameLocation":"2491:6:3","nodeType":"VariableDeclaration","scope":802,"src":"2462:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"PackedUserOperation","nameLocations":["2462:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"2462:19:3"},"referencedDeclaration":1223,"src":"2462:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"userOpHash","nameLocation":"2515:10:3","nodeType":"VariableDeclaration","scope":802,"src":"2507:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2507:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2543:19:3","nodeType":"VariableDeclaration","scope":802,"src":"2535:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2452:116:3"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"validationData","nameLocation":"2595:14:3","nodeType":"VariableDeclaration","scope":802,"src":"2587:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"2587:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2586:24:3"},"scope":803,"src":"2429:182:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":804,"src":"95:2518:3","usedErrors":[],"usedEvents":[]}],"src":"32:2582:3"},"id":3},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[837],"PackedUserOperation":[1223]},"id":838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":805,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":838,"sourceUnit":1224,"src":"58:35:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"95:43:4","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":837,"linearizedBaseContracts":[837],"name":"IAggregator","nameLocation":"149:11:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"167:276:4","text":" Validate an aggregated signature.\n Reverts if the aggregated signature does not match the given list of operations.\n @param userOps   - An array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"2dd81133","id":817,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"457:18:4","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"userOps","nameLocation":"516:7:4","nodeType":"VariableDeclaration","scope":817,"src":"485:38:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1223_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":810,"nodeType":"UserDefinedTypeName","pathNode":{"id":809,"name":"PackedUserOperation","nameLocations":["485:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"485:19:4"},"referencedDeclaration":1223,"src":"485:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"id":811,"nodeType":"ArrayTypeName","src":"485:21:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1223_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"signature","nameLocation":"548:9:4","nodeType":"VariableDeclaration","scope":817,"src":"533:24:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"533:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"475:88:4"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"572:0:4"},"scope":837,"src":"448:125:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"579:614:4","text":" Validate the signature of a single userOp.\n This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n the aggregator this account uses.\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"062a422b","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1207:23:4","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"userOp","nameLocation":"1269:6:4","nodeType":"VariableDeclaration","scope":826,"src":"1240:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":820,"nodeType":"UserDefinedTypeName","pathNode":{"id":819,"name":"PackedUserOperation","nameLocations":["1240:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"1240:19:4"},"referencedDeclaration":1223,"src":"1240:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1230:51:4"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1318:12:4","nodeType":"VariableDeclaration","scope":826,"src":"1305:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":823,"name":"bytes","nodeType":"ElementaryTypeName","src":"1305:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1304:27:4"},"scope":837,"src":"1198:134:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"1338:393:4","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code to perform this aggregation.\n @param userOps              - An array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"ae574a43","id":836,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1745:19:4","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"userOps","nameLocation":"1805:7:4","nodeType":"VariableDeclaration","scope":836,"src":"1774:38:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1223_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":829,"nodeType":"UserDefinedTypeName","pathNode":{"id":828,"name":"PackedUserOperation","nameLocations":["1774:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"1774:19:4"},"referencedDeclaration":1223,"src":"1774:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"id":830,"nodeType":"ArrayTypeName","src":"1774:21:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1223_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"1764:54:4"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1855:19:4","nodeType":"VariableDeclaration","scope":836,"src":"1842:32:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":833,"name":"bytes","nodeType":"ElementaryTypeName","src":"1842:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1841:34:4"},"scope":837,"src":"1736:140:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":838,"src":"139:1739:4","usedErrors":[],"usedEvents":[]}],"src":"32:1847:4"},"id":4},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[837],"IEntryPoint":[1022],"INonceManager":[1041],"ISenderCreator":[1097],"IStakeManager":[1201],"PackedUserOperation":[1223]},"id":1023,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"159:24:5"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1023,"sourceUnit":1224,"src":"307:35:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1023,"sourceUnit":1202,"src":"343:29:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1023,"sourceUnit":838,"src":"373:27:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1023,"sourceUnit":1042,"src":"401:29:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/ISenderCreator.sol","file":"./ISenderCreator.sol","id":844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1023,"sourceUnit":1098,"src":"431:30:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":845,"name":"IStakeManager","nameLocations":["488:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"488:13:5"},"id":846,"nodeType":"InheritanceSpecifier","src":"488:13:5"},{"baseName":{"id":847,"name":"INonceManager","nameLocations":["503:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"503:13:5"},"id":848,"nodeType":"InheritanceSpecifier","src":"503:13:5"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1022,"linearizedBaseContracts":[1022,1041,1201],"name":"IEntryPoint","nameLocation":"473:11:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":864,"name":"UserOperationEvent","nameLocation":"1282:18:5","nodeType":"EventDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1326:10:5","nodeType":"VariableDeclaration","scope":864,"src":"1310:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1310:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":852,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1362:6:5","nodeType":"VariableDeclaration","scope":864,"src":"1346:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1394:9:5","nodeType":"VariableDeclaration","scope":864,"src":"1378:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"1378:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1421:5:5","nodeType":"VariableDeclaration","scope":864,"src":"1413:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":858,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1441:7:5","nodeType":"VariableDeclaration","scope":864,"src":"1436:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":860,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1466:13:5","nodeType":"VariableDeclaration","scope":864,"src":"1458:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":862,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1497:13:5","nodeType":"VariableDeclaration","scope":864,"src":"1489:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:216:5"},"src":"1276:241:5"},{"anonymous":false,"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"1523:349:5","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":875,"name":"AccountDeployed","nameLocation":"1883:15:5","nodeType":"EventDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1924:10:5","nodeType":"VariableDeclaration","scope":875,"src":"1908:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":869,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1960:6:5","nodeType":"VariableDeclaration","scope":875,"src":"1944:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"1944:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1984:7:5","nodeType":"VariableDeclaration","scope":875,"src":"1976:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"1976:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2009:9:5","nodeType":"VariableDeclaration","scope":875,"src":"2001:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"2001:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1898:126:5"},"src":"1877:148:5"},{"anonymous":false,"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"2031:356:5","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted \"callData\" call."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":886,"name":"UserOperationRevertReason","nameLocation":"2398:25:5","nodeType":"EventDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2449:10:5","nodeType":"VariableDeclaration","scope":886,"src":"2433:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2433:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":880,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2485:6:5","nodeType":"VariableDeclaration","scope":886,"src":"2469:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2509:5:5","nodeType":"VariableDeclaration","scope":886,"src":"2501:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2501:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":884,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2530:12:5","nodeType":"VariableDeclaration","scope":886,"src":"2524:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":883,"name":"bytes","nodeType":"ElementaryTypeName","src":"2524:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2423:125:5"},"src":"2392:157:5"},{"anonymous":false,"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"2555:372:5","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted call to \"postOp\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":897,"name":"PostOpRevertReason","nameLocation":"2938:18:5","nodeType":"EventDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2982:10:5","nodeType":"VariableDeclaration","scope":897,"src":"2966:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2966:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":891,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3018:6:5","nodeType":"VariableDeclaration","scope":897,"src":"3002:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"3002:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3042:5:5","nodeType":"VariableDeclaration","scope":897,"src":"3034:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":895,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3063:12:5","nodeType":"VariableDeclaration","scope":897,"src":"3057:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":894,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2956:125:5"},"src":"2932:150:5"},{"anonymous":false,"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"3088:284:5","text":" UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request."},"eventSelector":"67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e","id":906,"name":"UserOperationPrefundTooLow","nameLocation":"3383:26:5","nodeType":"EventDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3435:10:5","nodeType":"VariableDeclaration","scope":906,"src":"3419:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3471:6:5","nodeType":"VariableDeclaration","scope":906,"src":"3455:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"3455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3495:5:5","nodeType":"VariableDeclaration","scope":906,"src":"3487:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3409:97:5"},"src":"3377:130:5"},{"anonymous":false,"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"3513:184:5","text":" An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":909,"name":"BeforeExecution","nameLocation":"3708:15:5","nodeType":"EventDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"3723:2:5"},"src":"3702:24:5"},{"anonymous":false,"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"3732:187:5","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":914,"name":"SignatureAggregatorChanged","nameLocation":"3930:26:5","nodeType":"EventDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3973:10:5","nodeType":"VariableDeclaration","scope":914,"src":"3957:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3956:28:5"},"src":"3924:61:5"},{"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"3991:819:5","text":" A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\n Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":921,"name":"FailedOp","nameLocation":"4821:8:5","nodeType":"ErrorDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"opIndex","nameLocation":"4838:7:5","nodeType":"VariableDeclaration","scope":921,"src":"4830:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4830:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"reason","nameLocation":"4854:6:5","nodeType":"VariableDeclaration","scope":921,"src":"4847:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":918,"name":"string","nodeType":"ElementaryTypeName","src":"4847:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4829:32:5"},"src":"4815:47:5"},{"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"4868:429:5","text":" A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint256,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"},"errorSelector":"65c8fd4d","id":930,"name":"FailedOpWithRevert","nameLocation":"5308:18:5","nodeType":"ErrorDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"opIndex","nameLocation":"5335:7:5","nodeType":"VariableDeclaration","scope":930,"src":"5327:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"reason","nameLocation":"5351:6:5","nodeType":"VariableDeclaration","scope":930,"src":"5344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":925,"name":"string","nodeType":"ElementaryTypeName","src":"5344:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"inner","nameLocation":"5365:5:5","nodeType":"VariableDeclaration","scope":930,"src":"5359:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":927,"name":"bytes","nodeType":"ElementaryTypeName","src":"5359:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5326:45:5"},"src":"5302:70:5"},{"errorSelector":"ad7954bc","id":934,"name":"PostOpReverted","nameLocation":"5384:14:5","nodeType":"ErrorDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"returnData","nameLocation":"5405:10:5","nodeType":"VariableDeclaration","scope":934,"src":"5399:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":931,"name":"bytes","nodeType":"ElementaryTypeName","src":"5399:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5398:18:5"},"src":"5378:39:5"},{"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"5423:190:5","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":939,"name":"SignatureValidationFailed","nameLocation":"5624:25:5","nodeType":"ErrorDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"aggregator","nameLocation":"5658:10:5","nodeType":"VariableDeclaration","scope":939,"src":"5650:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"5650:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5649:20:5"},"src":"5618:52:5"},{"errorSelector":"6ca7b806","id":943,"name":"SenderAddressResult","nameLocation":"5723:19:5","nodeType":"ErrorDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"sender","nameLocation":"5751:6:5","nodeType":"VariableDeclaration","scope":943,"src":"5743:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"5743:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5742:16:5"},"src":"5717:42:5"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":953,"members":[{"constant":false,"id":947,"mutability":"mutable","name":"userOps","nameLocation":"5865:7:5","nodeType":"VariableDeclaration","scope":953,"src":"5843:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1223_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":945,"nodeType":"UserDefinedTypeName","pathNode":{"id":944,"name":"PackedUserOperation","nameLocations":["5843:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"5843:19:5"},"referencedDeclaration":1223,"src":"5843:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"id":946,"nodeType":"ArrayTypeName","src":"5843:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1223_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"aggregator","nameLocation":"5924:10:5","nodeType":"VariableDeclaration","scope":953,"src":"5912:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$837","typeString":"contract IAggregator"},"typeName":{"id":949,"nodeType":"UserDefinedTypeName","pathNode":{"id":948,"name":"IAggregator","nameLocations":["5912:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":837,"src":"5912:11:5"},"referencedDeclaration":837,"src":"5912:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$837","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"signature","nameLocation":"5982:9:5","nodeType":"VariableDeclaration","scope":953,"src":"5976:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":951,"name":"bytes","nodeType":"ElementaryTypeName","src":"5976:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5812:20:5","nodeType":"StructDefinition","scope":1022,"src":"5805:193:5","visibility":"public"},{"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"6004:383:5","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"765e827f","id":963,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6401:9:5","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"ops","nameLocation":"6451:3:5","nodeType":"VariableDeclaration","scope":963,"src":"6420:34:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1223_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":956,"nodeType":"UserDefinedTypeName","pathNode":{"id":955,"name":"PackedUserOperation","nameLocations":["6420:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"6420:19:5"},"referencedDeclaration":1223,"src":"6420:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"id":957,"nodeType":"ArrayTypeName","src":"6420:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1223_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"beneficiary","nameLocation":"6480:11:5","nodeType":"VariableDeclaration","scope":963,"src":"6464:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"6464:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6410:87:5"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"6506:0:5"},"scope":1022,"src":"6392:115:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"6513:260:5","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"dbed18e0","id":973,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6787:19:5","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6848:16:5","nodeType":"VariableDeclaration","scope":973,"src":"6816:48:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$953_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":966,"nodeType":"UserDefinedTypeName","pathNode":{"id":965,"name":"UserOpsPerAggregator","nameLocations":["6816:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":953,"src":"6816:20:5"},"referencedDeclaration":953,"src":"6816:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$953_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":967,"nodeType":"ArrayTypeName","src":"6816:22:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$953_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"beneficiary","nameLocation":"6890:11:5","nodeType":"VariableDeclaration","scope":973,"src":"6874:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"6874:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6806:101:5"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[],"src":"6916:0:5"},"scope":1022,"src":"6778:139:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"6923:357:5","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\n @param userOp - The user operation to generate the request ID for.\n @return hash the hash of this UserOperation"},"functionSelector":"22cdde4c","id":982,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"7294:13:5","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"userOp","nameLocation":"7346:6:5","nodeType":"VariableDeclaration","scope":982,"src":"7317:35:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":976,"nodeType":"UserDefinedTypeName","pathNode":{"id":975,"name":"PackedUserOperation","nameLocations":["7317:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"7317:19:5"},"referencedDeclaration":1223,"src":"7317:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"7307:51:5"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"7382:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7382:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7381:9:5"},"scope":1022,"src":"7285:106:5","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"7397:474:5","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param accountValidationData   - returned validationData from account.\n @param paymasterValidationData - return validationData from paymaster.\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":994,"members":[{"constant":false,"id":985,"mutability":"mutable","name":"preOpGas","nameLocation":"7912:8:5","nodeType":"VariableDeclaration","scope":994,"src":"7904:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"7904:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"prefund","nameLocation":"7938:7:5","nodeType":"VariableDeclaration","scope":994,"src":"7930:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"7930:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"accountValidationData","nameLocation":"7963:21:5","nodeType":"VariableDeclaration","scope":994,"src":"7955:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"7955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"8002:23:5","nodeType":"VariableDeclaration","scope":994,"src":"7994:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"7994:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"paymasterContext","nameLocation":"8041:16:5","nodeType":"VariableDeclaration","scope":994,"src":"8035:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":992,"name":"bytes","nodeType":"ElementaryTypeName","src":"8035:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7883:10:5","nodeType":"StructDefinition","scope":1022,"src":"7876:188:5","visibility":"public"},{"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"8070:420:5","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error.\n @notice this method cannot be used for EIP-7702 derived contracts.\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":1000,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8504:16:5","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"initCode","nameLocation":"8534:8:5","nodeType":"VariableDeclaration","scope":1000,"src":"8521:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":996,"name":"bytes","nodeType":"ElementaryTypeName","src":"8521:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8520:23:5"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[],"src":"8552:0:5"},"scope":1022,"src":"8495:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"99410554","id":1006,"name":"DelegateAndRevert","nameLocation":"8565:17:5","nodeType":"ErrorDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"success","nameLocation":"8588:7:5","nodeType":"VariableDeclaration","scope":1006,"src":"8583:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1001,"name":"bool","nodeType":"ElementaryTypeName","src":"8583:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"ret","nameLocation":"8603:3:5","nodeType":"VariableDeclaration","scope":1006,"src":"8597:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1003,"name":"bytes","nodeType":"ElementaryTypeName","src":"8597:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8582:25:5"},"src":"8559:49:5"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"8614:492:5","text":" Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient.\n @param target a target contract to make a delegatecall from entrypoint\n @param data data to pass to target in a delegatecall"},"functionSelector":"850aaf62","id":1014,"implemented":false,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"9120:17:5","nodeType":"FunctionDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"target","nameLocation":"9146:6:5","nodeType":"VariableDeclaration","scope":1014,"src":"9138:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"9138:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"data","nameLocation":"9169:4:5","nodeType":"VariableDeclaration","scope":1014,"src":"9154:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1010,"name":"bytes","nodeType":"ElementaryTypeName","src":"9154:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9137:37:5"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[],"src":"9183:0:5"},"scope":1022,"src":"9111:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"9190:130:5","text":" @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts."},"functionSelector":"09ccb880","id":1021,"implemented":false,"kind":"function","modifiers":[],"name":"senderCreator","nameLocation":"9334:13:5","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"9347:2:5"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1021,"src":"9373:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISenderCreator_$1097","typeString":"contract ISenderCreator"},"typeName":{"id":1018,"nodeType":"UserDefinedTypeName","pathNode":{"id":1017,"name":"ISenderCreator","nameLocations":["9373:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":1097,"src":"9373:14:5"},"referencedDeclaration":1097,"src":"9373:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISenderCreator_$1097","typeString":"contract ISenderCreator"}},"visibility":"internal"}],"src":"9372:16:5"},"scope":1022,"src":"9325:64:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1023,"src":"463:8928:5","usedErrors":[921,930,934,939,943,1006],"usedEvents":[864,875,886,897,906,909,914,1106,1114,1122,1128,1136]}],"src":"159:9233:5"},"id":5},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[1041]},"id":1042,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1024,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1041,"linearizedBaseContracts":[1041],"name":"INonceManager","nameLocation":"68:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"89:416:6","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"519:8:6","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"sender","nameLocation":"536:6:6","nodeType":"VariableDeclaration","scope":1034,"src":"528:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"key","nameLocation":"552:3:6","nodeType":"VariableDeclaration","scope":1034,"src":"544:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1028,"name":"uint192","nodeType":"ElementaryTypeName","src":"544:7:6","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"527:29:6"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"nonce","nameLocation":"592:5:6","nodeType":"VariableDeclaration","scope":1034,"src":"584:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"583:15:6"},"scope":1041,"src":"510:89:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"605:531:6","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key.\n @param key - the \"nonce key\" to increment the \"nonce sequence\" for."},"functionSelector":"0bd28e3b","id":1040,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1150:14:6","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"key","nameLocation":"1173:3:6","nodeType":"VariableDeclaration","scope":1040,"src":"1165:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1036,"name":"uint192","nodeType":"ElementaryTypeName","src":"1165:7:6","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1164:13:6"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"1186:0:6"},"scope":1041,"src":"1141:46:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1042,"src":"58:1131:6","usedErrors":[],"usedEvents":[]}],"src":"32:1158:6"},"id":6},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[1078],"PackedUserOperation":[1223]},"id":1079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1043,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:7"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":1044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1079,"sourceUnit":1224,"src":"58:35:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"95:216:7","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":1078,"linearizedBaseContracts":[1078],"name":"IPaymaster","nameLocation":"322:10:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":1049,"members":[{"id":1046,"name":"opSucceeded","nameLocation":"395:11:7","nodeType":"EnumValue","src":"395:11:7"},{"id":1047,"name":"opReverted","nameLocation":"471:10:7","nodeType":"EnumValue","src":"471:10:7"},{"id":1048,"name":"postOpReverted","nameLocation":"613:14:7","nodeType":"EnumValue","src":"613:14:7"}],"name":"PostOpMode","nameLocation":"344:10:7","nodeType":"EnumDefinition","src":"339:294:7"},{"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"639:1444:7","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                                    other values are invalid for paymaster.\n                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"52b7512c","id":1064,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2097:23:7","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"userOp","nameLocation":"2159:6:7","nodeType":"VariableDeclaration","scope":1064,"src":"2130:35:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1052,"nodeType":"UserDefinedTypeName","pathNode":{"id":1051,"name":"PackedUserOperation","nameLocations":["2130:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"2130:19:7"},"referencedDeclaration":1223,"src":"2130:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"userOpHash","nameLocation":"2183:10:7","nodeType":"VariableDeclaration","scope":1064,"src":"2175:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2175:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"maxCost","nameLocation":"2211:7:7","nodeType":"VariableDeclaration","scope":1064,"src":"2203:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2203:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2120:104:7"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"context","nameLocation":"2256:7:7","nodeType":"VariableDeclaration","scope":1064,"src":"2243:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1059,"name":"bytes","nodeType":"ElementaryTypeName","src":"2243:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"validationData","nameLocation":"2273:14:7","nodeType":"VariableDeclaration","scope":1064,"src":"2265:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2242:46:7"},"scope":1078,"src":"2088:201:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"2295:857:7","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual cost of gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"functionSelector":"7c627b21","id":1077,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3166:6:7","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"mode","nameLocation":"3193:4:7","nodeType":"VariableDeclaration","scope":1077,"src":"3182:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1067,"nodeType":"UserDefinedTypeName","pathNode":{"id":1066,"name":"PostOpMode","nameLocations":["3182:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1049,"src":"3182:10:7"},"referencedDeclaration":1049,"src":"3182:10:7","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"context","nameLocation":"3222:7:7","nodeType":"VariableDeclaration","scope":1077,"src":"3207:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"3207:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"actualGasCost","nameLocation":"3247:13:7","nodeType":"VariableDeclaration","scope":1077,"src":"3239:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"3239:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3278:21:7","nodeType":"VariableDeclaration","scope":1077,"src":"3270:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"3270:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3172:133:7"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"3314:0:7"},"scope":1078,"src":"3157:158:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1079,"src":"312:3005:7","usedErrors":[],"usedEvents":[]}],"src":"32:3286:7"},"id":7},"@account-abstraction/contracts/interfaces/ISenderCreator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/ISenderCreator.sol","exportedSymbols":{"ISenderCreator":[1097]},"id":1098,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1080,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"ISenderCreator","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1097,"linearizedBaseContracts":[1097],"name":"ISenderCreator","nameLocation":"69:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"90:122:8","text":" @dev Creates a new sender contract.\n @return sender Address of the newly created sender contract."},"functionSelector":"570e1a36","id":1088,"implemented":false,"kind":"function","modifiers":[],"name":"createSender","nameLocation":"226:12:8","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"initCode","nameLocation":"254:8:8","nodeType":"VariableDeclaration","scope":1088,"src":"239:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1082,"name":"bytes","nodeType":"ElementaryTypeName","src":"239:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"238:25:8"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"sender","nameLocation":"290:6:8","nodeType":"VariableDeclaration","scope":1088,"src":"282:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"281:16:8"},"scope":1097,"src":"217:81:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"304:421:8","text":" Use initCallData to initialize an EIP-7702 account.\n The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\n Note: Can be called multiple times as long as an appropriate initCode is supplied\n @param sender - the 'sender' EIP-7702 account to be initialized.\n @param initCallData - the call data to be passed to the sender account call."},"functionSelector":"c09ad0d9","id":1096,"implemented":false,"kind":"function","modifiers":[],"name":"initEip7702Sender","nameLocation":"739:17:8","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"sender","nameLocation":"765:6:8","nodeType":"VariableDeclaration","scope":1096,"src":"757:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"initCallData","nameLocation":"788:12:8","nodeType":"VariableDeclaration","scope":1096,"src":"773:27:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1092,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"756:45:8"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[],"src":"810:0:8"},"scope":1097,"src":"730:81:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1098,"src":"59:754:8","usedErrors":[],"usedEvents":[]}],"src":"33:781:8"},"id":8},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[1201]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1099,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"58:212:9","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":1201,"linearizedBaseContracts":[1201],"name":"IStakeManager","nameLocation":"281:13:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":1106,"name":"Deposited","nameLocation":"307:9:9","nodeType":"EventDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"333:7:9","nodeType":"VariableDeclaration","scope":1106,"src":"317:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"350:12:9","nodeType":"VariableDeclaration","scope":1106,"src":"342:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"316:47:9"},"src":"301:63:9"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":1114,"name":"Withdrawn","nameLocation":"376:9:9","nodeType":"EventDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"411:7:9","nodeType":"VariableDeclaration","scope":1114,"src":"395:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1110,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"436:15:9","nodeType":"VariableDeclaration","scope":1114,"src":"428:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1112,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"469:6:9","nodeType":"VariableDeclaration","scope":1114,"src":"461:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"385:96:9"},"src":"370:112:9"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":1122,"name":"StakeLocked","nameLocation":"551:11:9","nodeType":"EventDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"588:7:9","nodeType":"VariableDeclaration","scope":1122,"src":"572:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1118,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"613:11:9","nodeType":"VariableDeclaration","scope":1122,"src":"605:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1120,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"642:15:9","nodeType":"VariableDeclaration","scope":1122,"src":"634:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"562:101:9"},"src":"545:119:9"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":1128,"name":"StakeUnlocked","nameLocation":"733:13:9","nodeType":"EventDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"763:7:9","nodeType":"VariableDeclaration","scope":1128,"src":"747:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"780:12:9","nodeType":"VariableDeclaration","scope":1128,"src":"772:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"746:47:9"},"src":"727:67:9"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":1136,"name":"StakeWithdrawn","nameLocation":"806:14:9","nodeType":"EventDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"846:7:9","nodeType":"VariableDeclaration","scope":1136,"src":"830:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"871:15:9","nodeType":"VariableDeclaration","scope":1136,"src":"863:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"904:6:9","nodeType":"VariableDeclaration","scope":1136,"src":"896:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:96:9"},"src":"800:117:9"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"923:697:9","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n      and the rest fit into a 2nd cell (used during stake/unstake)\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":1148,"members":[{"constant":false,"id":1139,"mutability":"mutable","name":"deposit","nameLocation":"1662:7:9","nodeType":"VariableDeclaration","scope":1148,"src":"1654:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1654:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"staked","nameLocation":"1684:6:9","nodeType":"VariableDeclaration","scope":1148,"src":"1679:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1140,"name":"bool","nodeType":"ElementaryTypeName","src":"1679:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"stake","nameLocation":"1708:5:9","nodeType":"VariableDeclaration","scope":1148,"src":"1700:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1142,"name":"uint112","nodeType":"ElementaryTypeName","src":"1700:7:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1730:15:9","nodeType":"VariableDeclaration","scope":1148,"src":"1723:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1144,"name":"uint32","nodeType":"ElementaryTypeName","src":"1723:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"withdrawTime","nameLocation":"1762:12:9","nodeType":"VariableDeclaration","scope":1148,"src":"1755:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1146,"name":"uint48","nodeType":"ElementaryTypeName","src":"1755:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1632:11:9","nodeType":"StructDefinition","scope":1201,"src":"1625:156:9","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":1153,"members":[{"constant":false,"id":1150,"mutability":"mutable","name":"stake","nameLocation":"1885:5:9","nodeType":"VariableDeclaration","scope":1153,"src":"1877:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1908:15:9","nodeType":"VariableDeclaration","scope":1153,"src":"1900:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1857:9:9","nodeType":"StructDefinition","scope":1201,"src":"1850:80:9","visibility":"public"},{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"1936:149:9","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":1162,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2099:14:9","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"account","nameLocation":"2131:7:9","nodeType":"VariableDeclaration","scope":1162,"src":"2123:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2113:31:9"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"info","nameLocation":"2187:4:9","nodeType":"VariableDeclaration","scope":1162,"src":"2168:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1148_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1159,"nodeType":"UserDefinedTypeName","pathNode":{"id":1158,"name":"DepositInfo","nameLocations":["2168:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"2168:11:9"},"referencedDeclaration":1148,"src":"2168:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1148_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2167:25:9"},"scope":1201,"src":"2090:103:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"2199:155:9","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":1170,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2368:9:9","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"account","nameLocation":"2386:7:9","nodeType":"VariableDeclaration","scope":1170,"src":"2378:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"2378:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2377:17:9"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"2418:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2418:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2417:9:9"},"scope":1201,"src":"2359:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"2433:106:9","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":1176,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2553:9:9","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"account","nameLocation":"2571:7:9","nodeType":"VariableDeclaration","scope":1176,"src":"2563:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"2563:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2562:17:9"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[],"src":"2596:0:9"},"scope":1201,"src":"2544:53:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"2603:202:9","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":1182,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2819:8:9","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"2835:15:9","nodeType":"VariableDeclaration","scope":1182,"src":"2828:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1178,"name":"uint32","nodeType":"ElementaryTypeName","src":"2828:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2827:24:9"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"2868:0:9"},"scope":1201,"src":"2810:59:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"2875:128:9","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":1186,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3017:11:9","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[],"src":"3028:2:9"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[],"src":"3039:0:9"},"scope":1201,"src":"3008:32:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"3046:197:9","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":1192,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3257:13:9","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3287:15:9","nodeType":"VariableDeclaration","scope":1192,"src":"3271:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"3271:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3270:33:9"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"3312:0:9"},"scope":1201,"src":"3248:65:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"3319:170:9","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":1200,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3503:10:9","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3539:15:9","nodeType":"VariableDeclaration","scope":1200,"src":"3523:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"3523:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3572:14:9","nodeType":"VariableDeclaration","scope":1200,"src":"3564:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3564:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3513:79:9"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"3601:0:9"},"scope":1201,"src":"3494:108:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1202,"src":"271:3333:9","usedErrors":[],"usedEvents":[1106,1114,1122,1128,1136]}],"src":"32:3573:9"},"id":9},"@account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","exportedSymbols":{"PackedUserOperation":[1223]},"id":1224,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:10"},{"canonicalName":"PackedUserOperation","documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"58:1163:10","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":1223,"members":[{"constant":false,"id":1206,"mutability":"mutable","name":"sender","nameLocation":"1263:6:10","nodeType":"VariableDeclaration","scope":1223,"src":"1255:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"nonce","nameLocation":"1283:5:10","nodeType":"VariableDeclaration","scope":1223,"src":"1275:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"initCode","nameLocation":"1300:8:10","nodeType":"VariableDeclaration","scope":1223,"src":"1294:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1209,"name":"bytes","nodeType":"ElementaryTypeName","src":"1294:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"callData","nameLocation":"1320:8:10","nodeType":"VariableDeclaration","scope":1223,"src":"1314:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1211,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1342:16:10","nodeType":"VariableDeclaration","scope":1223,"src":"1334:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1334:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1372:18:10","nodeType":"VariableDeclaration","scope":1223,"src":"1364:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1364:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"gasFees","nameLocation":"1404:7:10","nodeType":"VariableDeclaration","scope":1223,"src":"1396:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1396:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1423:16:10","nodeType":"VariableDeclaration","scope":1223,"src":"1417:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1219,"name":"bytes","nodeType":"ElementaryTypeName","src":"1417:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"signature","nameLocation":"1451:9:10","nodeType":"VariableDeclaration","scope":1223,"src":"1445:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1221,"name":"bytes","nodeType":"ElementaryTypeName","src":"1445:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"1229:19:10","nodeType":"StructDefinition","scope":1224,"src":"1222:241:10","visibility":"public"}],"src":"32:1432:10"},"id":10},"@account-abstraction/contracts/utils/Exec.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/utils/Exec.sol","exportedSymbols":{"Exec":[1294]},"id":1295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1225,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Exec","contractDependencies":[],"contractKind":"library","documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"97:95:11","text":" Utility functions helpful when making different kinds of contract calls in Solidity."},"fullyImplemented":true,"id":1294,"linearizedBaseContracts":[1294],"name":"Exec","nameLocation":"201:4:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1240,"nodeType":"Block","src":"358:134:11","statements":[{"AST":{"nativeSrc":"393:93:11","nodeType":"YulBlock","src":"393:93:11","statements":[{"nativeSrc":"407:69:11","nodeType":"YulAssignment","src":"407:69:11","value":{"arguments":[{"name":"txGas","nativeSrc":"423:5:11","nodeType":"YulIdentifier","src":"423:5:11"},{"name":"to","nativeSrc":"430:2:11","nodeType":"YulIdentifier","src":"430:2:11"},{"name":"value","nativeSrc":"434:5:11","nodeType":"YulIdentifier","src":"434:5:11"},{"arguments":[{"name":"data","nativeSrc":"445:4:11","nodeType":"YulIdentifier","src":"445:4:11"},{"kind":"number","nativeSrc":"451:4:11","nodeType":"YulLiteral","src":"451:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"441:3:11","nodeType":"YulIdentifier","src":"441:3:11"},"nativeSrc":"441:15:11","nodeType":"YulFunctionCall","src":"441:15:11"},{"arguments":[{"name":"data","nativeSrc":"464:4:11","nodeType":"YulIdentifier","src":"464:4:11"}],"functionName":{"name":"mload","nativeSrc":"458:5:11","nodeType":"YulIdentifier","src":"458:5:11"},"nativeSrc":"458:11:11","nodeType":"YulFunctionCall","src":"458:11:11"},{"kind":"number","nativeSrc":"471:1:11","nodeType":"YulLiteral","src":"471:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"474:1:11","nodeType":"YulLiteral","src":"474:1:11","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"418:4:11","nodeType":"YulIdentifier","src":"418:4:11"},"nativeSrc":"418:58:11","nodeType":"YulFunctionCall","src":"418:58:11"},"variableNames":[{"name":"success","nativeSrc":"407:7:11","nodeType":"YulIdentifier","src":"407:7:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1232,"isOffset":false,"isSlot":false,"src":"445:4:11","valueSize":1},{"declaration":1232,"isOffset":false,"isSlot":false,"src":"464:4:11","valueSize":1},{"declaration":1237,"isOffset":false,"isSlot":false,"src":"407:7:11","valueSize":1},{"declaration":1228,"isOffset":false,"isSlot":false,"src":"430:2:11","valueSize":1},{"declaration":1234,"isOffset":false,"isSlot":false,"src":"423:5:11","valueSize":1},{"declaration":1230,"isOffset":false,"isSlot":false,"src":"434:5:11","valueSize":1}],"flags":["memory-safe"],"id":1239,"nodeType":"InlineAssembly","src":"368:118:11"}]},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"call","nameLocation":"222:4:11","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"to","nameLocation":"244:2:11","nodeType":"VariableDeclaration","scope":1241,"src":"236:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"236:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"value","nameLocation":"264:5:11","nodeType":"VariableDeclaration","scope":1241,"src":"256:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"data","nameLocation":"292:4:11","nodeType":"VariableDeclaration","scope":1241,"src":"279:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"txGas","nameLocation":"314:5:11","nodeType":"VariableDeclaration","scope":1241,"src":"306:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:99:11"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"success","nameLocation":"349:7:11","nodeType":"VariableDeclaration","scope":1241,"src":"344:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1236,"name":"bool","nodeType":"ElementaryTypeName","src":"344:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"343:14:11"},"scope":1294,"src":"213:279:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"631:133:11","statements":[{"AST":{"nativeSrc":"666:92:11","nodeType":"YulBlock","src":"666:92:11","statements":[{"nativeSrc":"680:68:11","nodeType":"YulAssignment","src":"680:68:11","value":{"arguments":[{"name":"txGas","nativeSrc":"702:5:11","nodeType":"YulIdentifier","src":"702:5:11"},{"name":"to","nativeSrc":"709:2:11","nodeType":"YulIdentifier","src":"709:2:11"},{"arguments":[{"name":"data","nativeSrc":"717:4:11","nodeType":"YulIdentifier","src":"717:4:11"},{"kind":"number","nativeSrc":"723:4:11","nodeType":"YulLiteral","src":"723:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"713:3:11","nodeType":"YulIdentifier","src":"713:3:11"},"nativeSrc":"713:15:11","nodeType":"YulFunctionCall","src":"713:15:11"},{"arguments":[{"name":"data","nativeSrc":"736:4:11","nodeType":"YulIdentifier","src":"736:4:11"}],"functionName":{"name":"mload","nativeSrc":"730:5:11","nodeType":"YulIdentifier","src":"730:5:11"},"nativeSrc":"730:11:11","nodeType":"YulFunctionCall","src":"730:11:11"},{"kind":"number","nativeSrc":"743:1:11","nodeType":"YulLiteral","src":"743:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"746:1:11","nodeType":"YulLiteral","src":"746:1:11","type":"","value":"0"}],"functionName":{"name":"staticcall","nativeSrc":"691:10:11","nodeType":"YulIdentifier","src":"691:10:11"},"nativeSrc":"691:57:11","nodeType":"YulFunctionCall","src":"691:57:11"},"variableNames":[{"name":"success","nativeSrc":"680:7:11","nodeType":"YulIdentifier","src":"680:7:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1245,"isOffset":false,"isSlot":false,"src":"717:4:11","valueSize":1},{"declaration":1245,"isOffset":false,"isSlot":false,"src":"736:4:11","valueSize":1},{"declaration":1250,"isOffset":false,"isSlot":false,"src":"680:7:11","valueSize":1},{"declaration":1243,"isOffset":false,"isSlot":false,"src":"709:2:11","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"702:5:11","valueSize":1}],"flags":["memory-safe"],"id":1252,"nodeType":"InlineAssembly","src":"641:117:11"}]},"id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"staticcall","nameLocation":"507:10:11","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"to","nameLocation":"535:2:11","nodeType":"VariableDeclaration","scope":1254,"src":"527:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"data","nameLocation":"560:4:11","nodeType":"VariableDeclaration","scope":1254,"src":"547:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1244,"name":"bytes","nodeType":"ElementaryTypeName","src":"547:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"txGas","nameLocation":"582:5:11","nodeType":"VariableDeclaration","scope":1254,"src":"574:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:76:11"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"success","nameLocation":"622:7:11","nodeType":"VariableDeclaration","scope":1254,"src":"617:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1249,"name":"bool","nodeType":"ElementaryTypeName","src":"617:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"616:14:11"},"scope":1294,"src":"498:266:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"900:135:11","statements":[{"AST":{"nativeSrc":"935:94:11","nodeType":"YulBlock","src":"935:94:11","statements":[{"nativeSrc":"949:70:11","nodeType":"YulAssignment","src":"949:70:11","value":{"arguments":[{"name":"txGas","nativeSrc":"973:5:11","nodeType":"YulIdentifier","src":"973:5:11"},{"name":"to","nativeSrc":"980:2:11","nodeType":"YulIdentifier","src":"980:2:11"},{"arguments":[{"name":"data","nativeSrc":"988:4:11","nodeType":"YulIdentifier","src":"988:4:11"},{"kind":"number","nativeSrc":"994:4:11","nodeType":"YulLiteral","src":"994:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"984:3:11","nodeType":"YulIdentifier","src":"984:3:11"},"nativeSrc":"984:15:11","nodeType":"YulFunctionCall","src":"984:15:11"},{"arguments":[{"name":"data","nativeSrc":"1007:4:11","nodeType":"YulIdentifier","src":"1007:4:11"}],"functionName":{"name":"mload","nativeSrc":"1001:5:11","nodeType":"YulIdentifier","src":"1001:5:11"},"nativeSrc":"1001:11:11","nodeType":"YulFunctionCall","src":"1001:11:11"},{"kind":"number","nativeSrc":"1014:1:11","nodeType":"YulLiteral","src":"1014:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"1017:1:11","nodeType":"YulLiteral","src":"1017:1:11","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"960:12:11","nodeType":"YulIdentifier","src":"960:12:11"},"nativeSrc":"960:59:11","nodeType":"YulFunctionCall","src":"960:59:11"},"variableNames":[{"name":"success","nativeSrc":"949:7:11","nodeType":"YulIdentifier","src":"949:7:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1258,"isOffset":false,"isSlot":false,"src":"1007:4:11","valueSize":1},{"declaration":1258,"isOffset":false,"isSlot":false,"src":"988:4:11","valueSize":1},{"declaration":1263,"isOffset":false,"isSlot":false,"src":"949:7:11","valueSize":1},{"declaration":1256,"isOffset":false,"isSlot":false,"src":"980:2:11","valueSize":1},{"declaration":1260,"isOffset":false,"isSlot":false,"src":"973:5:11","valueSize":1}],"flags":["memory-safe"],"id":1265,"nodeType":"InlineAssembly","src":"910:119:11"}]},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"delegateCall","nameLocation":"779:12:11","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"to","nameLocation":"809:2:11","nodeType":"VariableDeclaration","scope":1267,"src":"801:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"801:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"data","nameLocation":"834:4:11","nodeType":"VariableDeclaration","scope":1267,"src":"821:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1257,"name":"bytes","nodeType":"ElementaryTypeName","src":"821:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"txGas","nameLocation":"856:5:11","nodeType":"VariableDeclaration","scope":1267,"src":"848:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"791:76:11"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"success","nameLocation":"891:7:11","nodeType":"VariableDeclaration","scope":1267,"src":"886:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1262,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"885:14:11"},"scope":1294,"src":"770:265:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"1263:421:11","statements":[{"AST":{"nativeSrc":"1298:380:11","nodeType":"YulBlock","src":"1298:380:11","statements":[{"nativeSrc":"1312:27:11","nodeType":"YulVariableDeclaration","src":"1312:27:11","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1323:14:11","nodeType":"YulIdentifier","src":"1323:14:11"},"nativeSrc":"1323:16:11","nodeType":"YulFunctionCall","src":"1323:16:11"},"variables":[{"name":"len","nativeSrc":"1316:3:11","nodeType":"YulTypedName","src":"1316:3:11","type":""}]},{"body":{"nativeSrc":"1368:104:11","nodeType":"YulBlock","src":"1368:104:11","statements":[{"body":{"nativeSrc":"1405:53:11","nodeType":"YulBlock","src":"1405:53:11","statements":[{"nativeSrc":"1427:13:11","nodeType":"YulAssignment","src":"1427:13:11","value":{"name":"maxLen","nativeSrc":"1434:6:11","nodeType":"YulIdentifier","src":"1434:6:11"},"variableNames":[{"name":"len","nativeSrc":"1427:3:11","nodeType":"YulIdentifier","src":"1427:3:11"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1392:3:11","nodeType":"YulIdentifier","src":"1392:3:11"},{"name":"maxLen","nativeSrc":"1397:6:11","nodeType":"YulIdentifier","src":"1397:6:11"}],"functionName":{"name":"gt","nativeSrc":"1389:2:11","nodeType":"YulIdentifier","src":"1389:2:11"},"nativeSrc":"1389:15:11","nodeType":"YulFunctionCall","src":"1389:15:11"},"nativeSrc":"1386:72:11","nodeType":"YulIf","src":"1386:72:11"}]},"condition":{"arguments":[{"name":"maxLen","nativeSrc":"1358:6:11","nodeType":"YulIdentifier","src":"1358:6:11"},{"kind":"number","nativeSrc":"1365:1:11","nodeType":"YulLiteral","src":"1365:1:11","type":"","value":"0"}],"functionName":{"name":"gt","nativeSrc":"1355:2:11","nodeType":"YulIdentifier","src":"1355:2:11"},"nativeSrc":"1355:12:11","nodeType":"YulFunctionCall","src":"1355:12:11"},"nativeSrc":"1352:120:11","nodeType":"YulIf","src":"1352:120:11"},{"nativeSrc":"1485:22:11","nodeType":"YulVariableDeclaration","src":"1485:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"1502:4:11","nodeType":"YulLiteral","src":"1502:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1496:5:11","nodeType":"YulIdentifier","src":"1496:5:11"},"nativeSrc":"1496:11:11","nodeType":"YulFunctionCall","src":"1496:11:11"},"variables":[{"name":"ptr","nativeSrc":"1489:3:11","nodeType":"YulTypedName","src":"1489:3:11","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1527:4:11","nodeType":"YulLiteral","src":"1527:4:11","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nativeSrc":"1537:3:11","nodeType":"YulIdentifier","src":"1537:3:11"},{"arguments":[{"name":"len","nativeSrc":"1546:3:11","nodeType":"YulIdentifier","src":"1546:3:11"},{"kind":"number","nativeSrc":"1551:4:11","nodeType":"YulLiteral","src":"1551:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1542:3:11","nodeType":"YulIdentifier","src":"1542:3:11"},"nativeSrc":"1542:14:11","nodeType":"YulFunctionCall","src":"1542:14:11"}],"functionName":{"name":"add","nativeSrc":"1533:3:11","nodeType":"YulIdentifier","src":"1533:3:11"},"nativeSrc":"1533:24:11","nodeType":"YulFunctionCall","src":"1533:24:11"}],"functionName":{"name":"mstore","nativeSrc":"1520:6:11","nodeType":"YulIdentifier","src":"1520:6:11"},"nativeSrc":"1520:38:11","nodeType":"YulFunctionCall","src":"1520:38:11"},"nativeSrc":"1520:38:11","nodeType":"YulExpressionStatement","src":"1520:38:11"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1578:3:11","nodeType":"YulIdentifier","src":"1578:3:11"},{"name":"len","nativeSrc":"1583:3:11","nodeType":"YulIdentifier","src":"1583:3:11"}],"functionName":{"name":"mstore","nativeSrc":"1571:6:11","nodeType":"YulIdentifier","src":"1571:6:11"},"nativeSrc":"1571:16:11","nodeType":"YulFunctionCall","src":"1571:16:11"},"nativeSrc":"1571:16:11","nodeType":"YulExpressionStatement","src":"1571:16:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"1619:3:11","nodeType":"YulIdentifier","src":"1619:3:11"},{"kind":"number","nativeSrc":"1624:4:11","nodeType":"YulLiteral","src":"1624:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1615:3:11","nodeType":"YulIdentifier","src":"1615:3:11"},"nativeSrc":"1615:14:11","nodeType":"YulFunctionCall","src":"1615:14:11"},{"kind":"number","nativeSrc":"1631:1:11","nodeType":"YulLiteral","src":"1631:1:11","type":"","value":"0"},{"name":"len","nativeSrc":"1634:3:11","nodeType":"YulIdentifier","src":"1634:3:11"}],"functionName":{"name":"returndatacopy","nativeSrc":"1600:14:11","nodeType":"YulIdentifier","src":"1600:14:11"},"nativeSrc":"1600:38:11","nodeType":"YulFunctionCall","src":"1600:38:11"},"nativeSrc":"1600:38:11","nodeType":"YulExpressionStatement","src":"1600:38:11"},{"nativeSrc":"1651:17:11","nodeType":"YulAssignment","src":"1651:17:11","value":{"name":"ptr","nativeSrc":"1665:3:11","nodeType":"YulIdentifier","src":"1665:3:11"},"variableNames":[{"name":"returnData","nativeSrc":"1651:10:11","nodeType":"YulIdentifier","src":"1651:10:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1269,"isOffset":false,"isSlot":false,"src":"1358:6:11","valueSize":1},{"declaration":1269,"isOffset":false,"isSlot":false,"src":"1397:6:11","valueSize":1},{"declaration":1269,"isOffset":false,"isSlot":false,"src":"1434:6:11","valueSize":1},{"declaration":1272,"isOffset":false,"isSlot":false,"src":"1651:10:11","valueSize":1}],"flags":["memory-safe"],"id":1274,"nodeType":"InlineAssembly","src":"1273:405:11"}]},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"getReturnData","nameLocation":"1185:13:11","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"maxLen","nameLocation":"1207:6:11","nodeType":"VariableDeclaration","scope":1276,"src":"1199:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1198:16:11"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"returnData","nameLocation":"1251:10:11","nodeType":"VariableDeclaration","scope":1276,"src":"1238:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1271,"name":"bytes","nodeType":"ElementaryTypeName","src":"1238:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1237:25:11"},"scope":1294,"src":"1176:508:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1282,"nodeType":"Block","src":"1827:111:11","statements":[{"AST":{"nativeSrc":"1862:70:11","nodeType":"YulBlock","src":"1862:70:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returnData","nativeSrc":"1887:10:11","nodeType":"YulIdentifier","src":"1887:10:11"},{"kind":"number","nativeSrc":"1899:2:11","nodeType":"YulLiteral","src":"1899:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1883:3:11","nodeType":"YulIdentifier","src":"1883:3:11"},"nativeSrc":"1883:19:11","nodeType":"YulFunctionCall","src":"1883:19:11"},{"arguments":[{"name":"returnData","nativeSrc":"1910:10:11","nodeType":"YulIdentifier","src":"1910:10:11"}],"functionName":{"name":"mload","nativeSrc":"1904:5:11","nodeType":"YulIdentifier","src":"1904:5:11"},"nativeSrc":"1904:17:11","nodeType":"YulFunctionCall","src":"1904:17:11"}],"functionName":{"name":"revert","nativeSrc":"1876:6:11","nodeType":"YulIdentifier","src":"1876:6:11"},"nativeSrc":"1876:46:11","nodeType":"YulFunctionCall","src":"1876:46:11"},"nativeSrc":"1876:46:11","nodeType":"YulExpressionStatement","src":"1876:46:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1278,"isOffset":false,"isSlot":false,"src":"1887:10:11","valueSize":1},{"declaration":1278,"isOffset":false,"isSlot":false,"src":"1910:10:11","valueSize":1}],"flags":["memory-safe"],"id":1281,"nodeType":"InlineAssembly","src":"1837:95:11"}]},"id":1283,"implemented":true,"kind":"function","modifiers":[],"name":"revertWithData","nameLocation":"1773:14:11","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"returnData","nameLocation":"1801:10:11","nodeType":"VariableDeclaration","scope":1283,"src":"1788:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1788:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1787:25:11"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[],"src":"1827:0:11"},"scope":1294,"src":"1764:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1292,"nodeType":"Block","src":"2034:49:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1287,"name":"getReturnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2059:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2059:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1286,"name":"revertWithData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"2044:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2044:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1291,"nodeType":"ExpressionStatement","src":"2044:32:11"}]},"id":1293,"implemented":true,"kind":"function","modifiers":[],"name":"revertWithReturnData","nameLocation":"1997:20:11","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[],"src":"2017:2:11"},"returnParameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"2034:0:11"},"scope":1294,"src":"1988:95:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1295,"src":"193:1892:11","usedErrors":[],"usedEvents":[]}],"src":"32:2054:11"},"id":11},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1472],"Ownable":[1442]},"id":1443,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1296,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1298,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1443,"sourceUnit":1473,"src":"128:45:12","symbolAliases":[{"foreign":{"id":1297,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"136:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1300,"name":"Context","nameLocations":["692:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1472,"src":"692:7:12"},"id":1301,"nodeType":"InheritanceSpecifier","src":"692:7:12"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"175:487:12","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1442,"linearizedBaseContracts":[1442,1472],"name":"Ownable","nameLocation":"681:7:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1303,"mutability":"mutable","name":"_owner","nameLocation":"722:6:12","nodeType":"VariableDeclaration","scope":1442,"src":"706:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"735:85:12","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1308,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:12","nodeType":"ErrorDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"account","nameLocation":"866:7:12","nodeType":"VariableDeclaration","scope":1308,"src":"858:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:12"},"src":"825:50:12"},{"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"881:82:12","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1313,"name":"OwnableInvalidOwner","nameLocation":"974:19:12","nodeType":"ErrorDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"owner","nameLocation":"1002:5:12","nodeType":"VariableDeclaration","scope":1313,"src":"994:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:12"},"src":"968:41:12"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1319,"name":"OwnershipTransferred","nameLocation":"1021:20:12","nodeType":"EventDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:12","nodeType":"VariableDeclaration","scope":1319,"src":"1042:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:12","nodeType":"VariableDeclaration","scope":1319,"src":"1073:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:12"},"src":"1015:84:12"},{"body":{"id":1344,"nodeType":"Block","src":"1259:153:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1325,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"1273:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:12","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1339,"nodeType":"IfStatement","src":"1269:95:12","trueBody":{"id":1338,"nodeType":"Block","src":"1301:63:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:12","typeDescriptions":{}}},"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1331,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1322:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1337,"nodeType":"RevertStatement","src":"1315:38:12"}]}},{"expression":{"arguments":[{"id":1341,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"1392:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1340,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"1373:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"1373:32:12"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"1105:115:12","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:12","nodeType":"VariableDeclaration","scope":1345,"src":"1237:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:12"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"1259:0:12"},"scope":1442,"src":"1225:187:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"1521:41:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1348,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"1531:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"ExpressionStatement","src":"1531:13:12"},{"id":1351,"nodeType":"PlaceholderStatement","src":"1554:1:12"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"1418:77:12","text":" @dev Throws if called by any account other than the owner."},"id":1353,"name":"onlyOwner","nameLocation":"1509:9:12","nodeType":"ModifierDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"1518:2:12"},"src":"1500:62:12","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"1693:30:12","statements":[{"expression":{"id":1359,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"1710:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1358,"id":1360,"nodeType":"Return","src":"1703:13:12"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"1568:65:12","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:12","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"1652:2:12"},"returnParameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"1684:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:12"},"scope":1442,"src":"1638:85:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1378,"nodeType":"Block","src":"1841:117:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1366,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"1855:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1368,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1866:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1377,"nodeType":"IfStatement","src":"1851:101:12","trueBody":{"id":1376,"nodeType":"Block","src":"1880:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1372,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1928:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1371,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"1901:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1375,"nodeType":"RevertStatement","src":"1894:47:12"}]}}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"1729:62:12","text":" @dev Throws if the sender is not the owner."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:12","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"1816:2:12"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"1841:0:12"},"scope":1442,"src":"1796:162:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1392,"nodeType":"Block","src":"2347:47:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:12","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1385,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2357:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"2357:30:12"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"1964:324:12","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1393,"implemented":true,"kind":"function","modifiers":[{"id":1383,"kind":"modifierInvocation","modifierName":{"id":1382,"name":"onlyOwner","nameLocations":["2337:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"2337:9:12"},"nodeType":"ModifierInvocation","src":"2337:9:12"}],"name":"renounceOwnership","nameLocation":"2302:17:12","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"2319:2:12"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"2347:0:12"},"scope":1442,"src":"2293:101:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1420,"nodeType":"Block","src":"2613:145:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2627:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:12","typeDescriptions":{}}},"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1415,"nodeType":"IfStatement","src":"2623:91:12","trueBody":{"id":1414,"nodeType":"Block","src":"2651:63:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:12","typeDescriptions":{}}},"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1407,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2672:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1413,"nodeType":"RevertStatement","src":"2665:38:12"}]}},{"expression":{"arguments":[{"id":1417,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2742:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1416,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2723:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"2723:28:12"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"2400:138:12","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1421,"implemented":true,"kind":"function","modifiers":[{"id":1399,"kind":"modifierInvocation","modifierName":{"id":1398,"name":"onlyOwner","nameLocations":["2603:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"2603:9:12"},"nodeType":"ModifierInvocation","src":"2603:9:12"}],"name":"transferOwnership","nameLocation":"2552:17:12","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:12","nodeType":"VariableDeclaration","scope":1421,"src":"2570:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:12"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"2613:0:12"},"scope":1442,"src":"2543:215:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1440,"nodeType":"Block","src":"2975:124:12","statements":[{"assignments":[1428],"declarations":[{"constant":false,"id":1428,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:12","nodeType":"VariableDeclaration","scope":1440,"src":"2985:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1430,"initialValue":{"id":1429,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"3004:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:12"},{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1431,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"3020:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1432,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3029:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1434,"nodeType":"ExpressionStatement","src":"3020:17:12"},{"eventCall":{"arguments":[{"id":1436,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"3073:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3083:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1435,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3052:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"EmitStatement","src":"3047:45:12"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"2764:143:12","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:12","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:12","nodeType":"VariableDeclaration","scope":1441,"src":"2940:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:12"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[],"src":"2975:0:12"},"scope":1442,"src":"2912:187:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1443,"src":"663:2438:12","usedErrors":[1308,1313],"usedEvents":[1319]}],"src":"102:3000:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1472]},"id":1473,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1444,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1472,"linearizedBaseContracts":[1472],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1453,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":1450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1449,"id":1452,"nodeType":"Return","src":"728:17:13"}]},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1454,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":1472,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1462,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":1459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1458,"id":1461,"nodeType":"Return","src":"835:15:13"}]},"id":1463,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1463,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1456,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":1472,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1470,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1467,"id":1469,"nodeType":"Return","src":"945:8:13"}]},"id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1471,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":1472,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1473,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1524]},"id":1525,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1474,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1524,"linearizedBaseContracts":[1524],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":1479,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":1524,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":1483,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":1524,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":1487,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":1524,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":1491,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":1524,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":1495,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":1524,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":1499,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":1524,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":1503,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":1524,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":1507,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":1524,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":1511,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":1524,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":1515,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":1524,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1522,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nativeSrc":"1854:110:14","nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:14","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:14","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:14","nodeType":"YulIdentifier","src":"1868:6:14"},"nativeSrc":"1868:24:14","nodeType":"YulFunctionCall","src":"1868:24:14"},"nativeSrc":"1868:24:14","nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:14","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:14","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:14","nodeType":"YulIdentifier","src":"1905:6:14"},"nativeSrc":"1905:18:14","nodeType":"YulFunctionCall","src":"1905:18:14"},"nativeSrc":"1905:18:14","nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:14","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:14","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:14","nodeType":"YulIdentifier","src":"1936:6:14"},"nativeSrc":"1936:18:14","nodeType":"YulFunctionCall","src":"1936:18:14"},"nativeSrc":"1936:18:14","nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1518,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":1521,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":1523,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":1524,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1525,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4981],"SafeCast":[6746],"SignedMath":[6890],"Strings":[2926]},"id":2927,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1526,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2927,"sourceUnit":4982,"src":"127:37:15","symbolAliases":[{"foreign":{"id":1527,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2927,"sourceUnit":6747,"src":"165:45:15","symbolAliases":[{"foreign":{"id":1529,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2927,"sourceUnit":6891,"src":"211:49:15","symbolAliases":[{"foreign":{"id":1531,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"219:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"262:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2926,"linearizedBaseContracts":[2926],"name":"Strings","nameLocation":"305:7:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1535,"libraryName":{"id":1534,"name":"SafeCast","nameLocations":["325:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":6746,"src":"325:8:15"},"nodeType":"UsingForDirective","src":"319:21:15"},{"constant":true,"id":1538,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:15","nodeType":"VariableDeclaration","scope":2926,"src":"346:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1536,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1541,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:15","nodeType":"VariableDeclaration","scope":2926,"src":"408:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1539,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1577,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:15","nodeType":"VariableDeclaration","scope":2926,"src":"456:302:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:15","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:15","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:15","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:15","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:15","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"778:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1584,"name":"StringsInsufficientHexLength","nameLocation":"870:28:15","nodeType":"ErrorDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"value","nameLocation":"907:5:15","nodeType":"VariableDeclaration","scope":1584,"src":"899:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"length","nameLocation":"922:6:15","nodeType":"VariableDeclaration","scope":1584,"src":"914:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:15"},"src":"864:66:15"},{"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"936:108:15","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1587,"name":"StringsInvalidChar","nameLocation":"1055:18:15","nodeType":"ErrorDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"1073:2:15"},"src":"1049:27:15"},{"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"1082:84:15","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1590,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:15","nodeType":"ErrorDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[],"src":"1204:2:15"},"src":"1171:36:15"},{"body":{"id":1637,"nodeType":"Block","src":"1379:561:15","statements":[{"id":1636,"nodeType":"UncheckedBlock","src":"1389:545:15","statements":[{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"length","nameLocation":"1421:6:15","nodeType":"VariableDeclaration","scope":1636,"src":"1413:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1606,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1441:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1600,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"1430:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4981_$","typeString":"type(library Math)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4813,"src":"1430:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:15"},{"assignments":[1608],"declarations":[{"constant":false,"id":1608,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:15","nodeType":"VariableDeclaration","scope":1636,"src":"1465:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1607,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1613,"initialValue":{"arguments":[{"id":1611,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1499:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1609,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:15"},{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:15","nodeType":"VariableDeclaration","scope":1636,"src":"1520:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1616,"nodeType":"VariableDeclarationStatement","src":"1520:11:15"},{"AST":{"nativeSrc":"1570:67:15","nodeType":"YulBlock","src":"1570:67:15","statements":[{"nativeSrc":"1588:35:15","nodeType":"YulAssignment","src":"1588:35:15","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:15","nodeType":"YulIdentifier","src":"1599:6:15"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:15","nodeType":"YulLiteral","src":"1611:2:15","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:15","nodeType":"YulIdentifier","src":"1615:6:15"}],"functionName":{"name":"add","nativeSrc":"1607:3:15","nodeType":"YulIdentifier","src":"1607:3:15"},"nativeSrc":"1607:15:15","nodeType":"YulFunctionCall","src":"1607:15:15"}],"functionName":{"name":"add","nativeSrc":"1595:3:15","nodeType":"YulIdentifier","src":"1595:3:15"},"nativeSrc":"1595:28:15","nodeType":"YulFunctionCall","src":"1595:28:15"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:15","nodeType":"YulIdentifier","src":"1588:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1608,"isOffset":false,"isSlot":false,"src":"1599:6:15","valueSize":1},{"declaration":1599,"isOffset":false,"isSlot":false,"src":"1615:6:15","valueSize":1},{"declaration":1615,"isOffset":false,"isSlot":false,"src":"1588:3:15","valueSize":1}],"flags":["memory-safe"],"id":1617,"nodeType":"InlineAssembly","src":"1545:92:15"},{"body":{"id":1632,"nodeType":"Block","src":"1663:234:15","statements":[{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:15","subExpression":{"id":1619,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"1681:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ExpressionStatement","src":"1681:5:15"},{"AST":{"nativeSrc":"1729:86:15","nodeType":"YulBlock","src":"1729:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:15","nodeType":"YulIdentifier","src":"1759:3:15"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:15","nodeType":"YulIdentifier","src":"1773:5:15"},{"kind":"number","nativeSrc":"1780:2:15","nodeType":"YulLiteral","src":"1780:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:15","nodeType":"YulIdentifier","src":"1769:3:15"},"nativeSrc":"1769:14:15","nodeType":"YulFunctionCall","src":"1769:14:15"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:15","nodeType":"YulIdentifier","src":"1785:10:15"}],"functionName":{"name":"byte","nativeSrc":"1764:4:15","nodeType":"YulIdentifier","src":"1764:4:15"},"nativeSrc":"1764:32:15","nodeType":"YulFunctionCall","src":"1764:32:15"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:15","nodeType":"YulIdentifier","src":"1751:7:15"},"nativeSrc":"1751:46:15","nodeType":"YulFunctionCall","src":"1751:46:15"},"nativeSrc":"1751:46:15","nodeType":"YulExpressionStatement","src":"1751:46:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":false,"src":"1785:10:15","valueSize":1},{"declaration":1615,"isOffset":false,"isSlot":false,"src":"1759:3:15","valueSize":1},{"declaration":1593,"isOffset":false,"isSlot":false,"src":"1773:5:15","valueSize":1}],"flags":["memory-safe"],"id":1622,"nodeType":"InlineAssembly","src":"1704:111:15"},{"expression":{"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1832:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1626,"nodeType":"ExpressionStatement","src":"1832:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1631,"nodeType":"IfStatement","src":"1861:21:15","trueBody":{"id":1630,"nodeType":"Break","src":"1877:5:15"}}]},"condition":{"hexValue":"74727565","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1633,"nodeType":"WhileStatement","src":"1650:247:15"},{"expression":{"id":1634,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"1917:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1597,"id":1635,"nodeType":"Return","src":"1910:13:15"}]}]},"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"1213:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1638,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:15","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"value","nameLocation":"1334:5:15","nodeType":"VariableDeclaration","scope":1638,"src":"1326:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:15"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1638,"src":"1364:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1595,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:15"},"scope":2926,"src":"1308:632:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1663,"nodeType":"Block","src":"2116:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2147:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:15","trueExpression":{"hexValue":"2d","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2193:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1656,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"2178:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6890_$","typeString":"type(library SignedMath)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"2178:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1655,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"2169:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1646,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:15","typeDescriptions":{}}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1645,"id":1662,"nodeType":"Return","src":"2126:75:15"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"1946:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1664,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:15","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"value","nameLocation":"2071:5:15","nodeType":"VariableDeclaration","scope":1664,"src":"2064:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1640,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:15"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1664,"src":"2101:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1643,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:15"},"scope":2926,"src":"2040:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1683,"nodeType":"Block","src":"2387:100:15","statements":[{"id":1682,"nodeType":"UncheckedBlock","src":"2397:84:15","statements":[{"expression":{"arguments":[{"id":1673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"2440:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"2459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1674,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"2447:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4981_$","typeString":"type(library Math)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4924,"src":"2447:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1672,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1684,1767,1787],"referencedDeclaration":1767,"src":"2428:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1671,"id":1681,"nodeType":"Return","src":"2421:49:15"}]}]},"documentation":{"id":1665,"nodeType":"StructuredDocumentation","src":"2214:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:15","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"value","nameLocation":"2342:5:15","nodeType":"VariableDeclaration","scope":1684,"src":"2334:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:15"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"2372:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1669,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:15"},"scope":2926,"src":"2313:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1766,"nodeType":"Block","src":"2700:435:15","statements":[{"assignments":[1695],"declarations":[{"constant":false,"id":1695,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:15","nodeType":"VariableDeclaration","scope":1766,"src":"2710:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1697,"initialValue":{"id":1696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"2731:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:15"},{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:15","nodeType":"VariableDeclaration","scope":1766,"src":"2746:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1698,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1708,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1703,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"2782:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1700,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:15"},{"expression":{"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1709,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2803:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1711,"indexExpression":{"hexValue":"30","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1714,"nodeType":"ExpressionStatement","src":"2803:15:15"},{"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1715,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2828:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1717,"indexExpression":{"hexValue":"31","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1720,"nodeType":"ExpressionStatement","src":"2828:15:15"},{"body":{"id":1749,"nodeType":"Block","src":"2898:95:15","statements":[{"expression":{"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1735,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2912:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1737,"indexExpression":{"id":1736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2919:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1738,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"2924:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1742,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2935:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1744,"nodeType":"ExpressionStatement","src":"2912:40:15"},{"expression":{"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1745,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2966:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1748,"nodeType":"ExpressionStatement","src":"2966:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2886:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1750,"initializationExpression":{"assignments":[1722],"declarations":[{"constant":false,"id":1722,"mutability":"mutable","name":"i","nameLocation":"2866:1:15","nodeType":"VariableDeclaration","scope":1750,"src":"2858:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1728,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1724,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"2874:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:15","subExpression":{"id":1732,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2895:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"2893:3:15"},"nodeType":"ForStatement","src":"2853:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1751,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"3006:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1760,"nodeType":"IfStatement","src":"3002:96:15","trueBody":{"id":1759,"nodeType":"Block","src":"3023:75:15","statements":[{"errorCall":{"arguments":[{"id":1755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"3073:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1756,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"3080:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"3044:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1758,"nodeType":"RevertStatement","src":"3037:50:15"}]}},{"expression":{"arguments":[{"id":1763,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"3121:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1761,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:15","typeDescriptions":{}}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1693,"id":1765,"nodeType":"Return","src":"3107:21:15"}]},"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"2493:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:15","nodeType":"FunctionDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"value","nameLocation":"2639:5:15","nodeType":"VariableDeclaration","scope":1767,"src":"2631:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"length","nameLocation":"2654:6:15","nodeType":"VariableDeclaration","scope":1767,"src":"2646:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:15"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"2685:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1691,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:15"},"scope":2926,"src":"2610:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1786,"nodeType":"Block","src":"3367:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1780,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"3412:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1778,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:15","typeDescriptions":{}}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:15","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1783,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"3420:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1775,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1684,1767,1787],"referencedDeclaration":1767,"src":"3384:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1774,"id":1785,"nodeType":"Return","src":"3377:58:15"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"3141:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1787,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:15","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"addr","nameLocation":"3323:4:15","nodeType":"VariableDeclaration","scope":1787,"src":"3315:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:15"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"3352:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1772,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:15"},"scope":2926,"src":"3294:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"3699:642:15","statements":[{"assignments":[1796],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:15","nodeType":"VariableDeclaration","scope":1851,"src":"3709:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1795,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1803,"initialValue":{"arguments":[{"arguments":[{"id":1800,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"3749:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1799,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1684,1767,1787],"referencedDeclaration":1787,"src":"3737:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1797,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:15","typeDescriptions":{}}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:15"},{"assignments":[1805],"declarations":[{"constant":false,"id":1805,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:15","nodeType":"VariableDeclaration","scope":1851,"src":"3840:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1806,"nodeType":"VariableDeclarationStatement","src":"3840:17:15"},{"AST":{"nativeSrc":"3892:78:15","nodeType":"YulBlock","src":"3892:78:15","statements":[{"nativeSrc":"3906:54:15","nodeType":"YulAssignment","src":"3906:54:15","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:15","nodeType":"YulLiteral","src":"3923:2:15","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:15","nodeType":"YulIdentifier","src":"3941:6:15"},{"kind":"number","nativeSrc":"3949:4:15","nodeType":"YulLiteral","src":"3949:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:15","nodeType":"YulIdentifier","src":"3937:3:15"},"nativeSrc":"3937:17:15","nodeType":"YulFunctionCall","src":"3937:17:15"},{"kind":"number","nativeSrc":"3956:2:15","nodeType":"YulLiteral","src":"3956:2:15","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:15","nodeType":"YulIdentifier","src":"3927:9:15"},"nativeSrc":"3927:32:15","nodeType":"YulFunctionCall","src":"3927:32:15"}],"functionName":{"name":"shr","nativeSrc":"3919:3:15","nodeType":"YulIdentifier","src":"3919:3:15"},"nativeSrc":"3919:41:15","nodeType":"YulFunctionCall","src":"3919:41:15"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:15","nodeType":"YulIdentifier","src":"3906:9:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1796,"isOffset":false,"isSlot":false,"src":"3941:6:15","valueSize":1},{"declaration":1805,"isOffset":false,"isSlot":false,"src":"3906:9:15","valueSize":1}],"flags":["memory-safe"],"id":1807,"nodeType":"InlineAssembly","src":"3867:103:15"},{"body":{"id":1844,"nodeType":"Block","src":"4013:291:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1818,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"4119:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1825,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4148:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1827,"indexExpression":{"id":1826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"4155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1823,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:15","typeDescriptions":{}}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1839,"nodeType":"IfStatement","src":"4115:150:15","trueBody":{"id":1838,"nodeType":"Block","src":"4165:100:15","statements":[{"expression":{"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1832,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4233:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1834,"indexExpression":{"id":1833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"4240:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1837,"nodeType":"ExpressionStatement","src":"4233:17:15"}]}},{"expression":{"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1840,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"4278:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1843,"nodeType":"ExpressionStatement","src":"4278:15:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"4001:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1845,"initializationExpression":{"assignments":[1809],"declarations":[{"constant":false,"id":1809,"mutability":"mutable","name":"i","nameLocation":"3993:1:15","nodeType":"VariableDeclaration","scope":1845,"src":"3985:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1811,"initialValue":{"hexValue":"3431","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:15","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:15","subExpression":{"id":1815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"4010:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1817,"nodeType":"ExpressionStatement","src":"4008:3:15"},"nodeType":"ForStatement","src":"3980:324:15"},{"expression":{"arguments":[{"id":1848,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4327:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1846,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:15","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1794,"id":1850,"nodeType":"Return","src":"4313:21:15"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"3448:165:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:15","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"addr","nameLocation":"3655:4:15","nodeType":"VariableDeclaration","scope":1852,"src":"3647:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:15"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1852,"src":"3684:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1792,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:15"},"scope":2926,"src":"3618:723:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1888,"nodeType":"Block","src":"4496:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4519:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1862,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:15","typeDescriptions":{}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:15","memberName":"length","nodeType":"MemberAccess","src":"4513:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"4538:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1867,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:15","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:15","memberName":"length","nodeType":"MemberAccess","src":"4532:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1876,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4567:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1874,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:15","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1873,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1882,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"4590:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1880,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:15","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1879,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1861,"id":1887,"nodeType":"Return","src":"4506:87:15"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"4347:66:15","text":" @dev Returns true if the two strings are equal."},"id":1889,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:15","nodeType":"FunctionDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"a","nameLocation":"4447:1:15","nodeType":"VariableDeclaration","scope":1889,"src":"4433:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"b","nameLocation":"4464:1:15","nodeType":"VariableDeclaration","scope":1889,"src":"4450:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1856,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:15"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"4490:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1859,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:15"},"scope":2926,"src":"4418:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"4897:64:15","statements":[{"expression":{"arguments":[{"id":1898,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"4924:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1902,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"4940:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1900,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:15","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:15","memberName":"length","nodeType":"MemberAccess","src":"4934:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1897,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1908,1939],"referencedDeclaration":1939,"src":"4914:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1896,"id":1906,"nodeType":"Return","src":"4907:47:15"}]},"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"4606:214:15","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:15","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"input","nameLocation":"4858:5:15","nodeType":"VariableDeclaration","scope":1908,"src":"4844:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1891,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:15"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1908,"src":"4888:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:15"},"scope":2926,"src":"4825:136:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"5366:153:15","statements":[{"assignments":[1921,1923],"declarations":[{"constant":false,"id":1921,"mutability":"mutable","name":"success","nameLocation":"5382:7:15","nodeType":"VariableDeclaration","scope":1938,"src":"5377:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1920,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"value","nameLocation":"5399:5:15","nodeType":"VariableDeclaration","scope":1938,"src":"5391:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1929,"initialValue":{"arguments":[{"id":1925,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"5421:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1926,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"5428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1927,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5435:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1924,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1960,1997],"referencedDeclaration":1997,"src":"5408:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:15"},{"condition":{"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:15","subExpression":{"id":1930,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"5454:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1935,"nodeType":"IfStatement","src":"5449:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1932,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"5470:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1934,"nodeType":"RevertStatement","src":"5463:27:15"}},{"expression":{"id":1936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"5507:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1919,"id":1937,"nodeType":"Return","src":"5500:12:15"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"4967:294:15","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:15","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"input","nameLocation":"5299:5:15","nodeType":"VariableDeclaration","scope":1939,"src":"5285:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1910,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"begin","nameLocation":"5314:5:15","nodeType":"VariableDeclaration","scope":1939,"src":"5306:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"end","nameLocation":"5329:3:15","nodeType":"VariableDeclaration","scope":1939,"src":"5321:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:15"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"5357:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:15"},"scope":2926,"src":"5266:253:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1959,"nodeType":"Block","src":"5840:83:15","statements":[{"expression":{"arguments":[{"id":1950,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5886:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1954,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5902:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1952,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:15","typeDescriptions":{}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:15","memberName":"length","nodeType":"MemberAccess","src":"5896:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1949,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"5857:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1948,"id":1958,"nodeType":"Return","src":"5850:66:15"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"5525:215:15","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:15","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"input","nameLocation":"5781:5:15","nodeType":"VariableDeclaration","scope":1960,"src":"5767:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1941,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:15"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"success","nameLocation":"5816:7:15","nodeType":"VariableDeclaration","scope":1960,"src":"5811:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1944,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"value","nameLocation":"5833:5:15","nodeType":"VariableDeclaration","scope":1960,"src":"5825:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:15"},"scope":2926,"src":"5745:178:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"6325:144:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"6339:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1977,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6351:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1975,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:15","typeDescriptions":{}}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:15","memberName":"length","nodeType":"MemberAccess","src":"6345:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1981,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"6368:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1982,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"6376:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1989,"nodeType":"IfStatement","src":"6335:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1973,"id":1988,"nodeType":"Return","src":"6381:17:15"}},{"expression":{"arguments":[{"id":1991,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6444:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1992,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"6451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1993,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"6458:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1990,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"6415:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1973,"id":1995,"nodeType":"Return","src":"6408:54:15"}]},"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"5929:238:15","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:15","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"input","nameLocation":"6217:5:15","nodeType":"VariableDeclaration","scope":1997,"src":"6203:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1962,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"begin","nameLocation":"6240:5:15","nodeType":"VariableDeclaration","scope":1997,"src":"6232:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"end","nameLocation":"6263:3:15","nodeType":"VariableDeclaration","scope":1997,"src":"6255:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:15"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"6301:7:15","nodeType":"VariableDeclaration","scope":1997,"src":"6296:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"value","nameLocation":"6318:5:15","nodeType":"VariableDeclaration","scope":1997,"src":"6310:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:15"},"scope":2926,"src":"6172:297:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2066,"nodeType":"Block","src":"6872:347:15","statements":[{"assignments":[2012],"declarations":[{"constant":false,"id":2012,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:15","nodeType":"VariableDeclaration","scope":2066,"src":"6882:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2011,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2017,"initialValue":{"arguments":[{"id":2015,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"6910:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2013,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:15","typeDescriptions":{}}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:15"},{"assignments":[2019],"declarations":[{"constant":false,"id":2019,"mutability":"mutable","name":"result","nameLocation":"6935:6:15","nodeType":"VariableDeclaration","scope":2066,"src":"6927:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2021,"initialValue":{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:15"},{"body":{"id":2060,"nodeType":"Block","src":"6993:189:15","statements":[{"assignments":[2033],"declarations":[{"constant":false,"id":2033,"mutability":"mutable","name":"chr","nameLocation":"7013:3:15","nodeType":"VariableDeclaration","scope":2060,"src":"7007:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2032,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2043,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2038,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"7062:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"7070:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2037,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"7039:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2035,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:15","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2034,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"7019:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"7092:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2051,"nodeType":"IfStatement","src":"7088:30:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2010,"id":2050,"nodeType":"Return","src":"7101:17:15"}},{"expression":{"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"7132:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2055,"nodeType":"ExpressionStatement","src":"7132:12:15"},{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"7158:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2057,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"7168:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"7158:13:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"6979:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2027,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"6983:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"initializationExpression":{"assignments":[2023],"declarations":[{"constant":false,"id":2023,"mutability":"mutable","name":"i","nameLocation":"6968:1:15","nodeType":"VariableDeclaration","scope":2061,"src":"6960:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2025,"initialValue":{"id":2024,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6972:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:15","subExpression":{"id":2029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"6990:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2031,"nodeType":"ExpressionStatement","src":"6988:3:15"},"nodeType":"ForStatement","src":"6955:227:15"},{"expression":{"components":[{"hexValue":"74727565","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"7205:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2010,"id":2065,"nodeType":"Return","src":"7191:21:15"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"6475:224:15","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:15","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"input","nameLocation":"6765:5:15","nodeType":"VariableDeclaration","scope":2067,"src":"6751:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1999,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"begin","nameLocation":"6788:5:15","nodeType":"VariableDeclaration","scope":2067,"src":"6780:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"end","nameLocation":"6811:3:15","nodeType":"VariableDeclaration","scope":2067,"src":"6803:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:15"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"success","nameLocation":"6848:7:15","nodeType":"VariableDeclaration","scope":2067,"src":"6843:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2006,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"value","nameLocation":"6865:5:15","nodeType":"VariableDeclaration","scope":2067,"src":"6857:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:15"},"scope":2926,"src":"6704:515:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2085,"nodeType":"Block","src":"7516:63:15","statements":[{"expression":{"arguments":[{"id":2076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"7542:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2080,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"7558:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2078,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:15","typeDescriptions":{}}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:15","memberName":"length","nodeType":"MemberAccess","src":"7552:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2086,2117],"referencedDeclaration":2117,"src":"7533:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2074,"id":2084,"nodeType":"Return","src":"7526:46:15"}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"7225:216:15","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:15","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"input","nameLocation":"7478:5:15","nodeType":"VariableDeclaration","scope":2086,"src":"7464:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2069,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:15"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"7508:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2072,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:15"},"scope":2926,"src":"7446:133:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2116,"nodeType":"Block","src":"7984:151:15","statements":[{"assignments":[2099,2101],"declarations":[{"constant":false,"id":2099,"mutability":"mutable","name":"success","nameLocation":"8000:7:15","nodeType":"VariableDeclaration","scope":2116,"src":"7995:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"value","nameLocation":"8016:5:15","nodeType":"VariableDeclaration","scope":2116,"src":"8009:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2100,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2107,"initialValue":{"arguments":[{"id":2103,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"8037:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2104,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"8044:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2105,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"8051:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2102,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2138,2180],"referencedDeclaration":2180,"src":"8025:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:15"},{"condition":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:15","subExpression":{"id":2108,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"8070:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2113,"nodeType":"IfStatement","src":"8065:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2110,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"8086:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2112,"nodeType":"RevertStatement","src":"8079:27:15"}},{"expression":{"id":2114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"8123:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2097,"id":2115,"nodeType":"Return","src":"8116:12:15"}]},"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"7585:296:15","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:15","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"input","nameLocation":"7918:5:15","nodeType":"VariableDeclaration","scope":2117,"src":"7904:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2088,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"begin","nameLocation":"7933:5:15","nodeType":"VariableDeclaration","scope":2117,"src":"7925:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"end","nameLocation":"7948:3:15","nodeType":"VariableDeclaration","scope":2117,"src":"7940:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:15"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2117,"src":"7976:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2095,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:15"},"scope":2926,"src":"7886:249:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"8526:82:15","statements":[{"expression":{"arguments":[{"id":2128,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"8571:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2132,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"8587:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2130,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:15","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:15","memberName":"length","nodeType":"MemberAccess","src":"8581:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2127,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8543:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2126,"id":2136,"nodeType":"Return","src":"8536:65:15"}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"8141:287:15","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:15","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"input","nameLocation":"8468:5:15","nodeType":"VariableDeclaration","scope":2138,"src":"8454:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2119,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:15"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"success","nameLocation":"8503:7:15","nodeType":"VariableDeclaration","scope":2138,"src":"8498:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2122,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"value","nameLocation":"8519:5:15","nodeType":"VariableDeclaration","scope":2138,"src":"8512:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2124,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:15"},"scope":2926,"src":"8433:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2143,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:15","nodeType":"VariableDeclaration","scope":2926,"src":"8614:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2179,"nodeType":"Block","src":"9130:143:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"9144:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2160,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9156:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2158,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:15","typeDescriptions":{}}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:15","memberName":"length","nodeType":"MemberAccess","src":"9150:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"9173:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2165,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"9181:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2172,"nodeType":"IfStatement","src":"9140:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2156,"id":2171,"nodeType":"Return","src":"9186:17:15"}},{"expression":{"arguments":[{"id":2174,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9248:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2175,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"9255:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2176,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"9262:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2173,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"9220:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2156,"id":2178,"nodeType":"Return","src":"9213:53:15"}]},"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"8671:303:15","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:15","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"input","nameLocation":"9023:5:15","nodeType":"VariableDeclaration","scope":2180,"src":"9009:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2145,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"begin","nameLocation":"9046:5:15","nodeType":"VariableDeclaration","scope":2180,"src":"9038:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"end","nameLocation":"9069:3:15","nodeType":"VariableDeclaration","scope":2180,"src":"9061:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:15"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"success","nameLocation":"9107:7:15","nodeType":"VariableDeclaration","scope":2180,"src":"9102:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2152,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"value","nameLocation":"9123:5:15","nodeType":"VariableDeclaration","scope":2180,"src":"9116:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2154,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:15"},"scope":2926,"src":"8979:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"9673:812:15","statements":[{"assignments":[2195],"declarations":[{"constant":false,"id":2195,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:15","nodeType":"VariableDeclaration","scope":2300,"src":"9683:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2194,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2200,"initialValue":{"arguments":[{"id":2198,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"9711:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2196,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:15","typeDescriptions":{}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:15"},{"assignments":[2202],"declarations":[{"constant":false,"id":2202,"mutability":"mutable","name":"sign","nameLocation":"9781:4:15","nodeType":"VariableDeclaration","scope":2300,"src":"9774:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2201,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2218,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9788:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2204,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9797:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2213,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"9845:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2214,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2212,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"9822:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2210,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:15","typeDescriptions":{}}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:15","trueExpression":{"arguments":[{"hexValue":"30","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2206,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:15","typeDescriptions":{}}},"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:15"},{"assignments":[2220],"declarations":[{"constant":false,"id":2220,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:15","nodeType":"VariableDeclaration","scope":2300,"src":"9941:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2219,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2227,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"9961:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2222,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:15","typeDescriptions":{}}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:15"},{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:15","nodeType":"VariableDeclaration","scope":2300,"src":"9990:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2228,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2236,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"10010:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2231,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:15","typeDescriptions":{}}},"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:15"},{"assignments":[2238],"declarations":[{"constant":false,"id":2238,"mutability":"mutable","name":"offset","nameLocation":"10047:6:15","nodeType":"VariableDeclaration","scope":2300,"src":"10039:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2239,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"10057:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2240,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"10073:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"10056:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:15"},{"assignments":[2247,2249],"declarations":[{"constant":false,"id":2247,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:15","nodeType":"VariableDeclaration","scope":2300,"src":"10107:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2246,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:15","nodeType":"VariableDeclaration","scope":2300,"src":"10124:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2257,"initialValue":{"arguments":[{"id":2251,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"10157:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"10164:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2253,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"10172:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2255,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"10180:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2250,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1960,1997],"referencedDeclaration":1997,"src":"10144:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2258,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10199:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"10213:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2260,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"10224:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10341:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2279,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"10355:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"10371:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2282,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"10383:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2193,"id":2297,"nodeType":"Return","src":"10461:17:15"},"id":2298,"nodeType":"IfStatement","src":"10337:141:15","trueBody":{"id":2293,"nodeType":"Block","src":"10399:56:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2287,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:15","memberName":"min","nodeType":"MemberAccess","src":"10427:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2193,"id":2292,"nodeType":"Return","src":"10413:31:15"}]}},"id":2299,"nodeType":"IfStatement","src":"10195:283:15","trueBody":{"id":2277,"nodeType":"Block","src":"10240:91:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2264,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"10268:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2272,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"10310:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2270,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:15","typeDescriptions":{}}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:15","trueExpression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:15","subExpression":{"arguments":[{"id":2267,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"10291:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2265,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:15","typeDescriptions":{}}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2193,"id":2276,"nodeType":"Return","src":"10254:66:15"}]}}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"9279:223:15","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:15","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"input","nameLocation":"9567:5:15","nodeType":"VariableDeclaration","scope":2301,"src":"9553:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2182,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"begin","nameLocation":"9590:5:15","nodeType":"VariableDeclaration","scope":2301,"src":"9582:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"end","nameLocation":"9613:3:15","nodeType":"VariableDeclaration","scope":2301,"src":"9605:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:15"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"success","nameLocation":"9650:7:15","nodeType":"VariableDeclaration","scope":2301,"src":"9645:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2189,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"value","nameLocation":"9666:5:15","nodeType":"VariableDeclaration","scope":2301,"src":"9659:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2191,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:15"},"scope":2926,"src":"9507:978:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2319,"nodeType":"Block","src":"10830:67:15","statements":[{"expression":{"arguments":[{"id":2310,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10860:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2314,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10876:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2312,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:15","typeDescriptions":{}}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:15","memberName":"length","nodeType":"MemberAccess","src":"10870:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2309,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2320,2351],"referencedDeclaration":2351,"src":"10847:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2308,"id":2318,"nodeType":"Return","src":"10840:50:15"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"10491:259:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2320,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:15","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"input","nameLocation":"10791:5:15","nodeType":"VariableDeclaration","scope":2320,"src":"10777:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2303,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:15"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2320,"src":"10821:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:15"},"scope":2926,"src":"10755:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2350,"nodeType":"Block","src":"11318:156:15","statements":[{"assignments":[2333,2335],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"success","nameLocation":"11334:7:15","nodeType":"VariableDeclaration","scope":2350,"src":"11329:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2332,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"value","nameLocation":"11351:5:15","nodeType":"VariableDeclaration","scope":2350,"src":"11343:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2341,"initialValue":{"arguments":[{"id":2337,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"11376:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2338,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"11383:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"11390:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2336,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2372,2409],"referencedDeclaration":2409,"src":"11360:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:15"},{"condition":{"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:15","subExpression":{"id":2342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"11409:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2347,"nodeType":"IfStatement","src":"11404:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2344,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"11425:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2346,"nodeType":"RevertStatement","src":"11418:27:15"}},{"expression":{"id":2348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"11462:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2331,"id":2349,"nodeType":"Return","src":"11455:12:15"}]},"documentation":{"id":2321,"nodeType":"StructuredDocumentation","src":"10903:307:15","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2351,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:15","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"input","nameLocation":"11251:5:15","nodeType":"VariableDeclaration","scope":2351,"src":"11237:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"begin","nameLocation":"11266:5:15","nodeType":"VariableDeclaration","scope":2351,"src":"11258:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"end","nameLocation":"11281:3:15","nodeType":"VariableDeclaration","scope":2351,"src":"11273:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:15"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"11309:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:15"},"scope":2926,"src":"11215:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"11801:86:15","statements":[{"expression":{"arguments":[{"id":2362,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"11850:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2366,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"11866:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2364,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:15","typeDescriptions":{}}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:15","memberName":"length","nodeType":"MemberAccess","src":"11860:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2361,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"11818:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2360,"id":2370,"nodeType":"Return","src":"11811:69:15"}]},"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"11480:218:15","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:15","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"input","nameLocation":"11742:5:15","nodeType":"VariableDeclaration","scope":2372,"src":"11728:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2353,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:15"},"returnParameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"success","nameLocation":"11777:7:15","nodeType":"VariableDeclaration","scope":2372,"src":"11772:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2356,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"value","nameLocation":"11794:5:15","nodeType":"VariableDeclaration","scope":2372,"src":"11786:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:15"},"scope":2926,"src":"11703:184:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2408,"nodeType":"Block","src":"12295:147:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"12309:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2389,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"12321:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2387,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:15","typeDescriptions":{}}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:15","memberName":"length","nodeType":"MemberAccess","src":"12315:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"12338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2394,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"12346:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2401,"nodeType":"IfStatement","src":"12305:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2385,"id":2400,"nodeType":"Return","src":"12351:17:15"}},{"expression":{"arguments":[{"id":2403,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"12417:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2404,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"12424:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2405,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"12431:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2402,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"12385:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2385,"id":2407,"nodeType":"Return","src":"12378:57:15"}]},"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"11893:241:15","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:15","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"input","nameLocation":"12187:5:15","nodeType":"VariableDeclaration","scope":2409,"src":"12173:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2374,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"begin","nameLocation":"12210:5:15","nodeType":"VariableDeclaration","scope":2409,"src":"12202:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"end","nameLocation":"12233:3:15","nodeType":"VariableDeclaration","scope":2409,"src":"12225:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:15"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"success","nameLocation":"12271:7:15","nodeType":"VariableDeclaration","scope":2409,"src":"12266:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2381,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"value","nameLocation":"12288:5:15","nodeType":"VariableDeclaration","scope":2409,"src":"12280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:15"},"scope":2926,"src":"12139:303:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"12851:881:15","statements":[{"assignments":[2424],"declarations":[{"constant":false,"id":2424,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:15","nodeType":"VariableDeclaration","scope":2511,"src":"12861:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2423,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2429,"initialValue":{"arguments":[{"id":2427,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"12889:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2425,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:15","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:15"},{"assignments":[2431],"declarations":[{"constant":false,"id":2431,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:15","nodeType":"VariableDeclaration","scope":2511,"src":"12943:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2451,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"12961:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"12967:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2441,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"13011:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2442,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"13019:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2440,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12988:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2438,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:15","typeDescriptions":{}}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2445,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:15","typeDescriptions":{}}},"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:15"},{"assignments":[2453],"declarations":[{"constant":false,"id":2453,"mutability":"mutable","name":"offset","nameLocation":"13131:6:15","nodeType":"VariableDeclaration","scope":2511,"src":"13123:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2459,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2454,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"13140:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"13140:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:15"},{"assignments":[2461],"declarations":[{"constant":false,"id":2461,"mutability":"mutable","name":"result","nameLocation":"13181:6:15","nodeType":"VariableDeclaration","scope":2511,"src":"13173:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2463,"initialValue":{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:15"},{"body":{"id":2505,"nodeType":"Block","src":"13248:447:15","statements":[{"assignments":[2477],"declarations":[{"constant":false,"id":2477,"mutability":"mutable","name":"chr","nameLocation":"13268:3:15","nodeType":"VariableDeclaration","scope":2505,"src":"13262:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2476,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2487,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2482,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"13317:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"13325:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2481,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"13294:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2479,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:15","typeDescriptions":{}}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2478,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"13274:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"13347:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2495,"nodeType":"IfStatement","src":"13343:31:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2422,"id":2494,"nodeType":"Return","src":"13357:17:15"}},{"expression":{"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"13388:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2499,"nodeType":"ExpressionStatement","src":"13388:12:15"},{"id":2504,"nodeType":"UncheckedBlock","src":"13414:271:15","statements":[{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"13657:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2501,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"13667:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ExpressionStatement","src":"13657:13:15"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"13234:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2471,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"13238:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2506,"initializationExpression":{"assignments":[2465],"declarations":[{"constant":false,"id":2465,"mutability":"mutable","name":"i","nameLocation":"13214:1:15","nodeType":"VariableDeclaration","scope":2506,"src":"13206:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2469,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2466,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"13218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2467,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"13226:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:15","subExpression":{"id":2473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"13245:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2475,"nodeType":"ExpressionStatement","src":"13243:3:15"},"nodeType":"ForStatement","src":"13201:494:15"},{"expression":{"components":[{"hexValue":"74727565","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"13718:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2422,"id":2510,"nodeType":"Return","src":"13704:21:15"}]},"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"12448:227:15","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:15","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"input","nameLocation":"12744:5:15","nodeType":"VariableDeclaration","scope":2512,"src":"12730:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2411,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2414,"mutability":"mutable","name":"begin","nameLocation":"12767:5:15","nodeType":"VariableDeclaration","scope":2512,"src":"12759:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"end","nameLocation":"12790:3:15","nodeType":"VariableDeclaration","scope":2512,"src":"12782:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:15"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"success","nameLocation":"12827:7:15","nodeType":"VariableDeclaration","scope":2512,"src":"12822:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2418,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"value","nameLocation":"12844:5:15","nodeType":"VariableDeclaration","scope":2512,"src":"12836:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:15"},"scope":2926,"src":"12680:1052:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2530,"nodeType":"Block","src":"14030:67:15","statements":[{"expression":{"arguments":[{"id":2521,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"14060:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2525,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"14076:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2523,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:15","typeDescriptions":{}}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:15","memberName":"length","nodeType":"MemberAccess","src":"14070:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2520,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2531,2562],"referencedDeclaration":2562,"src":"14047:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2519,"id":2529,"nodeType":"Return","src":"14040:50:15"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"13738:212:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2531,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:15","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"input","nameLocation":"13991:5:15","nodeType":"VariableDeclaration","scope":2531,"src":"13977:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2514,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:15"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2531,"src":"14021:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:15"},"scope":2926,"src":"13955:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2561,"nodeType":"Block","src":"14470:165:15","statements":[{"assignments":[2544,2546],"declarations":[{"constant":false,"id":2544,"mutability":"mutable","name":"success","nameLocation":"14486:7:15","nodeType":"VariableDeclaration","scope":2561,"src":"14481:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2543,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"value","nameLocation":"14503:5:15","nodeType":"VariableDeclaration","scope":2561,"src":"14495:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2552,"initialValue":{"arguments":[{"id":2548,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"14528:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2549,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"14535:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2550,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"14542:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2547,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2583,2687],"referencedDeclaration":2687,"src":"14512:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:15"},{"condition":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:15","subExpression":{"id":2553,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"14561:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2558,"nodeType":"IfStatement","src":"14556:50:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2555,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"14577:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2557,"nodeType":"RevertStatement","src":"14570:36:15"}},{"expression":{"id":2559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"14623:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2542,"id":2560,"nodeType":"Return","src":"14616:12:15"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"14103:259:15","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:15","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"input","nameLocation":"14403:5:15","nodeType":"VariableDeclaration","scope":2562,"src":"14389:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2533,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"begin","nameLocation":"14418:5:15","nodeType":"VariableDeclaration","scope":2562,"src":"14410:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"end","nameLocation":"14433:3:15","nodeType":"VariableDeclaration","scope":2562,"src":"14425:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:15"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"14461:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2540,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:15"},"scope":2926,"src":"14367:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2582,"nodeType":"Block","src":"14942:70:15","statements":[{"expression":{"arguments":[{"id":2573,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"14975:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2577,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"14991:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2575,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:15","typeDescriptions":{}}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:15","memberName":"length","nodeType":"MemberAccess","src":"14985:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2583,2687],"referencedDeclaration":2687,"src":"14959:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2571,"id":2581,"nodeType":"Return","src":"14952:53:15"}]},"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"14641:198:15","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:15","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"input","nameLocation":"14883:5:15","nodeType":"VariableDeclaration","scope":2583,"src":"14869:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2564,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:15"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"success","nameLocation":"14918:7:15","nodeType":"VariableDeclaration","scope":2583,"src":"14913:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2567,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"value","nameLocation":"14935:5:15","nodeType":"VariableDeclaration","scope":2583,"src":"14927:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:15"},"scope":2926,"src":"14844:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2686,"nodeType":"Block","src":"15405:733:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2597,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15419:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2600,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"15431:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2598,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:15","typeDescriptions":{}}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:15","memberName":"length","nodeType":"MemberAccess","src":"15425:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2604,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"15448:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2605,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15456:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2615,"nodeType":"IfStatement","src":"15415:72:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:15","typeDescriptions":{}}},"id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2596,"id":2614,"nodeType":"Return","src":"15461:26:15"}},{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:15","nodeType":"VariableDeclaration","scope":2686,"src":"15498:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2640,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15516:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"15522:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2629,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"15572:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2627,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:15","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2631,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"15580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2626,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"15543:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2624,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:15","typeDescriptions":{}}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2634,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:15","typeDescriptions":{}}},"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:15"},{"assignments":[2642],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:15","nodeType":"VariableDeclaration","scope":2686,"src":"15684:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2650,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2644,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"15714:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"15714:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15801:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2652,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"15807:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2654,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"15816:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2684,"nodeType":"Block","src":"16081:51:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:15","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2596,"id":2683,"nodeType":"Return","src":"16095:26:15"}]},"id":2685,"nodeType":"IfStatement","src":"15797:335:15","trueBody":{"id":2676,"nodeType":"Block","src":"15832:243:15","statements":[{"assignments":[2657,2659],"declarations":[{"constant":false,"id":2657,"mutability":"mutable","name":"s","nameLocation":"15953:1:15","nodeType":"VariableDeclaration","scope":2676,"src":"15948:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2656,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"v","nameLocation":"15964:1:15","nodeType":"VariableDeclaration","scope":2676,"src":"15956:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2665,"initialValue":{"arguments":[{"id":2661,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16001:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2662,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"16008:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2663,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"16015:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2660,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"15969:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:15"},{"expression":{"components":[{"id":2666,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"16041:1:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2671,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"16060:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2669,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:15","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:15","typeDescriptions":{}}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2596,"id":2675,"nodeType":"Return","src":"16033:31:15"}]}}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"15018:226:15","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2687,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:15","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"input","nameLocation":"15297:5:15","nodeType":"VariableDeclaration","scope":2687,"src":"15283:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2585,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"begin","nameLocation":"15320:5:15","nodeType":"VariableDeclaration","scope":2687,"src":"15312:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"end","nameLocation":"15343:3:15","nodeType":"VariableDeclaration","scope":2687,"src":"15335:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:15"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"15381:7:15","nodeType":"VariableDeclaration","scope":2687,"src":"15376:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"value","nameLocation":"15398:5:15","nodeType":"VariableDeclaration","scope":2687,"src":"15390:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:15"},"scope":2926,"src":"15249:889:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"16207:461:15","statements":[{"assignments":[2695],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"value","nameLocation":"16223:5:15","nodeType":"VariableDeclaration","scope":2746,"src":"16217:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2694,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2700,"initialValue":{"arguments":[{"id":2698,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"16237:3:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2696,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:15","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:15"},{"id":2743,"nodeType":"UncheckedBlock","src":"16401:238:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16429:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:15","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16443:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:15","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16489:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16503:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:15","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16550:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16564:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2735,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:15","memberName":"max","nodeType":"MemberAccess","src":"16613:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2693,"id":2739,"nodeType":"Return","src":"16606:22:15"},"id":2740,"nodeType":"IfStatement","src":"16546:82:15","trueBody":{"expression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16576:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:15","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2733,"nodeType":"ExpressionStatement","src":"16576:11:15"}},"id":2741,"nodeType":"IfStatement","src":"16485:143:15","trueBody":{"expression":{"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16516:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:15","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2722,"nodeType":"ExpressionStatement","src":"16516:11:15"}},"id":2742,"nodeType":"IfStatement","src":"16425:203:15","trueBody":{"expression":{"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16455:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2711,"nodeType":"ExpressionStatement","src":"16455:11:15"}}]},{"expression":{"id":2744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"16656:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2693,"id":2745,"nodeType":"Return","src":"16649:12:15"}]},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:15","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"chr","nameLocation":"16173:3:15","nodeType":"VariableDeclaration","scope":2747,"src":"16166:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2688,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:15"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2747,"src":"16200:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2691,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:15"},"scope":2926,"src":"16144:524:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2912,"nodeType":"Block","src":"17334:1331:15","statements":[{"assignments":[2756],"declarations":[{"constant":false,"id":2756,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:15","nodeType":"VariableDeclaration","scope":2912,"src":"17344:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2755,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2761,"initialValue":{"arguments":[{"id":2759,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"17372:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2757,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:15","typeDescriptions":{}}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:15"},{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"output","nameLocation":"17401:6:15","nodeType":"VariableDeclaration","scope":2912,"src":"17388:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2762,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2771,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2767,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"17424:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:15","memberName":"length","nodeType":"MemberAccess","src":"17424:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2764,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:15"},{"assignments":[2773],"declarations":[{"constant":false,"id":2773,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:15","nodeType":"VariableDeclaration","scope":2912,"src":"17471:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2775,"initialValue":{"hexValue":"30","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:15"},{"body":{"id":2904,"nodeType":"Block","src":"17546:854:15","statements":[{"assignments":[2787],"declarations":[{"constant":false,"id":2787,"mutability":"mutable","name":"char","nameLocation":"17567:4:15","nodeType":"VariableDeclaration","scope":2904,"src":"17560:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2786,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2795,"initialValue":{"arguments":[{"arguments":[{"id":2791,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"17604:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"17612:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2790,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"17581:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2788,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:15","typeDescriptions":{}}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"17635:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2800,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"17670:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2798,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:15","typeDescriptions":{}}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2902,"nodeType":"Block","src":"18328:62:15","statements":[{"expression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2895,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"18346:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2898,"indexExpression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:15","subExpression":{"id":2896,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"18353:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2899,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"18371:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2901,"nodeType":"ExpressionStatement","src":"18346:29:15"}]},"id":2903,"nodeType":"IfStatement","src":"17629:761:15","trueBody":{"id":2894,"nodeType":"Block","src":"17685:637:15","statements":[{"expression":{"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2809,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"17703:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2812,"indexExpression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:15","subExpression":{"id":2810,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"17710:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2815,"nodeType":"ExpressionStatement","src":"17703:29:15"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"17754:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"17823:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"17892:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"17961:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"18030:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"18099:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2876,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"18169:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2887,"nodeType":"IfStatement","src":"18165:143:15","trueBody":{"id":2886,"nodeType":"Block","src":"18183:125:15","statements":[{"expression":{"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2879,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"18261:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2882,"indexExpression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:15","subExpression":{"id":2880,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"18268:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2885,"nodeType":"ExpressionStatement","src":"18261:28:15"}]}},"id":2888,"nodeType":"IfStatement","src":"18095:213:15","trueBody":{"expression":{"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2869,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"18113:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2872,"indexExpression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:15","subExpression":{"id":2870,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"18120:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2875,"nodeType":"ExpressionStatement","src":"18113:29:15"}},"id":2889,"nodeType":"IfStatement","src":"18026:282:15","trueBody":{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2859,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"18044:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2862,"indexExpression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:15","subExpression":{"id":2860,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"18051:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2865,"nodeType":"ExpressionStatement","src":"18044:28:15"}},"id":2890,"nodeType":"IfStatement","src":"17957:351:15","trueBody":{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2849,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"17975:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2852,"indexExpression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:15","subExpression":{"id":2850,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"17982:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2855,"nodeType":"ExpressionStatement","src":"17975:28:15"}},"id":2891,"nodeType":"IfStatement","src":"17888:420:15","trueBody":{"expression":{"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2839,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"17906:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2842,"indexExpression":{"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:15","subExpression":{"id":2840,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"17913:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2845,"nodeType":"ExpressionStatement","src":"17906:28:15"}},"id":2892,"nodeType":"IfStatement","src":"17819:489:15","trueBody":{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2829,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"17837:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2832,"indexExpression":{"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:15","subExpression":{"id":2830,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"17844:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2835,"nodeType":"ExpressionStatement","src":"17837:28:15"}},"id":2893,"nodeType":"IfStatement","src":"17750:558:15","trueBody":{"expression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2819,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"17768:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2822,"indexExpression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:15","subExpression":{"id":2820,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"17775:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2825,"nodeType":"ExpressionStatement","src":"17768:28:15"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"17522:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2780,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"17526:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:15","memberName":"length","nodeType":"MemberAccess","src":"17526:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"initializationExpression":{"assignments":[2777],"declarations":[{"constant":false,"id":2777,"mutability":"mutable","name":"i","nameLocation":"17519:1:15","nodeType":"VariableDeclaration","scope":2905,"src":"17511:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2778,"nodeType":"VariableDeclarationStatement","src":"17511:9:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:15","subExpression":{"id":2783,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"17543:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2785,"nodeType":"ExpressionStatement","src":"17541:3:15"},"nodeType":"ForStatement","src":"17506:894:15"},{"AST":{"nativeSrc":"18498:129:15","nodeType":"YulBlock","src":"18498:129:15","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:15","nodeType":"YulIdentifier","src":"18519:6:15"},{"name":"outputLength","nativeSrc":"18527:12:15","nodeType":"YulIdentifier","src":"18527:12:15"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:15","nodeType":"YulIdentifier","src":"18512:6:15"},"nativeSrc":"18512:28:15","nodeType":"YulFunctionCall","src":"18512:28:15"},"nativeSrc":"18512:28:15","nodeType":"YulExpressionStatement","src":"18512:28:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:15","nodeType":"YulLiteral","src":"18560:4:15","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:15","nodeType":"YulIdentifier","src":"18570:6:15"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:15","nodeType":"YulLiteral","src":"18582:1:15","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:15","nodeType":"YulLiteral","src":"18589:1:15","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:15","nodeType":"YulIdentifier","src":"18596:12:15"},{"kind":"number","nativeSrc":"18610:2:15","nodeType":"YulLiteral","src":"18610:2:15","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:15","nodeType":"YulIdentifier","src":"18592:3:15"},"nativeSrc":"18592:21:15","nodeType":"YulFunctionCall","src":"18592:21:15"}],"functionName":{"name":"shr","nativeSrc":"18585:3:15","nodeType":"YulIdentifier","src":"18585:3:15"},"nativeSrc":"18585:29:15","nodeType":"YulFunctionCall","src":"18585:29:15"}],"functionName":{"name":"shl","nativeSrc":"18578:3:15","nodeType":"YulIdentifier","src":"18578:3:15"},"nativeSrc":"18578:37:15","nodeType":"YulFunctionCall","src":"18578:37:15"}],"functionName":{"name":"add","nativeSrc":"18566:3:15","nodeType":"YulIdentifier","src":"18566:3:15"},"nativeSrc":"18566:50:15","nodeType":"YulFunctionCall","src":"18566:50:15"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:15","nodeType":"YulIdentifier","src":"18553:6:15"},"nativeSrc":"18553:64:15","nodeType":"YulFunctionCall","src":"18553:64:15"},"nativeSrc":"18553:64:15","nodeType":"YulExpressionStatement","src":"18553:64:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2763,"isOffset":false,"isSlot":false,"src":"18519:6:15","valueSize":1},{"declaration":2763,"isOffset":false,"isSlot":false,"src":"18570:6:15","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"18527:12:15","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"18596:12:15","valueSize":1}],"flags":["memory-safe"],"id":2906,"nodeType":"InlineAssembly","src":"18473:154:15"},{"expression":{"arguments":[{"id":2909,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"18651:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2907,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:15","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2754,"id":2911,"nodeType":"Return","src":"18637:21:15"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"16674:576:15","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:15","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"input","nameLocation":"17289:5:15","nodeType":"VariableDeclaration","scope":2913,"src":"17275:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2749,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:15"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2913,"src":"17319:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2752,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:15"},"scope":2926,"src":"17255:1410:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2924,"nodeType":"Block","src":"19050:225:15","statements":[{"AST":{"nativeSrc":"19199:70:15","nodeType":"YulBlock","src":"19199:70:15","statements":[{"nativeSrc":"19213:46:15","nodeType":"YulAssignment","src":"19213:46:15","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:15","nodeType":"YulIdentifier","src":"19232:6:15"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:15","nodeType":"YulLiteral","src":"19244:4:15","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:15","nodeType":"YulIdentifier","src":"19250:6:15"}],"functionName":{"name":"add","nativeSrc":"19240:3:15","nodeType":"YulIdentifier","src":"19240:3:15"},"nativeSrc":"19240:17:15","nodeType":"YulFunctionCall","src":"19240:17:15"}],"functionName":{"name":"add","nativeSrc":"19228:3:15","nodeType":"YulIdentifier","src":"19228:3:15"},"nativeSrc":"19228:30:15","nodeType":"YulFunctionCall","src":"19228:30:15"}],"functionName":{"name":"mload","nativeSrc":"19222:5:15","nodeType":"YulIdentifier","src":"19222:5:15"},"nativeSrc":"19222:37:15","nodeType":"YulFunctionCall","src":"19222:37:15"},"variableNames":[{"name":"value","nativeSrc":"19213:5:15","nodeType":"YulIdentifier","src":"19213:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2916,"isOffset":false,"isSlot":false,"src":"19232:6:15","valueSize":1},{"declaration":2918,"isOffset":false,"isSlot":false,"src":"19250:6:15","valueSize":1},{"declaration":2921,"isOffset":false,"isSlot":false,"src":"19213:5:15","valueSize":1}],"flags":["memory-safe"],"id":2923,"nodeType":"InlineAssembly","src":"19174:95:15"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"18671:268:15","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2925,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:15","nodeType":"FunctionDefinition","parameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:15","nodeType":"VariableDeclaration","scope":2925,"src":"18976:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2915,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"offset","nameLocation":"19005:6:15","nodeType":"VariableDeclaration","scope":2925,"src":"18997:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:15"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"value","nameLocation":"19043:5:15","nodeType":"VariableDeclaration","scope":2925,"src":"19035:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:15"},"scope":2926,"src":"18944:331:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2927,"src":"297:18980:15","usedErrors":[1584,1587,1590],"usedEvents":[]}],"src":"101:19177:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3274]},"id":3275,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2928,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"138:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3274,"linearizedBaseContracts":[3274],"name":"ECDSA","nameLocation":"352:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2934,"members":[{"id":2930,"name":"NoError","nameLocation":"392:7:16","nodeType":"EnumValue","src":"392:7:16"},{"id":2931,"name":"InvalidSignature","nameLocation":"409:16:16","nodeType":"EnumValue","src":"409:16:16"},{"id":2932,"name":"InvalidSignatureLength","nameLocation":"435:22:16","nodeType":"EnumValue","src":"435:22:16"},{"id":2933,"name":"InvalidSignatureS","nameLocation":"467:17:16","nodeType":"EnumValue","src":"467:17:16"}],"name":"RecoverError","nameLocation":"369:12:16","nodeType":"EnumDefinition","src":"364:126:16"},{"documentation":{"id":2935,"nodeType":"StructuredDocumentation","src":"496:63:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2937,"name":"ECDSAInvalidSignature","nameLocation":"570:21:16","nodeType":"ErrorDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[],"src":"591:2:16"},"src":"564:30:16"},{"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"600:60:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2942,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:16","nodeType":"ErrorDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"length","nameLocation":"707:6:16","nodeType":"VariableDeclaration","scope":2942,"src":"699:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:16"},"src":"665:50:16"},{"documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"721:85:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2947,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:16","nodeType":"ErrorDefinition","parameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"s","nameLocation":"848:1:16","nodeType":"VariableDeclaration","scope":2947,"src":"840:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:16"},"src":"811:40:16"},{"body":{"id":2999,"nodeType":"Block","src":"2285:622:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2962,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"2299:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:16","memberName":"length","nodeType":"MemberAccess","src":"2299:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2997,"nodeType":"Block","src":"2793:108:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:16","typeDescriptions":{}}},"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2988,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2827:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2934_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2932,"src":"2827:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2992,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"2872:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:16","memberName":"length","nodeType":"MemberAccess","src":"2872:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:16","typeDescriptions":{}}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2961,"id":2996,"nodeType":"Return","src":"2807:83:16"}]},"id":2998,"nodeType":"IfStatement","src":"2295:606:16","trueBody":{"id":2983,"nodeType":"Block","src":"2323:464:16","statements":[{"assignments":[2967],"declarations":[{"constant":false,"id":2967,"mutability":"mutable","name":"r","nameLocation":"2345:1:16","nodeType":"VariableDeclaration","scope":2983,"src":"2337:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2968,"nodeType":"VariableDeclarationStatement","src":"2337:9:16"},{"assignments":[2970],"declarations":[{"constant":false,"id":2970,"mutability":"mutable","name":"s","nameLocation":"2368:1:16","nodeType":"VariableDeclaration","scope":2983,"src":"2360:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2971,"nodeType":"VariableDeclarationStatement","src":"2360:9:16"},{"assignments":[2973],"declarations":[{"constant":false,"id":2973,"mutability":"mutable","name":"v","nameLocation":"2389:1:16","nodeType":"VariableDeclaration","scope":2983,"src":"2383:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2972,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2974,"nodeType":"VariableDeclarationStatement","src":"2383:7:16"},{"AST":{"nativeSrc":"2560:171:16","nodeType":"YulBlock","src":"2560:171:16","statements":[{"nativeSrc":"2578:32:16","nodeType":"YulAssignment","src":"2578:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:16","nodeType":"YulIdentifier","src":"2593:9:16"},{"kind":"number","nativeSrc":"2604:4:16","nodeType":"YulLiteral","src":"2604:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:16","nodeType":"YulIdentifier","src":"2589:3:16"},"nativeSrc":"2589:20:16","nodeType":"YulFunctionCall","src":"2589:20:16"}],"functionName":{"name":"mload","nativeSrc":"2583:5:16","nodeType":"YulIdentifier","src":"2583:5:16"},"nativeSrc":"2583:27:16","nodeType":"YulFunctionCall","src":"2583:27:16"},"variableNames":[{"name":"r","nativeSrc":"2578:1:16","nodeType":"YulIdentifier","src":"2578:1:16"}]},{"nativeSrc":"2627:32:16","nodeType":"YulAssignment","src":"2627:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:16","nodeType":"YulIdentifier","src":"2642:9:16"},{"kind":"number","nativeSrc":"2653:4:16","nodeType":"YulLiteral","src":"2653:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:16","nodeType":"YulIdentifier","src":"2638:3:16"},"nativeSrc":"2638:20:16","nodeType":"YulFunctionCall","src":"2638:20:16"}],"functionName":{"name":"mload","nativeSrc":"2632:5:16","nodeType":"YulIdentifier","src":"2632:5:16"},"nativeSrc":"2632:27:16","nodeType":"YulFunctionCall","src":"2632:27:16"},"variableNames":[{"name":"s","nativeSrc":"2627:1:16","nodeType":"YulIdentifier","src":"2627:1:16"}]},{"nativeSrc":"2676:41:16","nodeType":"YulAssignment","src":"2676:41:16","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:16","nodeType":"YulLiteral","src":"2686:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:16","nodeType":"YulIdentifier","src":"2699:9:16"},{"kind":"number","nativeSrc":"2710:4:16","nodeType":"YulLiteral","src":"2710:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:16","nodeType":"YulIdentifier","src":"2695:3:16"},"nativeSrc":"2695:20:16","nodeType":"YulFunctionCall","src":"2695:20:16"}],"functionName":{"name":"mload","nativeSrc":"2689:5:16","nodeType":"YulIdentifier","src":"2689:5:16"},"nativeSrc":"2689:27:16","nodeType":"YulFunctionCall","src":"2689:27:16"}],"functionName":{"name":"byte","nativeSrc":"2681:4:16","nodeType":"YulIdentifier","src":"2681:4:16"},"nativeSrc":"2681:36:16","nodeType":"YulFunctionCall","src":"2681:36:16"},"variableNames":[{"name":"v","nativeSrc":"2676:1:16","nodeType":"YulIdentifier","src":"2676:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2967,"isOffset":false,"isSlot":false,"src":"2578:1:16","valueSize":1},{"declaration":2970,"isOffset":false,"isSlot":false,"src":"2627:1:16","valueSize":1},{"declaration":2952,"isOffset":false,"isSlot":false,"src":"2593:9:16","valueSize":1},{"declaration":2952,"isOffset":false,"isSlot":false,"src":"2642:9:16","valueSize":1},{"declaration":2952,"isOffset":false,"isSlot":false,"src":"2699:9:16","valueSize":1},{"declaration":2973,"isOffset":false,"isSlot":false,"src":"2676:1:16","valueSize":1}],"flags":["memory-safe"],"id":2975,"nodeType":"InlineAssembly","src":"2535:196:16"},{"expression":{"arguments":[{"id":2977,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2762:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2978,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"2768:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2979,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"2771:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2980,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"2774:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2976,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3000,3080,3188],"referencedDeclaration":3188,"src":"2751:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2961,"id":2982,"nodeType":"Return","src":"2744:32:16"}]}}]},"documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"857:1267:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3000,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:16","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"hash","nameLocation":"2166:4:16","nodeType":"VariableDeclaration","scope":3000,"src":"2158:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"signature","nameLocation":"2193:9:16","nodeType":"VariableDeclaration","scope":3000,"src":"2180:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2951,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:16"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:16","nodeType":"VariableDeclaration","scope":3000,"src":"2232:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"err","nameLocation":"2264:3:16","nodeType":"VariableDeclaration","scope":3000,"src":"2251:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2957,"nodeType":"UserDefinedTypeName","pathNode":{"id":2956,"name":"RecoverError","nameLocations":["2251:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2934,"src":"2251:12:16"},"referencedDeclaration":2934,"src":"2251:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:16","nodeType":"VariableDeclaration","scope":3000,"src":"2269:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:16"},"scope":3274,"src":"2129:778:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"3801:168:16","statements":[{"assignments":[3011,3014,3016],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:16","nodeType":"VariableDeclaration","scope":3029,"src":"3812:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"error","nameLocation":"3844:5:16","nodeType":"VariableDeclaration","scope":3029,"src":"3831:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3013,"nodeType":"UserDefinedTypeName","pathNode":{"id":3012,"name":"RecoverError","nameLocations":["3831:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2934,"src":"3831:12:16"},"referencedDeclaration":2934,"src":"3831:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:16","nodeType":"VariableDeclaration","scope":3029,"src":"3851:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3021,"initialValue":{"arguments":[{"id":3018,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3882:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3019,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3888:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3017,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3000,3080,3188],"referencedDeclaration":3000,"src":"3871:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:16"},{"expression":{"arguments":[{"id":3023,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"3920:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},{"id":3024,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"3927:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3022,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"3908:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2934_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3026,"nodeType":"ExpressionStatement","src":"3908:28:16"},{"expression":{"id":3027,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"3953:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3009,"id":3028,"nodeType":"Return","src":"3946:16:16"}]},"documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"2913:796:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:16","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"hash","nameLocation":"3739:4:16","nodeType":"VariableDeclaration","scope":3030,"src":"3731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"signature","nameLocation":"3758:9:16","nodeType":"VariableDeclaration","scope":3030,"src":"3745:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3004,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:16"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"3792:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3007,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:16"},"scope":3274,"src":"3714:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3079,"nodeType":"Block","src":"4348:342:16","statements":[{"id":3078,"nodeType":"UncheckedBlock","src":"4358:326:16","statements":[{"assignments":[3048],"declarations":[{"constant":false,"id":3048,"mutability":"mutable","name":"s","nameLocation":"4390:1:16","nodeType":"VariableDeclaration","scope":3078,"src":"4382:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3055,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"4394:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:16","typeDescriptions":{}}},"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:16"},{"assignments":[3057],"declarations":[{"constant":false,"id":3057,"mutability":"mutable","name":"v","nameLocation":"4591:1:16","nodeType":"VariableDeclaration","scope":3078,"src":"4585:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3056,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3070,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3062,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"4610:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:16","typeDescriptions":{}}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3058,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:16","typeDescriptions":{}}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:16"},{"expression":{"arguments":[{"id":3072,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"4659:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3073,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"4665:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3074,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"4668:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3075,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"4671:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3071,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3000,3080,3188],"referencedDeclaration":3188,"src":"4648:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3046,"id":3077,"nodeType":"Return","src":"4641:32:16"}]}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"3975:205:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:16","nodeType":"FunctionDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"hash","nameLocation":"4222:4:16","nodeType":"VariableDeclaration","scope":3080,"src":"4214:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"r","nameLocation":"4244:1:16","nodeType":"VariableDeclaration","scope":3080,"src":"4236:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"vs","nameLocation":"4263:2:16","nodeType":"VariableDeclaration","scope":3080,"src":"4255:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:16"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:16","nodeType":"VariableDeclaration","scope":3080,"src":"4295:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3039,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"err","nameLocation":"4327:3:16","nodeType":"VariableDeclaration","scope":3080,"src":"4314:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3042,"nodeType":"UserDefinedTypeName","pathNode":{"id":3041,"name":"RecoverError","nameLocations":["4314:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2934,"src":"4314:12:16"},"referencedDeclaration":2934,"src":"4314:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:16","nodeType":"VariableDeclaration","scope":3080,"src":"4332:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:16"},"scope":3274,"src":"4185:505:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3112,"nodeType":"Block","src":"4903:164:16","statements":[{"assignments":[3093,3096,3098],"declarations":[{"constant":false,"id":3093,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:16","nodeType":"VariableDeclaration","scope":3112,"src":"4914:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3092,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"error","nameLocation":"4946:5:16","nodeType":"VariableDeclaration","scope":3112,"src":"4933:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3095,"nodeType":"UserDefinedTypeName","pathNode":{"id":3094,"name":"RecoverError","nameLocations":["4933:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2934,"src":"4933:12:16"},"referencedDeclaration":2934,"src":"4933:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:16","nodeType":"VariableDeclaration","scope":3112,"src":"4953:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3104,"initialValue":{"arguments":[{"id":3100,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"4984:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3101,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"4990:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3102,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"4993:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3099,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3000,3080,3188],"referencedDeclaration":3080,"src":"4973:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:16"},{"expression":{"arguments":[{"id":3106,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"5018:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},{"id":3107,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"5025:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3105,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5006:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2934_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3109,"nodeType":"ExpressionStatement","src":"5006:28:16"},{"expression":{"id":3110,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"5051:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3091,"id":3111,"nodeType":"Return","src":"5044:16:16"}]},"documentation":{"id":3081,"nodeType":"StructuredDocumentation","src":"4696:116:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3113,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:16","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"hash","nameLocation":"4842:4:16","nodeType":"VariableDeclaration","scope":3113,"src":"4834:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"r","nameLocation":"4856:1:16","nodeType":"VariableDeclaration","scope":3113,"src":"4848:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3087,"mutability":"mutable","name":"vs","nameLocation":"4867:2:16","nodeType":"VariableDeclaration","scope":3113,"src":"4859:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:16"},"returnParameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3113,"src":"4894:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:16"},"scope":3274,"src":"4817:250:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3187,"nodeType":"Block","src":"5382:1372:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3134,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6278:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:16","typeDescriptions":{}}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"IfStatement","src":"6266:164:16","trueBody":{"id":3147,"nodeType":"Block","src":"6351:79:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3138,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:16","typeDescriptions":{}}},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3142,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"6385:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2934_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2933,"src":"6385:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},{"id":3144,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6417:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3131,"id":3146,"nodeType":"Return","src":"6365:54:16"}]}},{"assignments":[3150],"declarations":[{"constant":false,"id":3150,"mutability":"mutable","name":"signer","nameLocation":"6532:6:16","nodeType":"VariableDeclaration","scope":3187,"src":"6524:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3149,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3157,"initialValue":{"arguments":[{"id":3152,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"6551:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3153,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"6557:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3154,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"6560:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3155,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6563:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3151,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"6579:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:16","typeDescriptions":{}}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3177,"nodeType":"IfStatement","src":"6575:113:16","trueBody":{"id":3176,"nodeType":"Block","src":"6601:87:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:16","typeDescriptions":{}}},"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3168,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"6635:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2934_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"6635:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:16","typeDescriptions":{}}},"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3131,"id":3175,"nodeType":"Return","src":"6615:62:16"}]}},{"expression":{"components":[{"id":3178,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"6706:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3179,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"6714:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2934_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"6714:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:16","typeDescriptions":{}}},"id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3131,"id":3186,"nodeType":"Return","src":"6698:49:16"}]},"documentation":{"id":3114,"nodeType":"StructuredDocumentation","src":"5073:125:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:16","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"hash","nameLocation":"5240:4:16","nodeType":"VariableDeclaration","scope":3188,"src":"5232:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"v","nameLocation":"5260:1:16","nodeType":"VariableDeclaration","scope":3188,"src":"5254:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3117,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"r","nameLocation":"5279:1:16","nodeType":"VariableDeclaration","scope":3188,"src":"5271:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"s","nameLocation":"5298:1:16","nodeType":"VariableDeclaration","scope":3188,"src":"5290:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:16"},"returnParameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:16","nodeType":"VariableDeclaration","scope":3188,"src":"5329:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3124,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3128,"mutability":"mutable","name":"err","nameLocation":"5361:3:16","nodeType":"VariableDeclaration","scope":3188,"src":"5348:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3127,"nodeType":"UserDefinedTypeName","pathNode":{"id":3126,"name":"RecoverError","nameLocations":["5348:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2934,"src":"5348:12:16"},"referencedDeclaration":2934,"src":"5348:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:16","nodeType":"VariableDeclaration","scope":3188,"src":"5366:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:16"},"scope":3274,"src":"5203:1551:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3223,"nodeType":"Block","src":"6981:166:16","statements":[{"assignments":[3203,3206,3208],"declarations":[{"constant":false,"id":3203,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:16","nodeType":"VariableDeclaration","scope":3223,"src":"6992:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"error","nameLocation":"7024:5:16","nodeType":"VariableDeclaration","scope":3223,"src":"7011:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3205,"nodeType":"UserDefinedTypeName","pathNode":{"id":3204,"name":"RecoverError","nameLocations":["7011:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2934,"src":"7011:12:16"},"referencedDeclaration":2934,"src":"7011:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:16","nodeType":"VariableDeclaration","scope":3223,"src":"7031:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3215,"initialValue":{"arguments":[{"id":3210,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"7062:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3211,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"7068:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3212,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7071:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3213,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"7074:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3209,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3000,3080,3188],"referencedDeclaration":3188,"src":"7051:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2934_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:16"},{"expression":{"arguments":[{"id":3217,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"7098:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},{"id":3218,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"7105:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3216,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"7086:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2934_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3220,"nodeType":"ExpressionStatement","src":"7086:28:16"},{"expression":{"id":3221,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"7131:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3201,"id":3222,"nodeType":"Return","src":"7124:16:16"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"6760:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3224,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:16","nodeType":"FunctionDefinition","parameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"hash","nameLocation":"6912:4:16","nodeType":"VariableDeclaration","scope":3224,"src":"6904:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"v","nameLocation":"6924:1:16","nodeType":"VariableDeclaration","scope":3224,"src":"6918:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3192,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"r","nameLocation":"6935:1:16","nodeType":"VariableDeclaration","scope":3224,"src":"6927:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3197,"mutability":"mutable","name":"s","nameLocation":"6946:1:16","nodeType":"VariableDeclaration","scope":3224,"src":"6938:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:16"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3224,"src":"6972:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3199,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:16"},"scope":3274,"src":"6887:260:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3272,"nodeType":"Block","src":"7352:460:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"7366:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3234,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7375:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2934_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"7375:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"7462:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3240,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7471:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2934_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"7471:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"7567:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3248,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7576:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2934_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2932,"src":"7576:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"7701:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3260,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7710:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2934_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2933,"src":"7710:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3268,"nodeType":"IfStatement","src":"7697:109:16","trueBody":{"id":3267,"nodeType":"Block","src":"7742:64:16","statements":[{"errorCall":{"arguments":[{"id":3264,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"7786:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3263,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"7763:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3266,"nodeType":"RevertStatement","src":"7756:39:16"}]}},"id":3269,"nodeType":"IfStatement","src":"7563:243:16","trueBody":{"id":3258,"nodeType":"Block","src":"7613:78:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3254,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"7670:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:16","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3251,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"7634:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3257,"nodeType":"RevertStatement","src":"7627:53:16"}]}},"id":3270,"nodeType":"IfStatement","src":"7458:348:16","trueBody":{"id":3246,"nodeType":"Block","src":"7502:55:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3243,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"7523:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3245,"nodeType":"RevertStatement","src":"7516:30:16"}]}},"id":3271,"nodeType":"IfStatement","src":"7362:444:16","trueBody":{"id":3238,"nodeType":"Block","src":"7397:55:16","statements":[{"functionReturnParameters":3232,"id":3237,"nodeType":"Return","src":"7411:7:16"}]}}]},"documentation":{"id":3225,"nodeType":"StructuredDocumentation","src":"7153:122:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3273,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:16","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"error","nameLocation":"7314:5:16","nodeType":"VariableDeclaration","scope":3273,"src":"7301:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3227,"nodeType":"UserDefinedTypeName","pathNode":{"id":3226,"name":"RecoverError","nameLocations":["7301:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2934,"src":"7301:12:16"},"referencedDeclaration":2934,"src":"7301:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2934","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:16","nodeType":"VariableDeclaration","scope":3273,"src":"7321:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:16"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[],"src":"7352:0:16"},"scope":3274,"src":"7280:532:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3275,"src":"344:7470:16","usedErrors":[2937,2942,2947],"usedEvents":[]}],"src":"112:7703:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3360],"Strings":[2926]},"id":3361,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3276,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3361,"sourceUnit":2927,"src":"149:39:17","symbolAliases":[{"foreign":{"id":3277,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"157:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"190:330:17","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3360,"linearizedBaseContracts":[3360],"name":"MessageHashUtils","nameLocation":"529:16:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3288,"nodeType":"Block","src":"1339:341:17","statements":[{"AST":{"nativeSrc":"1374:300:17","nodeType":"YulBlock","src":"1374:300:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:17","nodeType":"YulLiteral","src":"1395:4:17","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:17","nodeType":"YulLiteral","src":"1401:34:17","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:17","nodeType":"YulIdentifier","src":"1388:6:17"},"nativeSrc":"1388:48:17","nodeType":"YulFunctionCall","src":"1388:48:17"},"nativeSrc":"1388:48:17","nodeType":"YulExpressionStatement","src":"1388:48:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:17","nodeType":"YulLiteral","src":"1497:4:17","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:17","nodeType":"YulIdentifier","src":"1503:11:17"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:17","nodeType":"YulIdentifier","src":"1490:6:17"},"nativeSrc":"1490:25:17","nodeType":"YulFunctionCall","src":"1490:25:17"},"nativeSrc":"1490:25:17","nodeType":"YulExpressionStatement","src":"1490:25:17"},{"nativeSrc":"1569:31:17","nodeType":"YulAssignment","src":"1569:31:17","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:17","nodeType":"YulLiteral","src":"1589:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:17","nodeType":"YulLiteral","src":"1595:4:17","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:17","nodeType":"YulIdentifier","src":"1579:9:17"},"nativeSrc":"1579:21:17","nodeType":"YulFunctionCall","src":"1579:21:17"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:17","nodeType":"YulIdentifier","src":"1569:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3285,"isOffset":false,"isSlot":false,"src":"1569:6:17","valueSize":1},{"declaration":3282,"isOffset":false,"isSlot":false,"src":"1503:11:17","valueSize":1}],"flags":["memory-safe"],"id":3287,"nodeType":"InlineAssembly","src":"1349:325:17"}]},"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"552:690:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3289,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:17","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:17","nodeType":"VariableDeclaration","scope":3289,"src":"1279:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:17"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"digest","nameLocation":"1331:6:17","nodeType":"VariableDeclaration","scope":3289,"src":"1323:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:17"},"scope":3360,"src":"1247:433:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3314,"nodeType":"Block","src":"2257:143:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3306,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2366:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:17","memberName":"length","nodeType":"MemberAccess","src":"2366:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3304,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"2349:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2926_$","typeString":"type(library Strings)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"2349:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3302,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:17","typeDescriptions":{}}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3310,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2384:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3298,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:17","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:17","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3297,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3296,"id":3313,"nodeType":"Return","src":"2267:126:17"}]},"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"1686:480:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3315,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:17","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"message","nameLocation":"2216:7:17","nodeType":"VariableDeclaration","scope":3315,"src":"2203:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3291,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:17"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3315,"src":"2248:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:17"},"scope":3360,"src":"2171:229:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3334,"nodeType":"Block","src":"2854:80:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3329,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"2910:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3330,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"2921:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3326,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3325,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3324,"id":3333,"nodeType":"Return","src":"2864:63:17"}]},"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"2406:332:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3335,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:17","nodeType":"FunctionDefinition","parameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"validator","nameLocation":"2792:9:17","nodeType":"VariableDeclaration","scope":3335,"src":"2784:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3317,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"data","nameLocation":"2816:4:17","nodeType":"VariableDeclaration","scope":3335,"src":"2803:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3319,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:17"},"returnParameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3335,"src":"2845:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:17"},"scope":3360,"src":"2743:191:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"3216:216:17","statements":[{"AST":{"nativeSrc":"3251:175:17","nodeType":"YulBlock","src":"3251:175:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:17","nodeType":"YulLiteral","src":"3272:4:17","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:17","nodeType":"YulLiteral","src":"3278:10:17","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:17","nodeType":"YulIdentifier","src":"3265:6:17"},"nativeSrc":"3265:24:17","nodeType":"YulFunctionCall","src":"3265:24:17"},"nativeSrc":"3265:24:17","nodeType":"YulExpressionStatement","src":"3265:24:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:17","nodeType":"YulLiteral","src":"3309:4:17","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:17","nodeType":"YulLiteral","src":"3319:2:17","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:17","nodeType":"YulIdentifier","src":"3323:9:17"}],"functionName":{"name":"shl","nativeSrc":"3315:3:17","nodeType":"YulIdentifier","src":"3315:3:17"},"nativeSrc":"3315:18:17","nodeType":"YulFunctionCall","src":"3315:18:17"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:17","nodeType":"YulIdentifier","src":"3302:6:17"},"nativeSrc":"3302:32:17","nodeType":"YulFunctionCall","src":"3302:32:17"},"nativeSrc":"3302:32:17","nodeType":"YulExpressionStatement","src":"3302:32:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:17","nodeType":"YulLiteral","src":"3354:4:17","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:17","nodeType":"YulIdentifier","src":"3360:11:17"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:17","nodeType":"YulIdentifier","src":"3347:6:17"},"nativeSrc":"3347:25:17","nodeType":"YulFunctionCall","src":"3347:25:17"},"nativeSrc":"3347:25:17","nodeType":"YulExpressionStatement","src":"3347:25:17"},{"nativeSrc":"3385:31:17","nodeType":"YulAssignment","src":"3385:31:17","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:17","nodeType":"YulLiteral","src":"3405:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:17","nodeType":"YulLiteral","src":"3411:4:17","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:17","nodeType":"YulIdentifier","src":"3395:9:17"},"nativeSrc":"3395:21:17","nodeType":"YulFunctionCall","src":"3395:21:17"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:17","nodeType":"YulIdentifier","src":"3385:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3343,"isOffset":false,"isSlot":false,"src":"3385:6:17","valueSize":1},{"declaration":3340,"isOffset":false,"isSlot":false,"src":"3360:11:17","valueSize":1},{"declaration":3338,"isOffset":false,"isSlot":false,"src":"3323:9:17","valueSize":1}],"flags":["memory-safe"],"id":3345,"nodeType":"InlineAssembly","src":"3226:200:17"}]},"documentation":{"id":3336,"nodeType":"StructuredDocumentation","src":"2940:129:17","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:17","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"validator","nameLocation":"3132:9:17","nodeType":"VariableDeclaration","scope":3347,"src":"3124:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3337,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:17","nodeType":"VariableDeclaration","scope":3347,"src":"3151:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:17"},"returnParameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"digest","nameLocation":"3208:6:17","nodeType":"VariableDeclaration","scope":3347,"src":"3200:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:17"},"scope":3360,"src":"3074:358:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"3983:265:17","statements":[{"AST":{"nativeSrc":"4018:224:17","nodeType":"YulBlock","src":"4018:224:17","statements":[{"nativeSrc":"4032:22:17","nodeType":"YulVariableDeclaration","src":"4032:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:17","nodeType":"YulLiteral","src":"4049:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:17","nodeType":"YulIdentifier","src":"4043:5:17"},"nativeSrc":"4043:11:17","nodeType":"YulFunctionCall","src":"4043:11:17"},"variables":[{"name":"ptr","nativeSrc":"4036:3:17","nodeType":"YulTypedName","src":"4036:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:17","nodeType":"YulIdentifier","src":"4074:3:17"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:17","nodeType":"YulLiteral","src":"4079:10:17","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:17","nodeType":"YulIdentifier","src":"4067:6:17"},"nativeSrc":"4067:23:17","nodeType":"YulFunctionCall","src":"4067:23:17"},"nativeSrc":"4067:23:17","nodeType":"YulExpressionStatement","src":"4067:23:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:17","nodeType":"YulIdentifier","src":"4114:3:17"},{"kind":"number","nativeSrc":"4119:4:17","nodeType":"YulLiteral","src":"4119:4:17","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:17","nodeType":"YulIdentifier","src":"4110:3:17"},"nativeSrc":"4110:14:17","nodeType":"YulFunctionCall","src":"4110:14:17"},{"name":"domainSeparator","nativeSrc":"4126:15:17","nodeType":"YulIdentifier","src":"4126:15:17"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:17","nodeType":"YulIdentifier","src":"4103:6:17"},"nativeSrc":"4103:39:17","nodeType":"YulFunctionCall","src":"4103:39:17"},"nativeSrc":"4103:39:17","nodeType":"YulExpressionStatement","src":"4103:39:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:17","nodeType":"YulIdentifier","src":"4166:3:17"},{"kind":"number","nativeSrc":"4171:4:17","nodeType":"YulLiteral","src":"4171:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:17","nodeType":"YulIdentifier","src":"4162:3:17"},"nativeSrc":"4162:14:17","nodeType":"YulFunctionCall","src":"4162:14:17"},{"name":"structHash","nativeSrc":"4178:10:17","nodeType":"YulIdentifier","src":"4178:10:17"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:17","nodeType":"YulIdentifier","src":"4155:6:17"},"nativeSrc":"4155:34:17","nodeType":"YulFunctionCall","src":"4155:34:17"},"nativeSrc":"4155:34:17","nodeType":"YulExpressionStatement","src":"4155:34:17"},{"nativeSrc":"4202:30:17","nodeType":"YulAssignment","src":"4202:30:17","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:17","nodeType":"YulIdentifier","src":"4222:3:17"},{"kind":"number","nativeSrc":"4227:4:17","nodeType":"YulLiteral","src":"4227:4:17","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:17","nodeType":"YulIdentifier","src":"4212:9:17"},"nativeSrc":"4212:20:17","nodeType":"YulFunctionCall","src":"4212:20:17"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:17","nodeType":"YulIdentifier","src":"4202:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3355,"isOffset":false,"isSlot":false,"src":"4202:6:17","valueSize":1},{"declaration":3350,"isOffset":false,"isSlot":false,"src":"4126:15:17","valueSize":1},{"declaration":3352,"isOffset":false,"isSlot":false,"src":"4178:10:17","valueSize":1}],"flags":["memory-safe"],"id":3357,"nodeType":"InlineAssembly","src":"3993:249:17"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"3438:431:17","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:17","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:17","nodeType":"VariableDeclaration","scope":3359,"src":"3899:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:17","nodeType":"VariableDeclaration","scope":3359,"src":"3924:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:17"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"digest","nameLocation":"3975:6:17","nodeType":"VariableDeclaration","scope":3359,"src":"3967:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:17"},"scope":3360,"src":"3874:374:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3361,"src":"521:3729:17","usedErrors":[],"usedEvents":[]}],"src":"123:4128:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4981],"Panic":[1524],"SafeCast":[6746]},"id":4982,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3362,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4982,"sourceUnit":1525,"src":"129:35:18","symbolAliases":[{"foreign":{"id":3363,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"137:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4982,"sourceUnit":6747,"src":"165:40:18","symbolAliases":[{"foreign":{"id":3365,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"207:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4981,"linearizedBaseContracts":[4981],"name":"Math","nameLocation":"289:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3372,"members":[{"id":3368,"name":"Floor","nameLocation":"324:5:18","nodeType":"EnumValue","src":"324:5:18"},{"id":3369,"name":"Ceil","nameLocation":"367:4:18","nodeType":"EnumValue","src":"367:4:18"},{"id":3370,"name":"Trunc","nameLocation":"409:5:18","nodeType":"EnumValue","src":"409:5:18"},{"id":3371,"name":"Expand","nameLocation":"439:6:18","nodeType":"EnumValue","src":"439:6:18"}],"name":"Rounding","nameLocation":"305:8:18","nodeType":"EnumDefinition","src":"300:169:18"},{"body":{"id":3385,"nodeType":"Block","src":"731:112:18","statements":[{"AST":{"nativeSrc":"766:71:18","nodeType":"YulBlock","src":"766:71:18","statements":[{"nativeSrc":"780:16:18","nodeType":"YulAssignment","src":"780:16:18","value":{"arguments":[{"name":"a","nativeSrc":"791:1:18","nodeType":"YulIdentifier","src":"791:1:18"},{"name":"b","nativeSrc":"794:1:18","nodeType":"YulIdentifier","src":"794:1:18"}],"functionName":{"name":"add","nativeSrc":"787:3:18","nodeType":"YulIdentifier","src":"787:3:18"},"nativeSrc":"787:9:18","nodeType":"YulFunctionCall","src":"787:9:18"},"variableNames":[{"name":"low","nativeSrc":"780:3:18","nodeType":"YulIdentifier","src":"780:3:18"}]},{"nativeSrc":"809:18:18","nodeType":"YulAssignment","src":"809:18:18","value":{"arguments":[{"name":"low","nativeSrc":"820:3:18","nodeType":"YulIdentifier","src":"820:3:18"},{"name":"a","nativeSrc":"825:1:18","nodeType":"YulIdentifier","src":"825:1:18"}],"functionName":{"name":"lt","nativeSrc":"817:2:18","nodeType":"YulIdentifier","src":"817:2:18"},"nativeSrc":"817:10:18","nodeType":"YulFunctionCall","src":"817:10:18"},"variableNames":[{"name":"high","nativeSrc":"809:4:18","nodeType":"YulIdentifier","src":"809:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3375,"isOffset":false,"isSlot":false,"src":"791:1:18","valueSize":1},{"declaration":3375,"isOffset":false,"isSlot":false,"src":"825:1:18","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"794:1:18","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"809:4:18","valueSize":1},{"declaration":3382,"isOffset":false,"isSlot":false,"src":"780:3:18","valueSize":1},{"declaration":3382,"isOffset":false,"isSlot":false,"src":"820:3:18","valueSize":1}],"flags":["memory-safe"],"id":3384,"nodeType":"InlineAssembly","src":"741:96:18"}]},"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"475:163:18","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3386,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:18","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"a","nameLocation":"667:1:18","nodeType":"VariableDeclaration","scope":3386,"src":"659:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"b","nameLocation":"678:1:18","nodeType":"VariableDeclaration","scope":3386,"src":"670:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:18"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"high","nameLocation":"712:4:18","nodeType":"VariableDeclaration","scope":3386,"src":"704:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"low","nameLocation":"726:3:18","nodeType":"VariableDeclaration","scope":3386,"src":"718:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:18"},"scope":4981,"src":"643:200:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3399,"nodeType":"Block","src":"1115:462:18","statements":[{"AST":{"nativeSrc":"1437:134:18","nodeType":"YulBlock","src":"1437:134:18","statements":[{"nativeSrc":"1451:30:18","nodeType":"YulVariableDeclaration","src":"1451:30:18","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:18","nodeType":"YulIdentifier","src":"1468:1:18"},{"name":"b","nativeSrc":"1471:1:18","nodeType":"YulIdentifier","src":"1471:1:18"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:18","nodeType":"YulLiteral","src":"1478:1:18","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:18","nodeType":"YulIdentifier","src":"1474:3:18"},"nativeSrc":"1474:6:18","nodeType":"YulFunctionCall","src":"1474:6:18"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:18","nodeType":"YulIdentifier","src":"1461:6:18"},"nativeSrc":"1461:20:18","nodeType":"YulFunctionCall","src":"1461:20:18"},"variables":[{"name":"mm","nativeSrc":"1455:2:18","nodeType":"YulTypedName","src":"1455:2:18","type":""}]},{"nativeSrc":"1494:16:18","nodeType":"YulAssignment","src":"1494:16:18","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:18","nodeType":"YulIdentifier","src":"1505:1:18"},{"name":"b","nativeSrc":"1508:1:18","nodeType":"YulIdentifier","src":"1508:1:18"}],"functionName":{"name":"mul","nativeSrc":"1501:3:18","nodeType":"YulIdentifier","src":"1501:3:18"},"nativeSrc":"1501:9:18","nodeType":"YulFunctionCall","src":"1501:9:18"},"variableNames":[{"name":"low","nativeSrc":"1494:3:18","nodeType":"YulIdentifier","src":"1494:3:18"}]},{"nativeSrc":"1523:38:18","nodeType":"YulAssignment","src":"1523:38:18","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:18","nodeType":"YulIdentifier","src":"1539:2:18"},{"name":"low","nativeSrc":"1543:3:18","nodeType":"YulIdentifier","src":"1543:3:18"}],"functionName":{"name":"sub","nativeSrc":"1535:3:18","nodeType":"YulIdentifier","src":"1535:3:18"},"nativeSrc":"1535:12:18","nodeType":"YulFunctionCall","src":"1535:12:18"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:18","nodeType":"YulIdentifier","src":"1552:2:18"},{"name":"low","nativeSrc":"1556:3:18","nodeType":"YulIdentifier","src":"1556:3:18"}],"functionName":{"name":"lt","nativeSrc":"1549:2:18","nodeType":"YulIdentifier","src":"1549:2:18"},"nativeSrc":"1549:11:18","nodeType":"YulFunctionCall","src":"1549:11:18"}],"functionName":{"name":"sub","nativeSrc":"1531:3:18","nodeType":"YulIdentifier","src":"1531:3:18"},"nativeSrc":"1531:30:18","nodeType":"YulFunctionCall","src":"1531:30:18"},"variableNames":[{"name":"high","nativeSrc":"1523:4:18","nodeType":"YulIdentifier","src":"1523:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3389,"isOffset":false,"isSlot":false,"src":"1468:1:18","valueSize":1},{"declaration":3389,"isOffset":false,"isSlot":false,"src":"1505:1:18","valueSize":1},{"declaration":3391,"isOffset":false,"isSlot":false,"src":"1471:1:18","valueSize":1},{"declaration":3391,"isOffset":false,"isSlot":false,"src":"1508:1:18","valueSize":1},{"declaration":3394,"isOffset":false,"isSlot":false,"src":"1523:4:18","valueSize":1},{"declaration":3396,"isOffset":false,"isSlot":false,"src":"1494:3:18","valueSize":1},{"declaration":3396,"isOffset":false,"isSlot":false,"src":"1543:3:18","valueSize":1},{"declaration":3396,"isOffset":false,"isSlot":false,"src":"1556:3:18","valueSize":1}],"flags":["memory-safe"],"id":3398,"nodeType":"InlineAssembly","src":"1412:159:18"}]},"documentation":{"id":3387,"nodeType":"StructuredDocumentation","src":"849:173:18","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3400,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:18","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"a","nameLocation":"1051:1:18","nodeType":"VariableDeclaration","scope":3400,"src":"1043:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"b","nameLocation":"1062:1:18","nodeType":"VariableDeclaration","scope":3400,"src":"1054:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:18"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"high","nameLocation":"1096:4:18","nodeType":"VariableDeclaration","scope":3400,"src":"1088:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3396,"mutability":"mutable","name":"low","nameLocation":"1110:3:18","nodeType":"VariableDeclaration","scope":3400,"src":"1102:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:18"},"scope":4981,"src":"1027:550:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3434,"nodeType":"Block","src":"1784:149:18","statements":[{"id":3433,"nodeType":"UncheckedBlock","src":"1794:133:18","statements":[{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"c","nameLocation":"1826:1:18","nodeType":"VariableDeclaration","scope":3433,"src":"1818:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3417,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3414,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"1830:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"1834:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:18"},{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3418,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"1849:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3419,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"1859:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"1864:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"ExpressionStatement","src":"1849:16:18"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"1879:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"1888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3428,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"1908:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3426,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"1892:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"1892:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3432,"nodeType":"ExpressionStatement","src":"1879:37:18"}]}]},"documentation":{"id":3401,"nodeType":"StructuredDocumentation","src":"1583:105:18","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3435,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:18","nodeType":"FunctionDefinition","parameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3403,"mutability":"mutable","name":"a","nameLocation":"1717:1:18","nodeType":"VariableDeclaration","scope":3435,"src":"1709:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"b","nameLocation":"1728:1:18","nodeType":"VariableDeclaration","scope":3435,"src":"1720:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:18"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"success","nameLocation":"1759:7:18","nodeType":"VariableDeclaration","scope":3435,"src":"1754:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3407,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"result","nameLocation":"1776:6:18","nodeType":"VariableDeclaration","scope":3435,"src":"1768:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:18"},"scope":4981,"src":"1693:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3469,"nodeType":"Block","src":"2143:149:18","statements":[{"id":3468,"nodeType":"UncheckedBlock","src":"2153:133:18","statements":[{"assignments":[3448],"declarations":[{"constant":false,"id":3448,"mutability":"mutable","name":"c","nameLocation":"2185:1:18","nodeType":"VariableDeclaration","scope":3468,"src":"2177:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3452,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"2189:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"2193:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:18"},{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3453,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"2208:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"2218:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"2223:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3458,"nodeType":"ExpressionStatement","src":"2208:16:18"},{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"2238:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"2247:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3463,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"2267:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3461,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"2251:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"2251:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3467,"nodeType":"ExpressionStatement","src":"2238:37:18"}]}]},"documentation":{"id":3436,"nodeType":"StructuredDocumentation","src":"1939:108:18","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3470,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:18","nodeType":"FunctionDefinition","parameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"a","nameLocation":"2076:1:18","nodeType":"VariableDeclaration","scope":3470,"src":"2068:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3440,"mutability":"mutable","name":"b","nameLocation":"2087:1:18","nodeType":"VariableDeclaration","scope":3470,"src":"2079:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:18"},"returnParameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"success","nameLocation":"2118:7:18","nodeType":"VariableDeclaration","scope":3470,"src":"2113:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3442,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"result","nameLocation":"2135:6:18","nodeType":"VariableDeclaration","scope":3470,"src":"2127:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:18"},"scope":4981,"src":"2052:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"2505:391:18","statements":[{"id":3498,"nodeType":"UncheckedBlock","src":"2515:375:18","statements":[{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"c","nameLocation":"2547:1:18","nodeType":"VariableDeclaration","scope":3498,"src":"2539:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3487,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"2555:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:18"},{"AST":{"nativeSrc":"2595:188:18","nodeType":"YulBlock","src":"2595:188:18","statements":[{"nativeSrc":"2727:42:18","nodeType":"YulAssignment","src":"2727:42:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:18","nodeType":"YulIdentifier","src":"2748:1:18"},{"name":"a","nativeSrc":"2751:1:18","nodeType":"YulIdentifier","src":"2751:1:18"}],"functionName":{"name":"div","nativeSrc":"2744:3:18","nodeType":"YulIdentifier","src":"2744:3:18"},"nativeSrc":"2744:9:18","nodeType":"YulFunctionCall","src":"2744:9:18"},{"name":"b","nativeSrc":"2755:1:18","nodeType":"YulIdentifier","src":"2755:1:18"}],"functionName":{"name":"eq","nativeSrc":"2741:2:18","nodeType":"YulIdentifier","src":"2741:2:18"},"nativeSrc":"2741:16:18","nodeType":"YulFunctionCall","src":"2741:16:18"},{"arguments":[{"name":"a","nativeSrc":"2766:1:18","nodeType":"YulIdentifier","src":"2766:1:18"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:18","nodeType":"YulIdentifier","src":"2759:6:18"},"nativeSrc":"2759:9:18","nodeType":"YulFunctionCall","src":"2759:9:18"}],"functionName":{"name":"or","nativeSrc":"2738:2:18","nodeType":"YulIdentifier","src":"2738:2:18"},"nativeSrc":"2738:31:18","nodeType":"YulFunctionCall","src":"2738:31:18"},"variableNames":[{"name":"success","nativeSrc":"2727:7:18","nodeType":"YulIdentifier","src":"2727:7:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3473,"isOffset":false,"isSlot":false,"src":"2751:1:18","valueSize":1},{"declaration":3473,"isOffset":false,"isSlot":false,"src":"2766:1:18","valueSize":1},{"declaration":3475,"isOffset":false,"isSlot":false,"src":"2755:1:18","valueSize":1},{"declaration":3483,"isOffset":false,"isSlot":false,"src":"2748:1:18","valueSize":1},{"declaration":3478,"isOffset":false,"isSlot":false,"src":"2727:7:18","valueSize":1}],"flags":["memory-safe"],"id":3488,"nodeType":"InlineAssembly","src":"2570:213:18"},{"expression":{"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"2842:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3490,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"2851:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3493,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"2871:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3491,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"2855:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"2855:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3497,"nodeType":"ExpressionStatement","src":"2842:37:18"}]}]},"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"2298:111:18","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:18","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"a","nameLocation":"2438:1:18","nodeType":"VariableDeclaration","scope":3500,"src":"2430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"b","nameLocation":"2449:1:18","nodeType":"VariableDeclaration","scope":3500,"src":"2441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:18"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"success","nameLocation":"2480:7:18","nodeType":"VariableDeclaration","scope":3500,"src":"2475:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3477,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"result","nameLocation":"2497:6:18","nodeType":"VariableDeclaration","scope":3500,"src":"2489:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:18"},"scope":4981,"src":"2414:482:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3520,"nodeType":"Block","src":"3111:231:18","statements":[{"id":3519,"nodeType":"UncheckedBlock","src":"3121:215:18","statements":[{"expression":{"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3512,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"3145:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"3155:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3517,"nodeType":"ExpressionStatement","src":"3145:15:18"},{"AST":{"nativeSrc":"3199:127:18","nodeType":"YulBlock","src":"3199:127:18","statements":[{"nativeSrc":"3293:19:18","nodeType":"YulAssignment","src":"3293:19:18","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:18","nodeType":"YulIdentifier","src":"3307:1:18"},{"name":"b","nativeSrc":"3310:1:18","nodeType":"YulIdentifier","src":"3310:1:18"}],"functionName":{"name":"div","nativeSrc":"3303:3:18","nodeType":"YulIdentifier","src":"3303:3:18"},"nativeSrc":"3303:9:18","nodeType":"YulFunctionCall","src":"3303:9:18"},"variableNames":[{"name":"result","nativeSrc":"3293:6:18","nodeType":"YulIdentifier","src":"3293:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3503,"isOffset":false,"isSlot":false,"src":"3307:1:18","valueSize":1},{"declaration":3505,"isOffset":false,"isSlot":false,"src":"3310:1:18","valueSize":1},{"declaration":3510,"isOffset":false,"isSlot":false,"src":"3293:6:18","valueSize":1}],"flags":["memory-safe"],"id":3518,"nodeType":"InlineAssembly","src":"3174:152:18"}]}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"2902:113:18","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3521,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:18","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"a","nameLocation":"3044:1:18","nodeType":"VariableDeclaration","scope":3521,"src":"3036:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"b","nameLocation":"3055:1:18","nodeType":"VariableDeclaration","scope":3521,"src":"3047:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:18"},"returnParameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"success","nameLocation":"3086:7:18","nodeType":"VariableDeclaration","scope":3521,"src":"3081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3507,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"result","nameLocation":"3103:6:18","nodeType":"VariableDeclaration","scope":3521,"src":"3095:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:18"},"scope":4981,"src":"3020:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3541,"nodeType":"Block","src":"3567:231:18","statements":[{"id":3540,"nodeType":"UncheckedBlock","src":"3577:215:18","statements":[{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3533,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"3601:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"3611:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3538,"nodeType":"ExpressionStatement","src":"3601:15:18"},{"AST":{"nativeSrc":"3655:127:18","nodeType":"YulBlock","src":"3655:127:18","statements":[{"nativeSrc":"3749:19:18","nodeType":"YulAssignment","src":"3749:19:18","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:18","nodeType":"YulIdentifier","src":"3763:1:18"},{"name":"b","nativeSrc":"3766:1:18","nodeType":"YulIdentifier","src":"3766:1:18"}],"functionName":{"name":"mod","nativeSrc":"3759:3:18","nodeType":"YulIdentifier","src":"3759:3:18"},"nativeSrc":"3759:9:18","nodeType":"YulFunctionCall","src":"3759:9:18"},"variableNames":[{"name":"result","nativeSrc":"3749:6:18","nodeType":"YulIdentifier","src":"3749:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3524,"isOffset":false,"isSlot":false,"src":"3763:1:18","valueSize":1},{"declaration":3526,"isOffset":false,"isSlot":false,"src":"3766:1:18","valueSize":1},{"declaration":3531,"isOffset":false,"isSlot":false,"src":"3749:6:18","valueSize":1}],"flags":["memory-safe"],"id":3539,"nodeType":"InlineAssembly","src":"3630:152:18"}]}]},"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"3348:123:18","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:18","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"a","nameLocation":"3500:1:18","nodeType":"VariableDeclaration","scope":3542,"src":"3492:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"b","nameLocation":"3511:1:18","nodeType":"VariableDeclaration","scope":3542,"src":"3503:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:18"},"returnParameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"success","nameLocation":"3542:7:18","nodeType":"VariableDeclaration","scope":3542,"src":"3537:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3528,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"result","nameLocation":"3559:6:18","nodeType":"VariableDeclaration","scope":3542,"src":"3551:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:18"},"scope":4981,"src":"3476:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3571,"nodeType":"Block","src":"3989:122:18","statements":[{"assignments":[3553,3555],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"success","nameLocation":"4005:7:18","nodeType":"VariableDeclaration","scope":3571,"src":"4000:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"result","nameLocation":"4022:6:18","nodeType":"VariableDeclaration","scope":3571,"src":"4014:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3560,"initialValue":{"arguments":[{"id":3557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"4039:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"4042:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3556,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"4032:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:18"},{"expression":{"arguments":[{"id":3562,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"4069:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"4078:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3564,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:18","memberName":"max","nodeType":"MemberAccess","src":"4086:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3561,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"4061:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3551,"id":3570,"nodeType":"Return","src":"4054:50:18"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"3804:103:18","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:18","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"a","nameLocation":"3943:1:18","nodeType":"VariableDeclaration","scope":3572,"src":"3935:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"b","nameLocation":"3954:1:18","nodeType":"VariableDeclaration","scope":3572,"src":"3946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:18"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3572,"src":"3980:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:18"},"scope":4981,"src":"3912:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"4294:73:18","statements":[{"assignments":[null,3583],"declarations":[null,{"constant":false,"id":3583,"mutability":"mutable","name":"result","nameLocation":"4315:6:18","nodeType":"VariableDeclaration","scope":3591,"src":"4307:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3588,"initialValue":{"arguments":[{"id":3585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"4332:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3586,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"4335:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3584,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"4325:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:18"},{"expression":{"id":3589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"4354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3581,"id":3590,"nodeType":"Return","src":"4347:13:18"}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"4117:95:18","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:18","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"a","nameLocation":"4248:1:18","nodeType":"VariableDeclaration","scope":3592,"src":"4240:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"b","nameLocation":"4259:1:18","nodeType":"VariableDeclaration","scope":3592,"src":"4251:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:18"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"4285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:18"},"scope":4981,"src":"4217:150:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3621,"nodeType":"Block","src":"4564:122:18","statements":[{"assignments":[3603,3605],"declarations":[{"constant":false,"id":3603,"mutability":"mutable","name":"success","nameLocation":"4580:7:18","nodeType":"VariableDeclaration","scope":3621,"src":"4575:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3602,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"result","nameLocation":"4597:6:18","nodeType":"VariableDeclaration","scope":3621,"src":"4589:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3610,"initialValue":{"arguments":[{"id":3607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"4614:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3608,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"4617:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3606,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"4607:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:18"},{"expression":{"arguments":[{"id":3612,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"4644:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"4653:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3614,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:18","memberName":"max","nodeType":"MemberAccess","src":"4661:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3611,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"4636:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3601,"id":3620,"nodeType":"Return","src":"4629:50:18"}]},"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"4373:109:18","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3622,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:18","nodeType":"FunctionDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"a","nameLocation":"4518:1:18","nodeType":"VariableDeclaration","scope":3622,"src":"4510:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"b","nameLocation":"4529:1:18","nodeType":"VariableDeclaration","scope":3622,"src":"4521:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:18"},"returnParameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"4555:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:18"},"scope":4981,"src":"4487:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"5158:207:18","statements":[{"id":3647,"nodeType":"UncheckedBlock","src":"5168:191:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3634,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"5306:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"5312:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3636,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"5316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3641,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"5337:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3639,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"5321:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"5321:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3633,"id":3646,"nodeType":"Return","src":"5299:49:18"}]}]},"documentation":{"id":3623,"nodeType":"StructuredDocumentation","src":"4692:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:18","nodeType":"FunctionDefinition","parameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"condition","nameLocation":"5093:9:18","nodeType":"VariableDeclaration","scope":3649,"src":"5088:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3624,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"a","nameLocation":"5112:1:18","nodeType":"VariableDeclaration","scope":3649,"src":"5104:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"b","nameLocation":"5123:1:18","nodeType":"VariableDeclaration","scope":3649,"src":"5115:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:18"},"returnParameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3649,"src":"5149:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:18"},"scope":4981,"src":"5071:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3667,"nodeType":"Block","src":"5502:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"5527:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5531:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"5534:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3664,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5537:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3659,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"5519:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3658,"id":3666,"nodeType":"Return","src":"5512:27:18"}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"5371:59:18","text":" @dev Returns the largest of two numbers."},"id":3668,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:18","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"a","nameLocation":"5456:1:18","nodeType":"VariableDeclaration","scope":3668,"src":"5448:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"b","nameLocation":"5467:1:18","nodeType":"VariableDeclaration","scope":3668,"src":"5459:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:18"},"returnParameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3668,"src":"5493:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:18"},"scope":4981,"src":"5435:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3686,"nodeType":"Block","src":"5684:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"5709:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3680,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"5713:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"5716:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"5719:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3678,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"5701:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3677,"id":3685,"nodeType":"Return","src":"5694:27:18"}]},"documentation":{"id":3669,"nodeType":"StructuredDocumentation","src":"5552:60:18","text":" @dev Returns the smallest of two numbers."},"id":3687,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:18","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"a","nameLocation":"5638:1:18","nodeType":"VariableDeclaration","scope":3687,"src":"5630:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"b","nameLocation":"5649:1:18","nodeType":"VariableDeclaration","scope":3687,"src":"5641:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:18"},"returnParameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3687,"src":"5675:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:18"},"scope":4981,"src":"5617:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3709,"nodeType":"Block","src":"5912:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5967:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"5971:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"5981:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3696,"id":3708,"nodeType":"Return","src":"5959:28:18"}]},"documentation":{"id":3688,"nodeType":"StructuredDocumentation","src":"5734:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3710,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:18","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"a","nameLocation":"5866:1:18","nodeType":"VariableDeclaration","scope":3710,"src":"5858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"b","nameLocation":"5877:1:18","nodeType":"VariableDeclaration","scope":3710,"src":"5869:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:18"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3710,"src":"5903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:18"},"scope":4981,"src":"5841:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3750,"nodeType":"Block","src":"6286:633:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"6300:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3731,"nodeType":"IfStatement","src":"6296:150:18","trueBody":{"id":3730,"nodeType":"Block","src":"6308:138:18","statements":[{"expression":{"arguments":[{"expression":{"id":3726,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"6412:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1491,"src":"6412:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3723,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"6400:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1523,"src":"6400:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3729,"nodeType":"ExpressionStatement","src":"6400:35:18"}]}},{"id":3749,"nodeType":"UncheckedBlock","src":"6829:84:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"6876:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"6860:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"6860:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"6887:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3742,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"6896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3719,"id":3748,"nodeType":"Return","src":"6853:49:18"}]}]},"documentation":{"id":3711,"nodeType":"StructuredDocumentation","src":"6000:210:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:18","nodeType":"FunctionDefinition","parameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"a","nameLocation":"6240:1:18","nodeType":"VariableDeclaration","scope":3751,"src":"6232:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"b","nameLocation":"6251:1:18","nodeType":"VariableDeclaration","scope":3751,"src":"6243:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:18"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"6277:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:18"},"scope":4981,"src":"6215:704:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3886,"nodeType":"Block","src":"7340:3585:18","statements":[{"id":3885,"nodeType":"UncheckedBlock","src":"7350:3569:18","statements":[{"assignments":[3764,3766],"declarations":[{"constant":false,"id":3764,"mutability":"mutable","name":"high","nameLocation":"7383:4:18","nodeType":"VariableDeclaration","scope":3885,"src":"7375:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"low","nameLocation":"7397:3:18","nodeType":"VariableDeclaration","scope":3885,"src":"7389:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3771,"initialValue":{"arguments":[{"id":3768,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"7411:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3769,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"7414:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3767,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"7404:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"7498:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"IfStatement","src":"7494:365:18","trueBody":{"id":3779,"nodeType":"Block","src":"7509:350:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"7827:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3776,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"7833:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3762,"id":3778,"nodeType":"Return","src":"7820:24:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"7969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3782,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"7984:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3799,"nodeType":"IfStatement","src":"7965:142:18","trueBody":{"id":3798,"nodeType":"Block","src":"7990:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"8028:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3791,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"8046:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1491,"src":"8046:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3793,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"8070:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"8070:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3787,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"8020:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3784,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"8008:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1523,"src":"8008:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3797,"nodeType":"ExpressionStatement","src":"8008:84:18"}]}},{"assignments":[3801],"declarations":[{"constant":false,"id":3801,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:18","nodeType":"VariableDeclaration","scope":3885,"src":"8359:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3802,"nodeType":"VariableDeclarationStatement","src":"8359:17:18"},{"AST":{"nativeSrc":"8415:283:18","nodeType":"YulBlock","src":"8415:283:18","statements":[{"nativeSrc":"8484:38:18","nodeType":"YulAssignment","src":"8484:38:18","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:18","nodeType":"YulIdentifier","src":"8504:1:18"},{"name":"y","nativeSrc":"8507:1:18","nodeType":"YulIdentifier","src":"8507:1:18"},{"name":"denominator","nativeSrc":"8510:11:18","nodeType":"YulIdentifier","src":"8510:11:18"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:18","nodeType":"YulIdentifier","src":"8497:6:18"},"nativeSrc":"8497:25:18","nodeType":"YulFunctionCall","src":"8497:25:18"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:18","nodeType":"YulIdentifier","src":"8484:9:18"}]},{"nativeSrc":"8604:37:18","nodeType":"YulAssignment","src":"8604:37:18","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:18","nodeType":"YulIdentifier","src":"8616:4:18"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:18","nodeType":"YulIdentifier","src":"8625:9:18"},{"name":"low","nativeSrc":"8636:3:18","nodeType":"YulIdentifier","src":"8636:3:18"}],"functionName":{"name":"gt","nativeSrc":"8622:2:18","nodeType":"YulIdentifier","src":"8622:2:18"},"nativeSrc":"8622:18:18","nodeType":"YulFunctionCall","src":"8622:18:18"}],"functionName":{"name":"sub","nativeSrc":"8612:3:18","nodeType":"YulIdentifier","src":"8612:3:18"},"nativeSrc":"8612:29:18","nodeType":"YulFunctionCall","src":"8612:29:18"},"variableNames":[{"name":"high","nativeSrc":"8604:4:18","nodeType":"YulIdentifier","src":"8604:4:18"}]},{"nativeSrc":"8658:26:18","nodeType":"YulAssignment","src":"8658:26:18","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:18","nodeType":"YulIdentifier","src":"8669:3:18"},{"name":"remainder","nativeSrc":"8674:9:18","nodeType":"YulIdentifier","src":"8674:9:18"}],"functionName":{"name":"sub","nativeSrc":"8665:3:18","nodeType":"YulIdentifier","src":"8665:3:18"},"nativeSrc":"8665:19:18","nodeType":"YulFunctionCall","src":"8665:19:18"},"variableNames":[{"name":"low","nativeSrc":"8658:3:18","nodeType":"YulIdentifier","src":"8658:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3758,"isOffset":false,"isSlot":false,"src":"8510:11:18","valueSize":1},{"declaration":3764,"isOffset":false,"isSlot":false,"src":"8604:4:18","valueSize":1},{"declaration":3764,"isOffset":false,"isSlot":false,"src":"8616:4:18","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"8636:3:18","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"8658:3:18","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"8669:3:18","valueSize":1},{"declaration":3801,"isOffset":false,"isSlot":false,"src":"8484:9:18","valueSize":1},{"declaration":3801,"isOffset":false,"isSlot":false,"src":"8625:9:18","valueSize":1},{"declaration":3801,"isOffset":false,"isSlot":false,"src":"8674:9:18","valueSize":1},{"declaration":3754,"isOffset":false,"isSlot":false,"src":"8504:1:18","valueSize":1},{"declaration":3756,"isOffset":false,"isSlot":false,"src":"8507:1:18","valueSize":1}],"flags":["memory-safe"],"id":3803,"nodeType":"InlineAssembly","src":"8390:308:18"},{"assignments":[3805],"declarations":[{"constant":false,"id":3805,"mutability":"mutable","name":"twos","nameLocation":"8910:4:18","nodeType":"VariableDeclaration","scope":3885,"src":"8902:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3812,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"8917:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3808,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"8936:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:18"},{"AST":{"nativeSrc":"8987:359:18","nodeType":"YulBlock","src":"8987:359:18","statements":[{"nativeSrc":"9052:37:18","nodeType":"YulAssignment","src":"9052:37:18","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:18","nodeType":"YulIdentifier","src":"9071:11:18"},{"name":"twos","nativeSrc":"9084:4:18","nodeType":"YulIdentifier","src":"9084:4:18"}],"functionName":{"name":"div","nativeSrc":"9067:3:18","nodeType":"YulIdentifier","src":"9067:3:18"},"nativeSrc":"9067:22:18","nodeType":"YulFunctionCall","src":"9067:22:18"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:18","nodeType":"YulIdentifier","src":"9052:11:18"}]},{"nativeSrc":"9153:21:18","nodeType":"YulAssignment","src":"9153:21:18","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:18","nodeType":"YulIdentifier","src":"9164:3:18"},{"name":"twos","nativeSrc":"9169:4:18","nodeType":"YulIdentifier","src":"9169:4:18"}],"functionName":{"name":"div","nativeSrc":"9160:3:18","nodeType":"YulIdentifier","src":"9160:3:18"},"nativeSrc":"9160:14:18","nodeType":"YulFunctionCall","src":"9160:14:18"},"variableNames":[{"name":"low","nativeSrc":"9153:3:18","nodeType":"YulIdentifier","src":"9153:3:18"}]},{"nativeSrc":"9293:39:18","nodeType":"YulAssignment","src":"9293:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:18","nodeType":"YulLiteral","src":"9313:1:18","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:18","nodeType":"YulIdentifier","src":"9316:4:18"}],"functionName":{"name":"sub","nativeSrc":"9309:3:18","nodeType":"YulIdentifier","src":"9309:3:18"},"nativeSrc":"9309:12:18","nodeType":"YulFunctionCall","src":"9309:12:18"},{"name":"twos","nativeSrc":"9323:4:18","nodeType":"YulIdentifier","src":"9323:4:18"}],"functionName":{"name":"div","nativeSrc":"9305:3:18","nodeType":"YulIdentifier","src":"9305:3:18"},"nativeSrc":"9305:23:18","nodeType":"YulFunctionCall","src":"9305:23:18"},{"kind":"number","nativeSrc":"9330:1:18","nodeType":"YulLiteral","src":"9330:1:18","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:18","nodeType":"YulIdentifier","src":"9301:3:18"},"nativeSrc":"9301:31:18","nodeType":"YulFunctionCall","src":"9301:31:18"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:18","nodeType":"YulIdentifier","src":"9293:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3758,"isOffset":false,"isSlot":false,"src":"9052:11:18","valueSize":1},{"declaration":3758,"isOffset":false,"isSlot":false,"src":"9071:11:18","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"9153:3:18","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"9164:3:18","valueSize":1},{"declaration":3805,"isOffset":false,"isSlot":false,"src":"9084:4:18","valueSize":1},{"declaration":3805,"isOffset":false,"isSlot":false,"src":"9169:4:18","valueSize":1},{"declaration":3805,"isOffset":false,"isSlot":false,"src":"9293:4:18","valueSize":1},{"declaration":3805,"isOffset":false,"isSlot":false,"src":"9316:4:18","valueSize":1},{"declaration":3805,"isOffset":false,"isSlot":false,"src":"9323:4:18","valueSize":1}],"flags":["memory-safe"],"id":3813,"nodeType":"InlineAssembly","src":"8962:384:18"},{"expression":{"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3814,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"9409:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"9416:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3816,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"9423:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3819,"nodeType":"ExpressionStatement","src":"9409:18:18"},{"assignments":[3821],"declarations":[{"constant":false,"id":3821,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:18","nodeType":"VariableDeclaration","scope":3885,"src":"9762:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3828,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3823,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9785:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:18"},{"expression":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10018:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3831,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10033:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3832,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3836,"nodeType":"ExpressionStatement","src":"10018:36:18"},{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3837,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10103:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3840,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10117:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"nodeType":"ExpressionStatement","src":"10088:36:18"},{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3845,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10175:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3848,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10189:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ExpressionStatement","src":"10160:36:18"},{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3853,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10231:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10246:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3856,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ExpressionStatement","src":"10231:36:18"},{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3861,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10304:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10319:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3864,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10333:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"nodeType":"ExpressionStatement","src":"10304:36:18"},{"expression":{"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3869,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10393:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3872,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10407:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3876,"nodeType":"ExpressionStatement","src":"10378:36:18"},{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"10859:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"10868:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3879,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"10874:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3882,"nodeType":"ExpressionStatement","src":"10859:22:18"},{"expression":{"id":3883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"10902:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3762,"id":3884,"nodeType":"Return","src":"10895:13:18"}]}]},"documentation":{"id":3752,"nodeType":"StructuredDocumentation","src":"6925:312:18","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3887,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:18","nodeType":"FunctionDefinition","parameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"x","nameLocation":"7266:1:18","nodeType":"VariableDeclaration","scope":3887,"src":"7258:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"y","nameLocation":"7277:1:18","nodeType":"VariableDeclaration","scope":3887,"src":"7269:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:18","nodeType":"VariableDeclaration","scope":3887,"src":"7280:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:18"},"returnParameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"result","nameLocation":"7332:6:18","nodeType":"VariableDeclaration","scope":3887,"src":"7324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:18"},"scope":4981,"src":"7242:3683:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3923,"nodeType":"Block","src":"11164:128:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3903,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"11188:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3904,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"11191:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3905,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"11194:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3902,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3887,3924],"referencedDeclaration":3887,"src":"11181:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3910,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11242:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}],"id":3909,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"11225:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3372_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3913,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"11262:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3914,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"11265:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3915,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"11268:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3912,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3907,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"11209:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"11209:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3901,"id":3922,"nodeType":"Return","src":"11174:111:18"}]},"documentation":{"id":3888,"nodeType":"StructuredDocumentation","src":"10931:118:18","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3924,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:18","nodeType":"FunctionDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"x","nameLocation":"11078:1:18","nodeType":"VariableDeclaration","scope":3924,"src":"11070:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"y","nameLocation":"11089:1:18","nodeType":"VariableDeclaration","scope":3924,"src":"11081:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3894,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:18","nodeType":"VariableDeclaration","scope":3924,"src":"11092:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:18","nodeType":"VariableDeclaration","scope":3924,"src":"11113:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"},"typeName":{"id":3896,"nodeType":"UserDefinedTypeName","pathNode":{"id":3895,"name":"Rounding","nameLocations":["11113:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"11113:8:18"},"referencedDeclaration":3372,"src":"11113:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:18"},"returnParameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3924,"src":"11155:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:18"},"scope":4981,"src":"11054:238:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3973,"nodeType":"Block","src":"11500:245:18","statements":[{"id":3972,"nodeType":"UncheckedBlock","src":"11510:229:18","statements":[{"assignments":[3937,3939],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"high","nameLocation":"11543:4:18","nodeType":"VariableDeclaration","scope":3972,"src":"11535:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"low","nameLocation":"11557:3:18","nodeType":"VariableDeclaration","scope":3972,"src":"11549:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3944,"initialValue":{"arguments":[{"id":3941,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"11571:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3942,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"11574:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"11564:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"11594:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3947,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"11607:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3958,"nodeType":"IfStatement","src":"11590:86:18","trueBody":{"id":3957,"nodeType":"Block","src":"11610:66:18","statements":[{"expression":{"arguments":[{"expression":{"id":3953,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"11640:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"11640:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3950,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"11628:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1523,"src":"11628:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3956,"nodeType":"ExpressionStatement","src":"11628:33:18"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3959,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"11697:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3961,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"11712:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3966,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"11719:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3967,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"11726:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3935,"id":3971,"nodeType":"Return","src":"11689:39:18"}]}]},"documentation":{"id":3925,"nodeType":"StructuredDocumentation","src":"11298:111:18","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3974,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:18","nodeType":"FunctionDefinition","parameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"x","nameLocation":"11438:1:18","nodeType":"VariableDeclaration","scope":3974,"src":"11430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"y","nameLocation":"11449:1:18","nodeType":"VariableDeclaration","scope":3974,"src":"11441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"n","nameLocation":"11458:1:18","nodeType":"VariableDeclaration","scope":3974,"src":"11452:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3930,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:18"},"returnParameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"result","nameLocation":"11492:6:18","nodeType":"VariableDeclaration","scope":3974,"src":"11484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:18"},"scope":4981,"src":"11414:331:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4012,"nodeType":"Block","src":"11963:113:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"11987:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3991,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"11990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3992,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"11993:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3989,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3974,4013],"referencedDeclaration":3974,"src":"11980:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3997,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"12031:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}],"id":3996,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"12014:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3372_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4000,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"12051:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4001,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"12054:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4003,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"12062:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3999,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3994,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"11998:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"11998:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3988,"id":4011,"nodeType":"Return","src":"11973:96:18"}]},"documentation":{"id":3975,"nodeType":"StructuredDocumentation","src":"11751:109:18","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4013,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:18","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"x","nameLocation":"11889:1:18","nodeType":"VariableDeclaration","scope":4013,"src":"11881:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"y","nameLocation":"11900:1:18","nodeType":"VariableDeclaration","scope":4013,"src":"11892:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"n","nameLocation":"11909:1:18","nodeType":"VariableDeclaration","scope":4013,"src":"11903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3980,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:18","nodeType":"VariableDeclaration","scope":4013,"src":"11912:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"},"typeName":{"id":3983,"nodeType":"UserDefinedTypeName","pathNode":{"id":3982,"name":"Rounding","nameLocations":["11912:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"11912:8:18"},"referencedDeclaration":3372,"src":"11912:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:18"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4013,"src":"11954:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:18"},"scope":4981,"src":"11865:211:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4109,"nodeType":"Block","src":"12710:1849:18","statements":[{"id":4108,"nodeType":"UncheckedBlock","src":"12720:1833:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"12748:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4028,"nodeType":"IfStatement","src":"12744:20:18","trueBody":{"expression":{"hexValue":"30","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4022,"id":4027,"nodeType":"Return","src":"12756:8:18"}},{"assignments":[4030],"declarations":[{"constant":false,"id":4030,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:18","nodeType":"VariableDeclaration","scope":4108,"src":"13235:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4034,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4031,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"13255:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4032,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"13259:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:18"},{"assignments":[4036],"declarations":[{"constant":false,"id":4036,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:18","nodeType":"VariableDeclaration","scope":4108,"src":"13274:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4038,"initialValue":{"id":4037,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"13288:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:18"},{"assignments":[4040],"declarations":[{"constant":false,"id":4040,"mutability":"mutable","name":"x","nameLocation":"13432:1:18","nodeType":"VariableDeclaration","scope":4108,"src":"13425:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4039,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4042,"initialValue":{"hexValue":"30","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:18"},{"assignments":[4044],"declarations":[{"constant":false,"id":4044,"mutability":"mutable","name":"y","nameLocation":"13458:1:18","nodeType":"VariableDeclaration","scope":4108,"src":"13451:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4043,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4046,"initialValue":{"hexValue":"31","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:18"},{"body":{"id":4083,"nodeType":"Block","src":"13501:882:18","statements":[{"assignments":[4051],"declarations":[{"constant":false,"id":4051,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:18","nodeType":"VariableDeclaration","scope":4083,"src":"13519:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4055,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4052,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"13538:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4053,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"13544:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:18"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4056,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"13573:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4057,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"13578:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4058,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4059,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"13678:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"13923:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"13929:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4062,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"13941:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4067,"nodeType":"ExpressionStatement","src":"13572:395:18"},{"expression":{"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4068,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"13987:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4069,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"13990:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4070,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4071,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"14072:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4072,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"14326:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"14330:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4076,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"14341:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4074,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:18","typeDescriptions":{}}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4082,"nodeType":"ExpressionStatement","src":"13986:382:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4047,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"13485:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"WhileStatement","src":"13478:905:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"14401:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4090,"nodeType":"IfStatement","src":"14397:22:18","trueBody":{"expression":{"hexValue":"30","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4022,"id":4089,"nodeType":"Return","src":"14411:8:18"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4092,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"14470:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"14477:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:18","subExpression":{"id":4098,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"14490:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:18","typeDescriptions":{}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4104,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"14502:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:18","typeDescriptions":{}}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4091,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"14462:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4022,"id":4107,"nodeType":"Return","src":"14455:50:18"}]}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"12082:553:18","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:18","nodeType":"FunctionDefinition","parameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"a","nameLocation":"12664:1:18","nodeType":"VariableDeclaration","scope":4110,"src":"12656:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"n","nameLocation":"12675:1:18","nodeType":"VariableDeclaration","scope":4110,"src":"12667:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:18"},"returnParameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"12701:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:18"},"scope":4981,"src":"12640:1919:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"15159:82:18","statements":[{"id":4129,"nodeType":"UncheckedBlock","src":"15169:66:18","statements":[{"expression":{"arguments":[{"id":4122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"15212:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"15215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4126,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"15222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4120,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"15200:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4981_$","typeString":"type(library Math)"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:18","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"15200:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4119,"id":4128,"nodeType":"Return","src":"15193:31:18"}]}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"14565:514:18","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:18","nodeType":"FunctionDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4113,"mutability":"mutable","name":"a","nameLocation":"15113:1:18","nodeType":"VariableDeclaration","scope":4131,"src":"15105:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4115,"mutability":"mutable","name":"p","nameLocation":"15124:1:18","nodeType":"VariableDeclaration","scope":4131,"src":"15116:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:18"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4131,"src":"15150:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:18"},"scope":4981,"src":"15084:157:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"16011:174:18","statements":[{"assignments":[4144,4146],"declarations":[{"constant":false,"id":4144,"mutability":"mutable","name":"success","nameLocation":"16027:7:18","nodeType":"VariableDeclaration","scope":4166,"src":"16022:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4143,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"result","nameLocation":"16044:6:18","nodeType":"VariableDeclaration","scope":4166,"src":"16036:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4152,"initialValue":{"arguments":[{"id":4148,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"16064:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4149,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"16067:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4150,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"16070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4147,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4191,4273],"referencedDeclaration":4191,"src":"16054:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:18"},{"condition":{"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:18","subExpression":{"id":4153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"16087:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4163,"nodeType":"IfStatement","src":"16082:74:18","trueBody":{"id":4162,"nodeType":"Block","src":"16096:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":4158,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"16122:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1491,"src":"16122:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4155,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"16110:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1523,"src":"16110:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4161,"nodeType":"ExpressionStatement","src":"16110:35:18"}]}},{"expression":{"id":4164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"16172:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4142,"id":4165,"nodeType":"Return","src":"16165:13:18"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"15247:678:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:18","nodeType":"FunctionDefinition","parameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"b","nameLocation":"15954:1:18","nodeType":"VariableDeclaration","scope":4167,"src":"15946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"e","nameLocation":"15965:1:18","nodeType":"VariableDeclaration","scope":4167,"src":"15957:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4138,"mutability":"mutable","name":"m","nameLocation":"15976:1:18","nodeType":"VariableDeclaration","scope":4167,"src":"15968:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:18"},"returnParameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"16002:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:18"},"scope":4981,"src":"15930:255:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4190,"nodeType":"Block","src":"17039:1493:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"17053:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4188,"nodeType":"IfStatement","src":"17049:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4180,"id":4187,"nodeType":"Return","src":"17061:17:18"}},{"AST":{"nativeSrc":"17113:1413:18","nodeType":"YulBlock","src":"17113:1413:18","statements":[{"nativeSrc":"17127:22:18","nodeType":"YulVariableDeclaration","src":"17127:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:18","nodeType":"YulLiteral","src":"17144:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:18","nodeType":"YulIdentifier","src":"17138:5:18"},"nativeSrc":"17138:11:18","nodeType":"YulFunctionCall","src":"17138:11:18"},"variables":[{"name":"ptr","nativeSrc":"17131:3:18","nodeType":"YulTypedName","src":"17131:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:18","nodeType":"YulIdentifier","src":"18057:3:18"},{"kind":"number","nativeSrc":"18062:4:18","nodeType":"YulLiteral","src":"18062:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:18","nodeType":"YulIdentifier","src":"18050:6:18"},"nativeSrc":"18050:17:18","nodeType":"YulFunctionCall","src":"18050:17:18"},"nativeSrc":"18050:17:18","nodeType":"YulExpressionStatement","src":"18050:17:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:18","nodeType":"YulIdentifier","src":"18091:3:18"},{"kind":"number","nativeSrc":"18096:4:18","nodeType":"YulLiteral","src":"18096:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:18","nodeType":"YulIdentifier","src":"18087:3:18"},"nativeSrc":"18087:14:18","nodeType":"YulFunctionCall","src":"18087:14:18"},{"kind":"number","nativeSrc":"18103:4:18","nodeType":"YulLiteral","src":"18103:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:18","nodeType":"YulIdentifier","src":"18080:6:18"},"nativeSrc":"18080:28:18","nodeType":"YulFunctionCall","src":"18080:28:18"},"nativeSrc":"18080:28:18","nodeType":"YulExpressionStatement","src":"18080:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:18","nodeType":"YulIdentifier","src":"18132:3:18"},{"kind":"number","nativeSrc":"18137:4:18","nodeType":"YulLiteral","src":"18137:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:18","nodeType":"YulIdentifier","src":"18128:3:18"},"nativeSrc":"18128:14:18","nodeType":"YulFunctionCall","src":"18128:14:18"},{"kind":"number","nativeSrc":"18144:4:18","nodeType":"YulLiteral","src":"18144:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:18","nodeType":"YulIdentifier","src":"18121:6:18"},"nativeSrc":"18121:28:18","nodeType":"YulFunctionCall","src":"18121:28:18"},"nativeSrc":"18121:28:18","nodeType":"YulExpressionStatement","src":"18121:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:18","nodeType":"YulIdentifier","src":"18173:3:18"},{"kind":"number","nativeSrc":"18178:4:18","nodeType":"YulLiteral","src":"18178:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:18","nodeType":"YulIdentifier","src":"18169:3:18"},"nativeSrc":"18169:14:18","nodeType":"YulFunctionCall","src":"18169:14:18"},{"name":"b","nativeSrc":"18185:1:18","nodeType":"YulIdentifier","src":"18185:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:18","nodeType":"YulIdentifier","src":"18162:6:18"},"nativeSrc":"18162:25:18","nodeType":"YulFunctionCall","src":"18162:25:18"},"nativeSrc":"18162:25:18","nodeType":"YulExpressionStatement","src":"18162:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:18","nodeType":"YulIdentifier","src":"18211:3:18"},{"kind":"number","nativeSrc":"18216:4:18","nodeType":"YulLiteral","src":"18216:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:18","nodeType":"YulIdentifier","src":"18207:3:18"},"nativeSrc":"18207:14:18","nodeType":"YulFunctionCall","src":"18207:14:18"},{"name":"e","nativeSrc":"18223:1:18","nodeType":"YulIdentifier","src":"18223:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:18","nodeType":"YulIdentifier","src":"18200:6:18"},"nativeSrc":"18200:25:18","nodeType":"YulFunctionCall","src":"18200:25:18"},"nativeSrc":"18200:25:18","nodeType":"YulExpressionStatement","src":"18200:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:18","nodeType":"YulIdentifier","src":"18249:3:18"},{"kind":"number","nativeSrc":"18254:4:18","nodeType":"YulLiteral","src":"18254:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:18","nodeType":"YulIdentifier","src":"18245:3:18"},"nativeSrc":"18245:14:18","nodeType":"YulFunctionCall","src":"18245:14:18"},{"name":"m","nativeSrc":"18261:1:18","nodeType":"YulIdentifier","src":"18261:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:18","nodeType":"YulIdentifier","src":"18238:6:18"},"nativeSrc":"18238:25:18","nodeType":"YulFunctionCall","src":"18238:25:18"},"nativeSrc":"18238:25:18","nodeType":"YulExpressionStatement","src":"18238:25:18"},{"nativeSrc":"18425:57:18","nodeType":"YulAssignment","src":"18425:57:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:18","nodeType":"YulIdentifier","src":"18447:3:18"},"nativeSrc":"18447:5:18","nodeType":"YulFunctionCall","src":"18447:5:18"},{"kind":"number","nativeSrc":"18454:4:18","nodeType":"YulLiteral","src":"18454:4:18","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:18","nodeType":"YulIdentifier","src":"18460:3:18"},{"kind":"number","nativeSrc":"18465:4:18","nodeType":"YulLiteral","src":"18465:4:18","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:18","nodeType":"YulLiteral","src":"18471:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:18","nodeType":"YulLiteral","src":"18477:4:18","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:18","nodeType":"YulIdentifier","src":"18436:10:18"},"nativeSrc":"18436:46:18","nodeType":"YulFunctionCall","src":"18436:46:18"},"variableNames":[{"name":"success","nativeSrc":"18425:7:18","nodeType":"YulIdentifier","src":"18425:7:18"}]},{"nativeSrc":"18495:21:18","nodeType":"YulAssignment","src":"18495:21:18","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:18","nodeType":"YulLiteral","src":"18511:4:18","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:18","nodeType":"YulIdentifier","src":"18505:5:18"},"nativeSrc":"18505:11:18","nodeType":"YulFunctionCall","src":"18505:11:18"},"variableNames":[{"name":"result","nativeSrc":"18495:6:18","nodeType":"YulIdentifier","src":"18495:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4170,"isOffset":false,"isSlot":false,"src":"18185:1:18","valueSize":1},{"declaration":4172,"isOffset":false,"isSlot":false,"src":"18223:1:18","valueSize":1},{"declaration":4174,"isOffset":false,"isSlot":false,"src":"18261:1:18","valueSize":1},{"declaration":4179,"isOffset":false,"isSlot":false,"src":"18495:6:18","valueSize":1},{"declaration":4177,"isOffset":false,"isSlot":false,"src":"18425:7:18","valueSize":1}],"flags":["memory-safe"],"id":4189,"nodeType":"InlineAssembly","src":"17088:1438:18"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"16191:738:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4191,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:18","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"b","nameLocation":"16961:1:18","nodeType":"VariableDeclaration","scope":4191,"src":"16953:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"e","nameLocation":"16972:1:18","nodeType":"VariableDeclaration","scope":4191,"src":"16964:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"m","nameLocation":"16983:1:18","nodeType":"VariableDeclaration","scope":4191,"src":"16975:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:18"},"returnParameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"success","nameLocation":"17014:7:18","nodeType":"VariableDeclaration","scope":4191,"src":"17009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4176,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"result","nameLocation":"17031:6:18","nodeType":"VariableDeclaration","scope":4191,"src":"17023:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:18"},"scope":4981,"src":"16934:1598:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"18729:179:18","statements":[{"assignments":[4204,4206],"declarations":[{"constant":false,"id":4204,"mutability":"mutable","name":"success","nameLocation":"18745:7:18","nodeType":"VariableDeclaration","scope":4226,"src":"18740:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4203,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4206,"mutability":"mutable","name":"result","nameLocation":"18767:6:18","nodeType":"VariableDeclaration","scope":4226,"src":"18754:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4205,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4212,"initialValue":{"arguments":[{"id":4208,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"18787:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4209,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"18790:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4210,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"18793:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4207,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4191,4273],"referencedDeclaration":4273,"src":"18777:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:18"},{"condition":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:18","subExpression":{"id":4213,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"18810:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4223,"nodeType":"IfStatement","src":"18805:74:18","trueBody":{"id":4222,"nodeType":"Block","src":"18819:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":4218,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"18845:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1491,"src":"18845:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4215,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"18833:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1524_$","typeString":"type(library Panic)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1523,"src":"18833:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4221,"nodeType":"ExpressionStatement","src":"18833:35:18"}]}},{"expression":{"id":4224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"18895:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4202,"id":4225,"nodeType":"Return","src":"18888:13:18"}]},"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"18538:85:18","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:18","nodeType":"FunctionDefinition","parameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"b","nameLocation":"18657:1:18","nodeType":"VariableDeclaration","scope":4227,"src":"18644:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4193,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4196,"mutability":"mutable","name":"e","nameLocation":"18673:1:18","nodeType":"VariableDeclaration","scope":4227,"src":"18660:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4195,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4198,"mutability":"mutable","name":"m","nameLocation":"18689:1:18","nodeType":"VariableDeclaration","scope":4227,"src":"18676:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4197,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:18"},"returnParameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"18715:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4200,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:18"},"scope":4981,"src":"18628:280:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4272,"nodeType":"Block","src":"19162:771:18","statements":[{"condition":{"arguments":[{"id":4242,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"19187:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4241,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"19176:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4251,"nodeType":"IfStatement","src":"19172:47:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4245,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4240,"id":4250,"nodeType":"Return","src":"19191:28:18"}},{"assignments":[4253],"declarations":[{"constant":false,"id":4253,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:18","nodeType":"VariableDeclaration","scope":4272,"src":"19230:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4256,"initialValue":{"expression":{"id":4254,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"19245:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:18","memberName":"length","nodeType":"MemberAccess","src":"19245:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:18"},{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"19335:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4260,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"19361:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:18","memberName":"length","nodeType":"MemberAccess","src":"19361:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4262,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"19371:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:18","memberName":"length","nodeType":"MemberAccess","src":"19371:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4264,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"19381:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4265,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"19387:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4266,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"19390:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4267,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"19393:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4258,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4270,"nodeType":"ExpressionStatement","src":"19335:60:18"},{"AST":{"nativeSrc":"19431:496:18","nodeType":"YulBlock","src":"19431:496:18","statements":[{"nativeSrc":"19445:32:18","nodeType":"YulVariableDeclaration","src":"19445:32:18","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:18","nodeType":"YulIdentifier","src":"19464:6:18"},{"kind":"number","nativeSrc":"19472:4:18","nodeType":"YulLiteral","src":"19472:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:18","nodeType":"YulIdentifier","src":"19460:3:18"},"nativeSrc":"19460:17:18","nodeType":"YulFunctionCall","src":"19460:17:18"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:18","nodeType":"YulTypedName","src":"19449:7:18","type":""}]},{"nativeSrc":"19567:73:18","nodeType":"YulAssignment","src":"19567:73:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:18","nodeType":"YulIdentifier","src":"19589:3:18"},"nativeSrc":"19589:5:18","nodeType":"YulFunctionCall","src":"19589:5:18"},{"kind":"number","nativeSrc":"19596:4:18","nodeType":"YulLiteral","src":"19596:4:18","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:18","nodeType":"YulIdentifier","src":"19602:7:18"},{"arguments":[{"name":"result","nativeSrc":"19617:6:18","nodeType":"YulIdentifier","src":"19617:6:18"}],"functionName":{"name":"mload","nativeSrc":"19611:5:18","nodeType":"YulIdentifier","src":"19611:5:18"},"nativeSrc":"19611:13:18","nodeType":"YulFunctionCall","src":"19611:13:18"},{"name":"dataPtr","nativeSrc":"19626:7:18","nodeType":"YulIdentifier","src":"19626:7:18"},{"name":"mLen","nativeSrc":"19635:4:18","nodeType":"YulIdentifier","src":"19635:4:18"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:18","nodeType":"YulIdentifier","src":"19578:10:18"},"nativeSrc":"19578:62:18","nodeType":"YulFunctionCall","src":"19578:62:18"},"variableNames":[{"name":"success","nativeSrc":"19567:7:18","nodeType":"YulIdentifier","src":"19567:7:18"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:18","nodeType":"YulIdentifier","src":"19796:6:18"},{"name":"mLen","nativeSrc":"19804:4:18","nodeType":"YulIdentifier","src":"19804:4:18"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:18","nodeType":"YulIdentifier","src":"19789:6:18"},"nativeSrc":"19789:20:18","nodeType":"YulFunctionCall","src":"19789:20:18"},"nativeSrc":"19789:20:18","nodeType":"YulExpressionStatement","src":"19789:20:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:18","nodeType":"YulLiteral","src":"19892:4:18","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:18","nodeType":"YulIdentifier","src":"19902:7:18"},{"name":"mLen","nativeSrc":"19911:4:18","nodeType":"YulIdentifier","src":"19911:4:18"}],"functionName":{"name":"add","nativeSrc":"19898:3:18","nodeType":"YulIdentifier","src":"19898:3:18"},"nativeSrc":"19898:18:18","nodeType":"YulFunctionCall","src":"19898:18:18"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:18","nodeType":"YulIdentifier","src":"19885:6:18"},"nativeSrc":"19885:32:18","nodeType":"YulFunctionCall","src":"19885:32:18"},"nativeSrc":"19885:32:18","nodeType":"YulExpressionStatement","src":"19885:32:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4253,"isOffset":false,"isSlot":false,"src":"19635:4:18","valueSize":1},{"declaration":4253,"isOffset":false,"isSlot":false,"src":"19804:4:18","valueSize":1},{"declaration":4253,"isOffset":false,"isSlot":false,"src":"19911:4:18","valueSize":1},{"declaration":4239,"isOffset":false,"isSlot":false,"src":"19464:6:18","valueSize":1},{"declaration":4239,"isOffset":false,"isSlot":false,"src":"19617:6:18","valueSize":1},{"declaration":4239,"isOffset":false,"isSlot":false,"src":"19796:6:18","valueSize":1},{"declaration":4237,"isOffset":false,"isSlot":false,"src":"19567:7:18","valueSize":1}],"flags":["memory-safe"],"id":4271,"nodeType":"InlineAssembly","src":"19406:521:18"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"18914:88:18","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4273,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:18","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"b","nameLocation":"19048:1:18","nodeType":"VariableDeclaration","scope":4273,"src":"19035:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4229,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"e","nameLocation":"19072:1:18","nodeType":"VariableDeclaration","scope":4273,"src":"19059:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4231,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"m","nameLocation":"19096:1:18","nodeType":"VariableDeclaration","scope":4273,"src":"19083:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4233,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:18"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"success","nameLocation":"19132:7:18","nodeType":"VariableDeclaration","scope":4273,"src":"19127:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4236,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"result","nameLocation":"19154:6:18","nodeType":"VariableDeclaration","scope":4273,"src":"19141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4238,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:18"},"scope":4981,"src":"19007:926:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"20088:176:18","statements":[{"body":{"id":4301,"nodeType":"Block","src":"20145:92:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4292,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"20163:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4294,"indexExpression":{"id":4293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"20173:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4300,"nodeType":"IfStatement","src":"20159:68:18","trueBody":{"id":4299,"nodeType":"Block","src":"20182:45:18","statements":[{"expression":{"hexValue":"66616c7365","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4280,"id":4298,"nodeType":"Return","src":"20200:12:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"20118:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4286,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"20122:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:18","memberName":"length","nodeType":"MemberAccess","src":"20122:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4302,"initializationExpression":{"assignments":[4282],"declarations":[{"constant":false,"id":4282,"mutability":"mutable","name":"i","nameLocation":"20111:1:18","nodeType":"VariableDeclaration","scope":4302,"src":"20103:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4284,"initialValue":{"hexValue":"30","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:18","subExpression":{"id":4289,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"20142:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4291,"nodeType":"ExpressionStatement","src":"20140:3:18"},"nodeType":"ForStatement","src":"20098:139:18"},{"expression":{"hexValue":"74727565","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4280,"id":4304,"nodeType":"Return","src":"20246:11:18"}]},"documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"19939:72:18","text":" @dev Returns whether the provided byte array is zero."},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:18","nodeType":"FunctionDefinition","parameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:18","nodeType":"VariableDeclaration","scope":4306,"src":"20036:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4275,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:18"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4306,"src":"20082:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4278,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:18"},"scope":4981,"src":"20016:248:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4524,"nodeType":"Block","src":"20624:5124:18","statements":[{"id":4523,"nodeType":"UncheckedBlock","src":"20634:5108:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"20728:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4320,"nodeType":"IfStatement","src":"20724:53:18","trueBody":{"id":4319,"nodeType":"Block","src":"20736:41:18","statements":[{"expression":{"id":4317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"20761:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4313,"id":4318,"nodeType":"Return","src":"20754:8:18"}]}},{"assignments":[4322],"declarations":[{"constant":false,"id":4322,"mutability":"mutable","name":"aa","nameLocation":"21712:2:18","nodeType":"VariableDeclaration","scope":4523,"src":"21704:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4324,"initialValue":{"id":4323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"21717:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:18"},{"assignments":[4326],"declarations":[{"constant":false,"id":4326,"mutability":"mutable","name":"xn","nameLocation":"21740:2:18","nodeType":"VariableDeclaration","scope":4523,"src":"21732:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4328,"initialValue":{"hexValue":"31","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4329,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"21765:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4344,"nodeType":"IfStatement","src":"21761:92:18","trueBody":{"id":4343,"nodeType":"Block","src":"21783:70:18","statements":[{"expression":{"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4335,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"21801:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4338,"nodeType":"ExpressionStatement","src":"21801:10:18"},{"expression":{"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4339,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"21829:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4342,"nodeType":"ExpressionStatement","src":"21829:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"21870:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4360,"nodeType":"IfStatement","src":"21866:90:18","trueBody":{"id":4359,"nodeType":"Block","src":"21887:69:18","statements":[{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4351,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"21905:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"21905:9:18"},{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"21932:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4358,"nodeType":"ExpressionStatement","src":"21932:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4361,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"21973:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4376,"nodeType":"IfStatement","src":"21969:90:18","trueBody":{"id":4375,"nodeType":"Block","src":"21990:69:18","statements":[{"expression":{"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4367,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"22008:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4370,"nodeType":"ExpressionStatement","src":"22008:9:18"},{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4371,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"22035:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"22035:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"22076:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4392,"nodeType":"IfStatement","src":"22072:89:18","trueBody":{"id":4391,"nodeType":"Block","src":"22093:68:18","statements":[{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4383,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"22111:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"22111:9:18"},{"expression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4387,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"22138:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4390,"nodeType":"ExpressionStatement","src":"22138:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"22178:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4408,"nodeType":"IfStatement","src":"22174:87:18","trueBody":{"id":4407,"nodeType":"Block","src":"22194:67:18","statements":[{"expression":{"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4399,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"22212:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4402,"nodeType":"ExpressionStatement","src":"22212:8:18"},{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"22238:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"22238:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"22278:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4424,"nodeType":"IfStatement","src":"22274:87:18","trueBody":{"id":4423,"nodeType":"Block","src":"22294:67:18","statements":[{"expression":{"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4415,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"22312:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4418,"nodeType":"ExpressionStatement","src":"22312:8:18"},{"expression":{"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"22338:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4422,"nodeType":"ExpressionStatement","src":"22338:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"22378:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4436,"nodeType":"IfStatement","src":"22374:61:18","trueBody":{"id":4435,"nodeType":"Block","src":"22394:41:18","statements":[{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4431,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"22412:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4434,"nodeType":"ExpressionStatement","src":"22412:8:18"}]}},{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4437,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"22855:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4439,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"22865:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4445,"nodeType":"ExpressionStatement","src":"22855:18:18"},{"expression":{"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4446,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24760:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4447,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24766:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"24771:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4449,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24775:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4456,"nodeType":"ExpressionStatement","src":"24760:23:18"},{"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4457,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24869:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24875:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"24880:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4460,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24884:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4467,"nodeType":"ExpressionStatement","src":"24869:23:18"},{"expression":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24980:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4469,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24986:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"24991:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4471,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"24995:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4478,"nodeType":"ExpressionStatement","src":"24980:23:18"},{"expression":{"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4479,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25089:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25095:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"25100:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4482,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25104:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4489,"nodeType":"ExpressionStatement","src":"25089:23:18"},{"expression":{"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4490,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25199:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4491,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25205:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"25210:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4493,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25214:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"nodeType":"ExpressionStatement","src":"25199:23:18"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4501,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25309:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25315:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"25320:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25324:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"25309:23:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4512,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25698:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25719:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"25724:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4517,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"25728:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4513,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"25703:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"25703:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4313,"id":4522,"nodeType":"Return","src":"25691:40:18"}]}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"20270:292:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:18","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"a","nameLocation":"20589:1:18","nodeType":"VariableDeclaration","scope":4525,"src":"20581:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:18"},"returnParameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4525,"src":"20615:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4311,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:18"},"scope":4981,"src":"20567:5181:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4558,"nodeType":"Block","src":"25921:171:18","statements":[{"id":4557,"nodeType":"UncheckedBlock","src":"25931:155:18","statements":[{"assignments":[4537],"declarations":[{"constant":false,"id":4537,"mutability":"mutable","name":"result","nameLocation":"25963:6:18","nodeType":"VariableDeclaration","scope":4557,"src":"25955:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4541,"initialValue":{"arguments":[{"id":4539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"25977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4538,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4525,4559],"referencedDeclaration":4525,"src":"25972:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"26000:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4546,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"26042:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}],"id":4545,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"26025:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3372_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"26055:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"26064:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4551,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"26073:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4543,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"26009:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"26009:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4535,"id":4556,"nodeType":"Return","src":"25993:82:18"}]}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"25754:86:18","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4559,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:18","nodeType":"FunctionDefinition","parameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"a","nameLocation":"25867:1:18","nodeType":"VariableDeclaration","scope":4559,"src":"25859:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4531,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:18","nodeType":"VariableDeclaration","scope":4559,"src":"25870:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"},"typeName":{"id":4530,"nodeType":"UserDefinedTypeName","pathNode":{"id":4529,"name":"Rounding","nameLocations":["25870:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"25870:8:18"},"referencedDeclaration":3372,"src":"25870:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:18"},"returnParameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4559,"src":"25912:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4533,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:18"},"scope":4981,"src":"25845:247:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4649,"nodeType":"Block","src":"26281:2334:18","statements":[{"expression":{"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26363:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"26383:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4568,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"26367:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"26367:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4577,"nodeType":"ExpressionStatement","src":"26363:64:18"},{"expression":{"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4578,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26503:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"26525:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4582,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26530:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4579,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"26508:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"26508:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4591,"nodeType":"ExpressionStatement","src":"26503:56:18"},{"expression":{"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4592,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26634:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"26656:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4596,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26661:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4593,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"26639:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"26639:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4605,"nodeType":"ExpressionStatement","src":"26634:48:18"},{"expression":{"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4606,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26757:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4609,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"26779:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4610,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26784:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4607,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"26762:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"26762:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4619,"nodeType":"ExpressionStatement","src":"26757:44:18"},{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4620,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26874:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"26896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4624,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26901:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4621,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"26879:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"26879:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ExpressionStatement","src":"26874:42:18"},{"expression":{"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"26988:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"27010:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4638,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"27015:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4635,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"26993:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"26993:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4647,"nodeType":"ExpressionStatement","src":"26988:41:18"},{"AST":{"nativeSrc":"28490:119:18","nodeType":"YulBlock","src":"28490:119:18","statements":[{"nativeSrc":"28504:95:18","nodeType":"YulAssignment","src":"28504:95:18","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:18","nodeType":"YulIdentifier","src":"28512:1:18"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:18","nodeType":"YulIdentifier","src":"28524:1:18"},{"name":"x","nativeSrc":"28527:1:18","nodeType":"YulIdentifier","src":"28527:1:18"}],"functionName":{"name":"shr","nativeSrc":"28520:3:18","nodeType":"YulIdentifier","src":"28520:3:18"},"nativeSrc":"28520:9:18","nodeType":"YulFunctionCall","src":"28520:9:18"},{"kind":"number","nativeSrc":"28531:66:18","nodeType":"YulLiteral","src":"28531:66:18","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:18","nodeType":"YulIdentifier","src":"28515:4:18"},"nativeSrc":"28515:83:18","nodeType":"YulFunctionCall","src":"28515:83:18"}],"functionName":{"name":"or","nativeSrc":"28509:2:18","nodeType":"YulIdentifier","src":"28509:2:18"},"nativeSrc":"28509:90:18","nodeType":"YulFunctionCall","src":"28509:90:18"},"variableNames":[{"name":"r","nativeSrc":"28504:1:18","nodeType":"YulIdentifier","src":"28504:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4565,"isOffset":false,"isSlot":false,"src":"28504:1:18","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"28512:1:18","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"28524:1:18","valueSize":1},{"declaration":4562,"isOffset":false,"isSlot":false,"src":"28527:1:18","valueSize":1}],"flags":["memory-safe"],"id":4648,"nodeType":"InlineAssembly","src":"28465:144:18"}]},"documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"26098:119:18","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4650,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:18","nodeType":"FunctionDefinition","parameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"x","nameLocation":"26244:1:18","nodeType":"VariableDeclaration","scope":4650,"src":"26236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:18"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4565,"mutability":"mutable","name":"r","nameLocation":"26278:1:18","nodeType":"VariableDeclaration","scope":4650,"src":"26270:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:18"},"scope":4981,"src":"26222:2393:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4683,"nodeType":"Block","src":"28848:175:18","statements":[{"id":4682,"nodeType":"UncheckedBlock","src":"28858:159:18","statements":[{"assignments":[4662],"declarations":[{"constant":false,"id":4662,"mutability":"mutable","name":"result","nameLocation":"28890:6:18","nodeType":"VariableDeclaration","scope":4682,"src":"28882:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4666,"initialValue":{"arguments":[{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"28904:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4663,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4650,4684],"referencedDeclaration":4650,"src":"28899:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"28931:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4671,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"28973:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}],"id":4670,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"28956:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3372_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"28991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"29000:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4668,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"28940:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"28940:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4660,"id":4681,"nodeType":"Return","src":"28924:82:18"}]}]},"documentation":{"id":4651,"nodeType":"StructuredDocumentation","src":"28621:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4684,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:18","nodeType":"FunctionDefinition","parameters":{"id":4657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"value","nameLocation":"28790:5:18","nodeType":"VariableDeclaration","scope":4684,"src":"28782:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4656,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:18","nodeType":"VariableDeclaration","scope":4684,"src":"28797:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"},"typeName":{"id":4655,"nodeType":"UserDefinedTypeName","pathNode":{"id":4654,"name":"Rounding","nameLocations":["28797:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"28797:8:18"},"referencedDeclaration":3372,"src":"28797:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:18"},"returnParameters":{"id":4660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4684,"src":"28839:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:18"},"scope":4981,"src":"28768:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4812,"nodeType":"Block","src":"29216:854:18","statements":[{"assignments":[4693],"declarations":[{"constant":false,"id":4693,"mutability":"mutable","name":"result","nameLocation":"29234:6:18","nodeType":"VariableDeclaration","scope":4812,"src":"29226:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4695,"initialValue":{"hexValue":"30","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:18"},{"id":4809,"nodeType":"UncheckedBlock","src":"29254:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29282:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4712,"nodeType":"IfStatement","src":"29278:103:18","trueBody":{"id":4711,"nodeType":"Block","src":"29301:80:18","statements":[{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29319:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ExpressionStatement","src":"29319:17:18"},{"expression":{"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"29354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4710,"nodeType":"ExpressionStatement","src":"29354:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29398:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4729,"nodeType":"IfStatement","src":"29394:103:18","trueBody":{"id":4728,"nodeType":"Block","src":"29417:80:18","statements":[{"expression":{"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29435:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4723,"nodeType":"ExpressionStatement","src":"29435:17:18"},{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"29470:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4727,"nodeType":"ExpressionStatement","src":"29470:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29514:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4746,"nodeType":"IfStatement","src":"29510:103:18","trueBody":{"id":4745,"nodeType":"Block","src":"29533:80:18","statements":[{"expression":{"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4740,"nodeType":"ExpressionStatement","src":"29551:17:18"},{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"29586:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4744,"nodeType":"ExpressionStatement","src":"29586:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29630:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4763,"nodeType":"IfStatement","src":"29626:100:18","trueBody":{"id":4762,"nodeType":"Block","src":"29648:78:18","statements":[{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4757,"nodeType":"ExpressionStatement","src":"29666:16:18"},{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"29700:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"29700:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4780,"nodeType":"IfStatement","src":"29739:100:18","trueBody":{"id":4779,"nodeType":"Block","src":"29761:78:18","statements":[{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29779:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4774,"nodeType":"ExpressionStatement","src":"29779:16:18"},{"expression":{"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"29813:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4778,"nodeType":"ExpressionStatement","src":"29813:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29856:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4797,"nodeType":"IfStatement","src":"29852:100:18","trueBody":{"id":4796,"nodeType":"Block","src":"29874:78:18","statements":[{"expression":{"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29892:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4791,"nodeType":"ExpressionStatement","src":"29892:16:18"},{"expression":{"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"29926:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4795,"nodeType":"ExpressionStatement","src":"29926:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"29969:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4808,"nodeType":"IfStatement","src":"29965:66:18","trueBody":{"id":4807,"nodeType":"Block","src":"29987:44:18","statements":[{"expression":{"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"30005:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4806,"nodeType":"ExpressionStatement","src":"30005:11:18"}]}}]},{"expression":{"id":4810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"30057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4691,"id":4811,"nodeType":"Return","src":"30050:13:18"}]},"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"29029:120:18","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4813,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:18","nodeType":"FunctionDefinition","parameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"value","nameLocation":"29177:5:18","nodeType":"VariableDeclaration","scope":4813,"src":"29169:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:18"},"returnParameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4813,"src":"29207:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:18"},"scope":4981,"src":"29154:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4846,"nodeType":"Block","src":"30305:177:18","statements":[{"id":4845,"nodeType":"UncheckedBlock","src":"30315:161:18","statements":[{"assignments":[4825],"declarations":[{"constant":false,"id":4825,"mutability":"mutable","name":"result","nameLocation":"30347:6:18","nodeType":"VariableDeclaration","scope":4845,"src":"30339:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4829,"initialValue":{"arguments":[{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4826,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4813,4847],"referencedDeclaration":4813,"src":"30356:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"30389:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4834,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"30431:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}],"id":4833,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"30414:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3372_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"30450:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"30459:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4831,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"30398:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"30398:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4823,"id":4844,"nodeType":"Return","src":"30382:83:18"}]}]},"documentation":{"id":4814,"nodeType":"StructuredDocumentation","src":"30076:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4847,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:18","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"value","nameLocation":"30247:5:18","nodeType":"VariableDeclaration","scope":4847,"src":"30239:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4819,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:18","nodeType":"VariableDeclaration","scope":4847,"src":"30254:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"},"typeName":{"id":4818,"nodeType":"UserDefinedTypeName","pathNode":{"id":4817,"name":"Rounding","nameLocations":["30254:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"30254:8:18"},"referencedDeclaration":3372,"src":"30254:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:18"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4847,"src":"30296:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:18"},"scope":4981,"src":"30224:258:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4923,"nodeType":"Block","src":"30800:675:18","statements":[{"expression":{"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4855,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"30882:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4858,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"30902:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4856,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"30886:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"30886:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4865,"nodeType":"ExpressionStatement","src":"30882:64:18"},{"expression":{"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4866,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31022:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4869,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"31044:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4870,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31049:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4867,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"31027:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"31027:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4879,"nodeType":"ExpressionStatement","src":"31022:56:18"},{"expression":{"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4880,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31153:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"31175:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4884,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31180:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4881,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"31158:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"31158:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4893,"nodeType":"ExpressionStatement","src":"31153:48:18"},{"expression":{"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4894,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31276:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4897,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"31298:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4898,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31303:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4895,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"31281:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"31281:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4907,"nodeType":"ExpressionStatement","src":"31276:44:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4908,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31426:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"31453:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4915,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31458:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4912,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"31436:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"31436:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4854,"id":4922,"nodeType":"Return","src":"31418:50:18"}]},"documentation":{"id":4848,"nodeType":"StructuredDocumentation","src":"30488:246:18","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4924,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:18","nodeType":"FunctionDefinition","parameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"x","nameLocation":"30763:1:18","nodeType":"VariableDeclaration","scope":4924,"src":"30755:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:18"},"returnParameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"r","nameLocation":"30797:1:18","nodeType":"VariableDeclaration","scope":4924,"src":"30789:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:18"},"scope":4981,"src":"30739:736:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4960,"nodeType":"Block","src":"31712:184:18","statements":[{"id":4959,"nodeType":"UncheckedBlock","src":"31722:168:18","statements":[{"assignments":[4936],"declarations":[{"constant":false,"id":4936,"mutability":"mutable","name":"result","nameLocation":"31754:6:18","nodeType":"VariableDeclaration","scope":4959,"src":"31746:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4940,"initialValue":{"arguments":[{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"31770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4924,4961],"referencedDeclaration":4924,"src":"31763:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"31797:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4945,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"31839:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}],"id":4944,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"31822:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3372_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"31873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4942,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"31806:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"31806:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4934,"id":4958,"nodeType":"Return","src":"31790:89:18"}]}]},"documentation":{"id":4925,"nodeType":"StructuredDocumentation","src":"31481:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4961,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:18","nodeType":"FunctionDefinition","parameters":{"id":4931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"value","nameLocation":"31654:5:18","nodeType":"VariableDeclaration","scope":4961,"src":"31646:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4930,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:18","nodeType":"VariableDeclaration","scope":4961,"src":"31661:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"},"typeName":{"id":4929,"nodeType":"UserDefinedTypeName","pathNode":{"id":4928,"name":"Rounding","nameLocations":["31661:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"31661:8:18"},"referencedDeclaration":3372,"src":"31661:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:18"},"returnParameters":{"id":4934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4961,"src":"31703:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4932,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:18"},"scope":4981,"src":"31630:266:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4979,"nodeType":"Block","src":"32094:48:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4972,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"32117:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}],"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4970,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:18","typeDescriptions":{}}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4969,"id":4978,"nodeType":"Return","src":"32104:31:18"}]},"documentation":{"id":4962,"nodeType":"StructuredDocumentation","src":"31902:113:18","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4980,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:18","nodeType":"FunctionDefinition","parameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:18","nodeType":"VariableDeclaration","scope":4980,"src":"32046:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"},"typeName":{"id":4964,"nodeType":"UserDefinedTypeName","pathNode":{"id":4963,"name":"Rounding","nameLocations":["32046:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"32046:8:18"},"referencedDeclaration":3372,"src":"32046:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3372","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:18"},"returnParameters":{"id":4969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4980,"src":"32088:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4967,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:18"},"scope":4981,"src":"32020:122:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4982,"src":"281:31863:18","usedErrors":[],"usedEvents":[]}],"src":"103:32042:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6746]},"id":6747,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4983,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4984,"nodeType":"StructuredDocumentation","src":"218:550:19","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6746,"linearizedBaseContracts":[6746],"name":"SafeCast","nameLocation":"777:8:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4985,"nodeType":"StructuredDocumentation","src":"792:68:19","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4991,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:19","nodeType":"ErrorDefinition","parameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"bits","nameLocation":"908:4:19","nodeType":"VariableDeclaration","scope":4991,"src":"902:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4986,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"value","nameLocation":"922:5:19","nodeType":"VariableDeclaration","scope":4991,"src":"914:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:19"},"src":"865:64:19"},{"documentation":{"id":4992,"nodeType":"StructuredDocumentation","src":"935:75:19","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4996,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:19","nodeType":"ErrorDefinition","parameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4994,"mutability":"mutable","name":"value","nameLocation":"1056:5:19","nodeType":"VariableDeclaration","scope":4996,"src":"1049:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4993,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:19"},"src":"1015:48:19"},{"documentation":{"id":4997,"nodeType":"StructuredDocumentation","src":"1069:67:19","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5003,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:19","nodeType":"ErrorDefinition","parameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"bits","nameLocation":"1183:4:19","nodeType":"VariableDeclaration","scope":5003,"src":"1177:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4998,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5001,"mutability":"mutable","name":"value","nameLocation":"1196:5:19","nodeType":"VariableDeclaration","scope":5003,"src":"1189:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5000,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:19"},"src":"1141:62:19"},{"documentation":{"id":5004,"nodeType":"StructuredDocumentation","src":"1209:75:19","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5008,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:19","nodeType":"ErrorDefinition","parameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"value","nameLocation":"1331:5:19","nodeType":"VariableDeclaration","scope":5008,"src":"1323:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:19"},"src":"1289:49:19"},{"body":{"id":5035,"nodeType":"Block","src":"1695:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"1709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5018,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5017,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:19","memberName":"max","nodeType":"MemberAccess","src":"1717:17:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5029,"nodeType":"IfStatement","src":"1705:105:19","trueBody":{"id":5028,"nodeType":"Block","src":"1736:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"1793:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5023,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"1757:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5027,"nodeType":"RevertStatement","src":"1750:49:19"}]}},{"expression":{"arguments":[{"id":5032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5030,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:19","typeDescriptions":{}}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5015,"id":5034,"nodeType":"Return","src":"1819:21:19"}]},"documentation":{"id":5009,"nodeType":"StructuredDocumentation","src":"1344:280:19","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5036,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:19","nodeType":"FunctionDefinition","parameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"value","nameLocation":"1656:5:19","nodeType":"VariableDeclaration","scope":5036,"src":"1648:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:19"},"returnParameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5036,"src":"1686:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5013,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:19"},"scope":6746,"src":"1629:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5063,"nodeType":"Block","src":"2204:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"2218:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5046,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:19","memberName":"max","nodeType":"MemberAccess","src":"2226:17:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5057,"nodeType":"IfStatement","src":"2214:105:19","trueBody":{"id":5056,"nodeType":"Block","src":"2245:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"2302:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5051,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"2266:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5055,"nodeType":"RevertStatement","src":"2259:49:19"}]}},{"expression":{"arguments":[{"id":5060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5058,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:19","typeDescriptions":{}}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5043,"id":5062,"nodeType":"Return","src":"2328:21:19"}]},"documentation":{"id":5037,"nodeType":"StructuredDocumentation","src":"1853:280:19","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5064,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:19","nodeType":"FunctionDefinition","parameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"value","nameLocation":"2165:5:19","nodeType":"VariableDeclaration","scope":5064,"src":"2157:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:19"},"returnParameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5064,"src":"2195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5041,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:19"},"scope":6746,"src":"2138:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5091,"nodeType":"Block","src":"2713:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"2727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5074,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5073,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:19","memberName":"max","nodeType":"MemberAccess","src":"2735:17:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5085,"nodeType":"IfStatement","src":"2723:105:19","trueBody":{"id":5084,"nodeType":"Block","src":"2754:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"2811:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5079,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"2775:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5083,"nodeType":"RevertStatement","src":"2768:49:19"}]}},{"expression":{"arguments":[{"id":5088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"2852:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5086,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:19","typeDescriptions":{}}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5071,"id":5090,"nodeType":"Return","src":"2837:21:19"}]},"documentation":{"id":5065,"nodeType":"StructuredDocumentation","src":"2362:280:19","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5092,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:19","nodeType":"FunctionDefinition","parameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"value","nameLocation":"2674:5:19","nodeType":"VariableDeclaration","scope":5092,"src":"2666:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:19"},"returnParameters":{"id":5071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5092,"src":"2704:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5069,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:19"},"scope":6746,"src":"2647:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5119,"nodeType":"Block","src":"3222:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"3236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5102,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5101,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:19","memberName":"max","nodeType":"MemberAccess","src":"3244:17:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5113,"nodeType":"IfStatement","src":"3232:105:19","trueBody":{"id":5112,"nodeType":"Block","src":"3263:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"3320:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5107,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"3284:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5111,"nodeType":"RevertStatement","src":"3277:49:19"}]}},{"expression":{"arguments":[{"id":5116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"3361:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5114,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:19","typeDescriptions":{}}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5099,"id":5118,"nodeType":"Return","src":"3346:21:19"}]},"documentation":{"id":5093,"nodeType":"StructuredDocumentation","src":"2871:280:19","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5120,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:19","nodeType":"FunctionDefinition","parameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"value","nameLocation":"3183:5:19","nodeType":"VariableDeclaration","scope":5120,"src":"3175:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:19"},"returnParameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5120,"src":"3213:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5097,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:19"},"scope":6746,"src":"3156:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5147,"nodeType":"Block","src":"3731:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5130,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5129,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:19","memberName":"max","nodeType":"MemberAccess","src":"3753:17:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5141,"nodeType":"IfStatement","src":"3741:105:19","trueBody":{"id":5140,"nodeType":"Block","src":"3772:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"3829:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5135,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"3793:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5139,"nodeType":"RevertStatement","src":"3786:49:19"}]}},{"expression":{"arguments":[{"id":5144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"3870:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5142,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:19","typeDescriptions":{}}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5127,"id":5146,"nodeType":"Return","src":"3855:21:19"}]},"documentation":{"id":5121,"nodeType":"StructuredDocumentation","src":"3380:280:19","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5148,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:19","nodeType":"FunctionDefinition","parameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"value","nameLocation":"3692:5:19","nodeType":"VariableDeclaration","scope":5148,"src":"3684:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:19"},"returnParameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5148,"src":"3722:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5125,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:19"},"scope":6746,"src":"3665:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5175,"nodeType":"Block","src":"4240:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4254:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5158,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:19","memberName":"max","nodeType":"MemberAccess","src":"4262:17:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5169,"nodeType":"IfStatement","src":"4250:105:19","trueBody":{"id":5168,"nodeType":"Block","src":"4281:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4338:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5163,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"4302:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5167,"nodeType":"RevertStatement","src":"4295:49:19"}]}},{"expression":{"arguments":[{"id":5172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5170,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:19","typeDescriptions":{}}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5155,"id":5174,"nodeType":"Return","src":"4364:21:19"}]},"documentation":{"id":5149,"nodeType":"StructuredDocumentation","src":"3889:280:19","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5176,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:19","nodeType":"FunctionDefinition","parameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"value","nameLocation":"4201:5:19","nodeType":"VariableDeclaration","scope":5176,"src":"4193:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:19"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5176,"src":"4231:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5153,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:19"},"scope":6746,"src":"4174:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5203,"nodeType":"Block","src":"4749:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"4763:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5186,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5185,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:19","memberName":"max","nodeType":"MemberAccess","src":"4771:17:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5197,"nodeType":"IfStatement","src":"4759:105:19","trueBody":{"id":5196,"nodeType":"Block","src":"4790:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"4847:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5191,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"4811:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5195,"nodeType":"RevertStatement","src":"4804:49:19"}]}},{"expression":{"arguments":[{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"4888:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5198,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:19","typeDescriptions":{}}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5183,"id":5202,"nodeType":"Return","src":"4873:21:19"}]},"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"4398:280:19","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5204,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:19","nodeType":"FunctionDefinition","parameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"value","nameLocation":"4710:5:19","nodeType":"VariableDeclaration","scope":5204,"src":"4702:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:19"},"returnParameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5204,"src":"4740:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5181,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:19"},"scope":6746,"src":"4683:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5231,"nodeType":"Block","src":"5258:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"5272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5214,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5213,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:19","memberName":"max","nodeType":"MemberAccess","src":"5280:17:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"IfStatement","src":"5268:105:19","trueBody":{"id":5224,"nodeType":"Block","src":"5299:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"5356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5219,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"5320:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5223,"nodeType":"RevertStatement","src":"5313:49:19"}]}},{"expression":{"arguments":[{"id":5228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"5397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5226,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:19","typeDescriptions":{}}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5211,"id":5230,"nodeType":"Return","src":"5382:21:19"}]},"documentation":{"id":5205,"nodeType":"StructuredDocumentation","src":"4907:280:19","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5232,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:19","nodeType":"FunctionDefinition","parameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"value","nameLocation":"5219:5:19","nodeType":"VariableDeclaration","scope":5232,"src":"5211:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:19"},"returnParameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5232,"src":"5249:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5209,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:19"},"scope":6746,"src":"5192:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5259,"nodeType":"Block","src":"5767:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"5781:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5242,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5241,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:19","memberName":"max","nodeType":"MemberAccess","src":"5789:17:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5253,"nodeType":"IfStatement","src":"5777:105:19","trueBody":{"id":5252,"nodeType":"Block","src":"5808:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"5865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5247,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"5829:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5251,"nodeType":"RevertStatement","src":"5822:49:19"}]}},{"expression":{"arguments":[{"id":5256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"5906:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5254,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:19","typeDescriptions":{}}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5239,"id":5258,"nodeType":"Return","src":"5891:21:19"}]},"documentation":{"id":5233,"nodeType":"StructuredDocumentation","src":"5416:280:19","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5260,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:19","nodeType":"FunctionDefinition","parameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"value","nameLocation":"5728:5:19","nodeType":"VariableDeclaration","scope":5260,"src":"5720:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:19"},"returnParameters":{"id":5239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5260,"src":"5758:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5237,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:19"},"scope":6746,"src":"5701:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5287,"nodeType":"Block","src":"6276:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"6290:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5270,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:19","memberName":"max","nodeType":"MemberAccess","src":"6298:17:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5281,"nodeType":"IfStatement","src":"6286:105:19","trueBody":{"id":5280,"nodeType":"Block","src":"6317:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"6374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5275,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"6338:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5279,"nodeType":"RevertStatement","src":"6331:49:19"}]}},{"expression":{"arguments":[{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"6415:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5282,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:19","typeDescriptions":{}}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5267,"id":5286,"nodeType":"Return","src":"6400:21:19"}]},"documentation":{"id":5261,"nodeType":"StructuredDocumentation","src":"5925:280:19","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5288,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:19","nodeType":"FunctionDefinition","parameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"value","nameLocation":"6237:5:19","nodeType":"VariableDeclaration","scope":5288,"src":"6229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5262,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:19"},"returnParameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5288,"src":"6267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5265,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:19"},"scope":6746,"src":"6210:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5315,"nodeType":"Block","src":"6785:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"6799:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5298,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5297,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:19","memberName":"max","nodeType":"MemberAccess","src":"6807:17:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5309,"nodeType":"IfStatement","src":"6795:105:19","trueBody":{"id":5308,"nodeType":"Block","src":"6826:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"6883:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5303,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"6847:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5307,"nodeType":"RevertStatement","src":"6840:49:19"}]}},{"expression":{"arguments":[{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"6924:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5310,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:19","typeDescriptions":{}}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5295,"id":5314,"nodeType":"Return","src":"6909:21:19"}]},"documentation":{"id":5289,"nodeType":"StructuredDocumentation","src":"6434:280:19","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5316,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:19","nodeType":"FunctionDefinition","parameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"value","nameLocation":"6746:5:19","nodeType":"VariableDeclaration","scope":5316,"src":"6738:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:19"},"returnParameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5316,"src":"6776:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5293,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:19"},"scope":6746,"src":"6719:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5343,"nodeType":"Block","src":"7294:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"7308:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5326,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5325,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:19","memberName":"max","nodeType":"MemberAccess","src":"7316:17:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5337,"nodeType":"IfStatement","src":"7304:105:19","trueBody":{"id":5336,"nodeType":"Block","src":"7335:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"7392:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5331,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"7356:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5335,"nodeType":"RevertStatement","src":"7349:49:19"}]}},{"expression":{"arguments":[{"id":5340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"7433:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5338,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:19","typeDescriptions":{}}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5323,"id":5342,"nodeType":"Return","src":"7418:21:19"}]},"documentation":{"id":5317,"nodeType":"StructuredDocumentation","src":"6943:280:19","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5344,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:19","nodeType":"FunctionDefinition","parameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"value","nameLocation":"7255:5:19","nodeType":"VariableDeclaration","scope":5344,"src":"7247:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:19"},"returnParameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5344,"src":"7285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5321,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:19"},"scope":6746,"src":"7228:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5371,"nodeType":"Block","src":"7803:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7817:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5354,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5353,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:19","memberName":"max","nodeType":"MemberAccess","src":"7825:17:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5365,"nodeType":"IfStatement","src":"7813:105:19","trueBody":{"id":5364,"nodeType":"Block","src":"7844:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7901:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5359,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"7865:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5363,"nodeType":"RevertStatement","src":"7858:49:19"}]}},{"expression":{"arguments":[{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7942:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5366,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:19","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5351,"id":5370,"nodeType":"Return","src":"7927:21:19"}]},"documentation":{"id":5345,"nodeType":"StructuredDocumentation","src":"7452:280:19","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5372,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:19","nodeType":"FunctionDefinition","parameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"value","nameLocation":"7764:5:19","nodeType":"VariableDeclaration","scope":5372,"src":"7756:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5346,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:19"},"returnParameters":{"id":5351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5372,"src":"7794:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5349,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:19"},"scope":6746,"src":"7737:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5399,"nodeType":"Block","src":"8312:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"8326:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5382,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:19","memberName":"max","nodeType":"MemberAccess","src":"8334:17:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5393,"nodeType":"IfStatement","src":"8322:105:19","trueBody":{"id":5392,"nodeType":"Block","src":"8353:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"8410:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5387,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"8374:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5391,"nodeType":"RevertStatement","src":"8367:49:19"}]}},{"expression":{"arguments":[{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"8451:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5394,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:19","typeDescriptions":{}}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5379,"id":5398,"nodeType":"Return","src":"8436:21:19"}]},"documentation":{"id":5373,"nodeType":"StructuredDocumentation","src":"7961:280:19","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5400,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:19","nodeType":"FunctionDefinition","parameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"value","nameLocation":"8273:5:19","nodeType":"VariableDeclaration","scope":5400,"src":"8265:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:19"},"returnParameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5400,"src":"8303:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5377,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:19"},"scope":6746,"src":"8246:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5427,"nodeType":"Block","src":"8821:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"8835:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5410,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5409,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:19","memberName":"max","nodeType":"MemberAccess","src":"8843:17:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5421,"nodeType":"IfStatement","src":"8831:105:19","trueBody":{"id":5420,"nodeType":"Block","src":"8862:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"8919:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5415,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"8883:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5419,"nodeType":"RevertStatement","src":"8876:49:19"}]}},{"expression":{"arguments":[{"id":5424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"8960:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5422,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:19","typeDescriptions":{}}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5407,"id":5426,"nodeType":"Return","src":"8945:21:19"}]},"documentation":{"id":5401,"nodeType":"StructuredDocumentation","src":"8470:280:19","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5428,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:19","nodeType":"FunctionDefinition","parameters":{"id":5404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"value","nameLocation":"8782:5:19","nodeType":"VariableDeclaration","scope":5428,"src":"8774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5402,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:19"},"returnParameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5428,"src":"8812:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5405,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:19"},"scope":6746,"src":"8755:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5455,"nodeType":"Block","src":"9330:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"9344:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5438,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:19","memberName":"max","nodeType":"MemberAccess","src":"9352:17:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5449,"nodeType":"IfStatement","src":"9340:105:19","trueBody":{"id":5448,"nodeType":"Block","src":"9371:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"9428:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5443,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"9392:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5447,"nodeType":"RevertStatement","src":"9385:49:19"}]}},{"expression":{"arguments":[{"id":5452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"9469:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5450,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:19","typeDescriptions":{}}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5435,"id":5454,"nodeType":"Return","src":"9454:21:19"}]},"documentation":{"id":5429,"nodeType":"StructuredDocumentation","src":"8979:280:19","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5456,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:19","nodeType":"FunctionDefinition","parameters":{"id":5432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5431,"mutability":"mutable","name":"value","nameLocation":"9291:5:19","nodeType":"VariableDeclaration","scope":5456,"src":"9283:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:19"},"returnParameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5456,"src":"9321:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5433,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:19"},"scope":6746,"src":"9264:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5483,"nodeType":"Block","src":"9839:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"9853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5466,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5465,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:19","memberName":"max","nodeType":"MemberAccess","src":"9861:17:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5477,"nodeType":"IfStatement","src":"9849:105:19","trueBody":{"id":5476,"nodeType":"Block","src":"9880:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"9937:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5471,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"9901:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5475,"nodeType":"RevertStatement","src":"9894:49:19"}]}},{"expression":{"arguments":[{"id":5480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"9978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5478,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:19","typeDescriptions":{}}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5463,"id":5482,"nodeType":"Return","src":"9963:21:19"}]},"documentation":{"id":5457,"nodeType":"StructuredDocumentation","src":"9488:280:19","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5484,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:19","nodeType":"FunctionDefinition","parameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"value","nameLocation":"9800:5:19","nodeType":"VariableDeclaration","scope":5484,"src":"9792:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:19"},"returnParameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5484,"src":"9830:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5461,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:19"},"scope":6746,"src":"9773:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5511,"nodeType":"Block","src":"10348:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"10362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5494,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5493,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:19","memberName":"max","nodeType":"MemberAccess","src":"10370:17:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5505,"nodeType":"IfStatement","src":"10358:105:19","trueBody":{"id":5504,"nodeType":"Block","src":"10389:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"10446:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5499,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"10410:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5503,"nodeType":"RevertStatement","src":"10403:49:19"}]}},{"expression":{"arguments":[{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"10487:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5506,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:19","typeDescriptions":{}}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5491,"id":5510,"nodeType":"Return","src":"10472:21:19"}]},"documentation":{"id":5485,"nodeType":"StructuredDocumentation","src":"9997:280:19","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5512,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:19","nodeType":"FunctionDefinition","parameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"value","nameLocation":"10309:5:19","nodeType":"VariableDeclaration","scope":5512,"src":"10301:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5486,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:19"},"returnParameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5512,"src":"10339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5489,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:19"},"scope":6746,"src":"10282:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5539,"nodeType":"Block","src":"10857:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"10871:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5522,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5521,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:19","memberName":"max","nodeType":"MemberAccess","src":"10879:17:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"10867:105:19","trueBody":{"id":5532,"nodeType":"Block","src":"10898:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"10955:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5527,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"10919:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5531,"nodeType":"RevertStatement","src":"10912:49:19"}]}},{"expression":{"arguments":[{"id":5536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"10996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5534,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:19","typeDescriptions":{}}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5519,"id":5538,"nodeType":"Return","src":"10981:21:19"}]},"documentation":{"id":5513,"nodeType":"StructuredDocumentation","src":"10506:280:19","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5540,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:19","nodeType":"FunctionDefinition","parameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"value","nameLocation":"10818:5:19","nodeType":"VariableDeclaration","scope":5540,"src":"10810:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5514,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:19"},"returnParameters":{"id":5519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5540,"src":"10848:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5517,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:19"},"scope":6746,"src":"10791:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5567,"nodeType":"Block","src":"11360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"11374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5550,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5549,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:19","memberName":"max","nodeType":"MemberAccess","src":"11382:16:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5561,"nodeType":"IfStatement","src":"11370:103:19","trueBody":{"id":5560,"nodeType":"Block","src":"11400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"11456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5555,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"11421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5559,"nodeType":"RevertStatement","src":"11414:48:19"}]}},{"expression":{"arguments":[{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"11496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5562,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:19","typeDescriptions":{}}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5547,"id":5566,"nodeType":"Return","src":"11482:20:19"}]},"documentation":{"id":5541,"nodeType":"StructuredDocumentation","src":"11015:276:19","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5568,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5543,"mutability":"mutable","name":"value","nameLocation":"11322:5:19","nodeType":"VariableDeclaration","scope":5568,"src":"11314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5542,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:19"},"returnParameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5568,"src":"11352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5545,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:19"},"scope":6746,"src":"11296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5595,"nodeType":"Block","src":"11860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"11874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5578,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5577,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:19","memberName":"max","nodeType":"MemberAccess","src":"11882:16:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"11870:103:19","trueBody":{"id":5588,"nodeType":"Block","src":"11900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"11956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5583,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"11921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5587,"nodeType":"RevertStatement","src":"11914:48:19"}]}},{"expression":{"arguments":[{"id":5592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"11996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5590,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:19","typeDescriptions":{}}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5575,"id":5594,"nodeType":"Return","src":"11982:20:19"}]},"documentation":{"id":5569,"nodeType":"StructuredDocumentation","src":"11515:276:19","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5596,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"value","nameLocation":"11822:5:19","nodeType":"VariableDeclaration","scope":5596,"src":"11814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:19"},"returnParameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5596,"src":"11852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5573,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:19"},"scope":6746,"src":"11796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5623,"nodeType":"Block","src":"12360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"12374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5606,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5605,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:19","memberName":"max","nodeType":"MemberAccess","src":"12382:16:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5617,"nodeType":"IfStatement","src":"12370:103:19","trueBody":{"id":5616,"nodeType":"Block","src":"12400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"12456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5611,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"12421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5615,"nodeType":"RevertStatement","src":"12414:48:19"}]}},{"expression":{"arguments":[{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"12496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5618,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:19","typeDescriptions":{}}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5603,"id":5622,"nodeType":"Return","src":"12482:20:19"}]},"documentation":{"id":5597,"nodeType":"StructuredDocumentation","src":"12015:276:19","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5624,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"value","nameLocation":"12322:5:19","nodeType":"VariableDeclaration","scope":5624,"src":"12314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5598,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:19"},"returnParameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"12352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5601,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:19"},"scope":6746,"src":"12296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5651,"nodeType":"Block","src":"12860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"12874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5634,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5633,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:19","memberName":"max","nodeType":"MemberAccess","src":"12882:16:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5645,"nodeType":"IfStatement","src":"12870:103:19","trueBody":{"id":5644,"nodeType":"Block","src":"12900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"12956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5639,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"12921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5643,"nodeType":"RevertStatement","src":"12914:48:19"}]}},{"expression":{"arguments":[{"id":5648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"12996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5646,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:19","typeDescriptions":{}}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5631,"id":5650,"nodeType":"Return","src":"12982:20:19"}]},"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"12515:276:19","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5652,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"value","nameLocation":"12822:5:19","nodeType":"VariableDeclaration","scope":5652,"src":"12814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:19"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5652,"src":"12852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5629,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:19"},"scope":6746,"src":"12796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5679,"nodeType":"Block","src":"13360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"13374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5662,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5661,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:19","memberName":"max","nodeType":"MemberAccess","src":"13382:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5673,"nodeType":"IfStatement","src":"13370:103:19","trueBody":{"id":5672,"nodeType":"Block","src":"13400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"13456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5667,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"13421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5671,"nodeType":"RevertStatement","src":"13414:48:19"}]}},{"expression":{"arguments":[{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"13496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5674,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:19","typeDescriptions":{}}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5659,"id":5678,"nodeType":"Return","src":"13482:20:19"}]},"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"13015:276:19","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5680,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"value","nameLocation":"13322:5:19","nodeType":"VariableDeclaration","scope":5680,"src":"13314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5654,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:19"},"returnParameters":{"id":5659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5680,"src":"13352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5657,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:19"},"scope":6746,"src":"13296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5707,"nodeType":"Block","src":"13860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"13874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5690,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5689,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:19","memberName":"max","nodeType":"MemberAccess","src":"13882:16:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5701,"nodeType":"IfStatement","src":"13870:103:19","trueBody":{"id":5700,"nodeType":"Block","src":"13900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"13956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5695,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"13921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5699,"nodeType":"RevertStatement","src":"13914:48:19"}]}},{"expression":{"arguments":[{"id":5704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"13996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5702,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:19","typeDescriptions":{}}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5687,"id":5706,"nodeType":"Return","src":"13982:20:19"}]},"documentation":{"id":5681,"nodeType":"StructuredDocumentation","src":"13515:276:19","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5708,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"value","nameLocation":"13822:5:19","nodeType":"VariableDeclaration","scope":5708,"src":"13814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5682,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:19"},"returnParameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5708,"src":"13852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5685,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:19"},"scope":6746,"src":"13796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5735,"nodeType":"Block","src":"14360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"14374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5718,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5717,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:19","memberName":"max","nodeType":"MemberAccess","src":"14382:16:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5729,"nodeType":"IfStatement","src":"14370:103:19","trueBody":{"id":5728,"nodeType":"Block","src":"14400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"14456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5723,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"14421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5727,"nodeType":"RevertStatement","src":"14414:48:19"}]}},{"expression":{"arguments":[{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"14496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5730,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:19","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5715,"id":5734,"nodeType":"Return","src":"14482:20:19"}]},"documentation":{"id":5709,"nodeType":"StructuredDocumentation","src":"14015:276:19","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5736,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5711,"mutability":"mutable","name":"value","nameLocation":"14322:5:19","nodeType":"VariableDeclaration","scope":5736,"src":"14314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5710,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:19"},"returnParameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5736,"src":"14352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5713,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:19"},"scope":6746,"src":"14296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5763,"nodeType":"Block","src":"14860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"14874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5746,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5745,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:19","memberName":"max","nodeType":"MemberAccess","src":"14882:16:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5757,"nodeType":"IfStatement","src":"14870:103:19","trueBody":{"id":5756,"nodeType":"Block","src":"14900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"14956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5751,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"14921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5755,"nodeType":"RevertStatement","src":"14914:48:19"}]}},{"expression":{"arguments":[{"id":5760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"14996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5758,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:19","typeDescriptions":{}}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5743,"id":5762,"nodeType":"Return","src":"14982:20:19"}]},"documentation":{"id":5737,"nodeType":"StructuredDocumentation","src":"14515:276:19","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5764,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"value","nameLocation":"14822:5:19","nodeType":"VariableDeclaration","scope":5764,"src":"14814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:19"},"returnParameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5764,"src":"14852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5741,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:19"},"scope":6746,"src":"14796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5791,"nodeType":"Block","src":"15360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"15374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5774,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:19","memberName":"max","nodeType":"MemberAccess","src":"15382:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5785,"nodeType":"IfStatement","src":"15370:103:19","trueBody":{"id":5784,"nodeType":"Block","src":"15400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"15456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5779,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"15421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5783,"nodeType":"RevertStatement","src":"15414:48:19"}]}},{"expression":{"arguments":[{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"15496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5786,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:19","typeDescriptions":{}}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5771,"id":5790,"nodeType":"Return","src":"15482:20:19"}]},"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"15015:276:19","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5792,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"value","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":5792,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:19"},"returnParameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5792,"src":"15352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5769,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:19"},"scope":6746,"src":"15296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5819,"nodeType":"Block","src":"15860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"15874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5802,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5801,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:19","memberName":"max","nodeType":"MemberAccess","src":"15882:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5813,"nodeType":"IfStatement","src":"15870:103:19","trueBody":{"id":5812,"nodeType":"Block","src":"15900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"15956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5807,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"15921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5811,"nodeType":"RevertStatement","src":"15914:48:19"}]}},{"expression":{"arguments":[{"id":5816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"15996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5814,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:19","typeDescriptions":{}}},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5799,"id":5818,"nodeType":"Return","src":"15982:20:19"}]},"documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"15515:276:19","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5820,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"value","nameLocation":"15822:5:19","nodeType":"VariableDeclaration","scope":5820,"src":"15814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5794,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:19"},"returnParameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5820,"src":"15852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5797,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:19"},"scope":6746,"src":"15796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5847,"nodeType":"Block","src":"16360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"16374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5830,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5829,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:19","memberName":"max","nodeType":"MemberAccess","src":"16382:16:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5841,"nodeType":"IfStatement","src":"16370:103:19","trueBody":{"id":5840,"nodeType":"Block","src":"16400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"16456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5835,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"16421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5839,"nodeType":"RevertStatement","src":"16414:48:19"}]}},{"expression":{"arguments":[{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"16496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5842,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:19","typeDescriptions":{}}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5827,"id":5846,"nodeType":"Return","src":"16482:20:19"}]},"documentation":{"id":5821,"nodeType":"StructuredDocumentation","src":"16015:276:19","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5848,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"value","nameLocation":"16322:5:19","nodeType":"VariableDeclaration","scope":5848,"src":"16314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5822,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:19"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5848,"src":"16352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5825,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:19"},"scope":6746,"src":"16296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5875,"nodeType":"Block","src":"16854:146:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"16868:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5858,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5857,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:19","memberName":"max","nodeType":"MemberAccess","src":"16876:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5869,"nodeType":"IfStatement","src":"16864:101:19","trueBody":{"id":5868,"nodeType":"Block","src":"16893:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"16948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5863,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"16914:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5867,"nodeType":"RevertStatement","src":"16907:47:19"}]}},{"expression":{"arguments":[{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"16987:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5870,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:19","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5855,"id":5874,"nodeType":"Return","src":"16974:19:19"}]},"documentation":{"id":5849,"nodeType":"StructuredDocumentation","src":"16515:272:19","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5876,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:19","nodeType":"FunctionDefinition","parameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"value","nameLocation":"16817:5:19","nodeType":"VariableDeclaration","scope":5876,"src":"16809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:19"},"returnParameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5876,"src":"16847:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5853,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:19"},"scope":6746,"src":"16792:208:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5898,"nodeType":"Block","src":"17236:128:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"17250:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5892,"nodeType":"IfStatement","src":"17246:81:19","trueBody":{"id":5891,"nodeType":"Block","src":"17261:66:19","statements":[{"errorCall":{"arguments":[{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"17310:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5887,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"17282:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5890,"nodeType":"RevertStatement","src":"17275:41:19"}]}},{"expression":{"arguments":[{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"17351:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:19","typeDescriptions":{}}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5883,"id":5897,"nodeType":"Return","src":"17336:21:19"}]},"documentation":{"id":5877,"nodeType":"StructuredDocumentation","src":"17006:160:19","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5899,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:19","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5879,"mutability":"mutable","name":"value","nameLocation":"17197:5:19","nodeType":"VariableDeclaration","scope":5899,"src":"17190:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5878,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:19"},"returnParameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5899,"src":"17227:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:19"},"scope":6746,"src":"17171:193:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5924,"nodeType":"Block","src":"17761:150:19","statements":[{"expression":{"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5907,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"17771:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17791:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5908,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:19","typeDescriptions":{}}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5913,"nodeType":"ExpressionStatement","src":"17771:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"17811:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17825:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5923,"nodeType":"IfStatement","src":"17807:98:19","trueBody":{"id":5922,"nodeType":"Block","src":"17832:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17888:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5917,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"17853:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5921,"nodeType":"RevertStatement","src":"17846:48:19"}]}}]},"documentation":{"id":5900,"nodeType":"StructuredDocumentation","src":"17370:312:19","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5925,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:19","nodeType":"FunctionDefinition","parameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"value","nameLocation":"17712:5:19","nodeType":"VariableDeclaration","scope":5925,"src":"17705:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5901,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:19"},"returnParameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:19","nodeType":"VariableDeclaration","scope":5925,"src":"17742:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5904,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:19"},"scope":6746,"src":"17687:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5950,"nodeType":"Block","src":"18308:150:19","statements":[{"expression":{"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5933,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"18318:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"18338:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5934,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:19","typeDescriptions":{}}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5939,"nodeType":"ExpressionStatement","src":"18318:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"18358:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"18372:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5949,"nodeType":"IfStatement","src":"18354:98:19","trueBody":{"id":5948,"nodeType":"Block","src":"18379:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"18435:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5943,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"18400:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5947,"nodeType":"RevertStatement","src":"18393:48:19"}]}}]},"documentation":{"id":5926,"nodeType":"StructuredDocumentation","src":"17917:312:19","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5951,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:19","nodeType":"FunctionDefinition","parameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"value","nameLocation":"18259:5:19","nodeType":"VariableDeclaration","scope":5951,"src":"18252:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5927,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:19"},"returnParameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:19","nodeType":"VariableDeclaration","scope":5951,"src":"18289:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5930,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:19"},"scope":6746,"src":"18234:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5976,"nodeType":"Block","src":"18855:150:19","statements":[{"expression":{"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5959,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"18865:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"18885:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5960,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:19","typeDescriptions":{}}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5965,"nodeType":"ExpressionStatement","src":"18865:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"18905:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"18919:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5975,"nodeType":"IfStatement","src":"18901:98:19","trueBody":{"id":5974,"nodeType":"Block","src":"18926:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"18982:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5969,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"18947:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5973,"nodeType":"RevertStatement","src":"18940:48:19"}]}}]},"documentation":{"id":5952,"nodeType":"StructuredDocumentation","src":"18464:312:19","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5977,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:19","nodeType":"FunctionDefinition","parameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"value","nameLocation":"18806:5:19","nodeType":"VariableDeclaration","scope":5977,"src":"18799:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5953,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:19"},"returnParameters":{"id":5958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:19","nodeType":"VariableDeclaration","scope":5977,"src":"18836:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5956,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:19"},"scope":6746,"src":"18781:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"19402:150:19","statements":[{"expression":{"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5985,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"19412:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"19432:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5986,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:19","typeDescriptions":{}}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5991,"nodeType":"ExpressionStatement","src":"19412:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"19452:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"19466:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6001,"nodeType":"IfStatement","src":"19448:98:19","trueBody":{"id":6000,"nodeType":"Block","src":"19473:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"19529:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5995,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"19494:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5999,"nodeType":"RevertStatement","src":"19487:48:19"}]}}]},"documentation":{"id":5978,"nodeType":"StructuredDocumentation","src":"19011:312:19","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:19","nodeType":"FunctionDefinition","parameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"value","nameLocation":"19353:5:19","nodeType":"VariableDeclaration","scope":6003,"src":"19346:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5979,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:19"},"returnParameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5983,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:19","nodeType":"VariableDeclaration","scope":6003,"src":"19383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5982,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:19"},"scope":6746,"src":"19328:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6028,"nodeType":"Block","src":"19949:150:19","statements":[{"expression":{"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6011,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"19959:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"19979:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6012,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:19","typeDescriptions":{}}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6017,"nodeType":"ExpressionStatement","src":"19959:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"19999:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"20013:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6027,"nodeType":"IfStatement","src":"19995:98:19","trueBody":{"id":6026,"nodeType":"Block","src":"20020:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"20076:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6021,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"20041:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6025,"nodeType":"RevertStatement","src":"20034:48:19"}]}}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"19558:312:19","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6029,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:19","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"value","nameLocation":"19900:5:19","nodeType":"VariableDeclaration","scope":6029,"src":"19893:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6005,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:19"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:19","nodeType":"VariableDeclaration","scope":6029,"src":"19930:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6008,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:19"},"scope":6746,"src":"19875:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6054,"nodeType":"Block","src":"20496:150:19","statements":[{"expression":{"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6037,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"20506:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"20526:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6038,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:19","typeDescriptions":{}}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6043,"nodeType":"ExpressionStatement","src":"20506:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"20546:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"20560:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6053,"nodeType":"IfStatement","src":"20542:98:19","trueBody":{"id":6052,"nodeType":"Block","src":"20567:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"20623:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6047,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"20588:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6051,"nodeType":"RevertStatement","src":"20581:48:19"}]}}]},"documentation":{"id":6030,"nodeType":"StructuredDocumentation","src":"20105:312:19","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6055,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:19","nodeType":"FunctionDefinition","parameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"value","nameLocation":"20447:5:19","nodeType":"VariableDeclaration","scope":6055,"src":"20440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6031,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:19"},"returnParameters":{"id":6036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6035,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:19","nodeType":"VariableDeclaration","scope":6055,"src":"20477:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6034,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:19"},"scope":6746,"src":"20422:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6080,"nodeType":"Block","src":"21043:150:19","statements":[{"expression":{"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6063,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"21053:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"21073:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6064,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:19","typeDescriptions":{}}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6069,"nodeType":"ExpressionStatement","src":"21053:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"21093:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"21107:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6079,"nodeType":"IfStatement","src":"21089:98:19","trueBody":{"id":6078,"nodeType":"Block","src":"21114:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"21170:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6073,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"21135:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6077,"nodeType":"RevertStatement","src":"21128:48:19"}]}}]},"documentation":{"id":6056,"nodeType":"StructuredDocumentation","src":"20652:312:19","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6081,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:19","nodeType":"FunctionDefinition","parameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"value","nameLocation":"20994:5:19","nodeType":"VariableDeclaration","scope":6081,"src":"20987:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6057,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:19"},"returnParameters":{"id":6062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6061,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:19","nodeType":"VariableDeclaration","scope":6081,"src":"21024:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6060,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:19"},"scope":6746,"src":"20969:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6106,"nodeType":"Block","src":"21590:150:19","statements":[{"expression":{"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6089,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"21600:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"21620:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6090,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:19","typeDescriptions":{}}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6095,"nodeType":"ExpressionStatement","src":"21600:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"21640:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"21654:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6105,"nodeType":"IfStatement","src":"21636:98:19","trueBody":{"id":6104,"nodeType":"Block","src":"21661:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"21717:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6099,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"21682:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6103,"nodeType":"RevertStatement","src":"21675:48:19"}]}}]},"documentation":{"id":6082,"nodeType":"StructuredDocumentation","src":"21199:312:19","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6107,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:19","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"value","nameLocation":"21541:5:19","nodeType":"VariableDeclaration","scope":6107,"src":"21534:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6083,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:19"},"returnParameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:19","nodeType":"VariableDeclaration","scope":6107,"src":"21571:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6086,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:19"},"scope":6746,"src":"21516:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6132,"nodeType":"Block","src":"22137:150:19","statements":[{"expression":{"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6115,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"22147:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"22167:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6116,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:19","typeDescriptions":{}}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6121,"nodeType":"ExpressionStatement","src":"22147:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"22187:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"22201:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6131,"nodeType":"IfStatement","src":"22183:98:19","trueBody":{"id":6130,"nodeType":"Block","src":"22208:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"22264:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6125,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"22229:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6129,"nodeType":"RevertStatement","src":"22222:48:19"}]}}]},"documentation":{"id":6108,"nodeType":"StructuredDocumentation","src":"21746:312:19","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6133,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:19","nodeType":"FunctionDefinition","parameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"value","nameLocation":"22088:5:19","nodeType":"VariableDeclaration","scope":6133,"src":"22081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6109,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:19"},"returnParameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:19","nodeType":"VariableDeclaration","scope":6133,"src":"22118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6112,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:19"},"scope":6746,"src":"22063:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"22684:150:19","statements":[{"expression":{"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"22694:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"22714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6142,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:19","typeDescriptions":{}}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6147,"nodeType":"ExpressionStatement","src":"22694:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"22734:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"22748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6157,"nodeType":"IfStatement","src":"22730:98:19","trueBody":{"id":6156,"nodeType":"Block","src":"22755:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"22811:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6151,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"22776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6155,"nodeType":"RevertStatement","src":"22769:48:19"}]}}]},"documentation":{"id":6134,"nodeType":"StructuredDocumentation","src":"22293:312:19","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:19","nodeType":"FunctionDefinition","parameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"value","nameLocation":"22635:5:19","nodeType":"VariableDeclaration","scope":6159,"src":"22628:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6135,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:19"},"returnParameters":{"id":6140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6139,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:19","nodeType":"VariableDeclaration","scope":6159,"src":"22665:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6138,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:19"},"scope":6746,"src":"22610:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6184,"nodeType":"Block","src":"23231:150:19","statements":[{"expression":{"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"23241:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"23261:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6168,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:19","typeDescriptions":{}}},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6173,"nodeType":"ExpressionStatement","src":"23241:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"23281:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"23295:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6183,"nodeType":"IfStatement","src":"23277:98:19","trueBody":{"id":6182,"nodeType":"Block","src":"23302:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"23358:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6177,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"23323:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6181,"nodeType":"RevertStatement","src":"23316:48:19"}]}}]},"documentation":{"id":6160,"nodeType":"StructuredDocumentation","src":"22840:312:19","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6185,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:19","nodeType":"FunctionDefinition","parameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"value","nameLocation":"23182:5:19","nodeType":"VariableDeclaration","scope":6185,"src":"23175:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6161,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:19"},"returnParameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:19","nodeType":"VariableDeclaration","scope":6185,"src":"23212:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6164,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:19"},"scope":6746,"src":"23157:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6210,"nodeType":"Block","src":"23778:150:19","statements":[{"expression":{"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"23788:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"23808:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6194,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:19","typeDescriptions":{}}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6199,"nodeType":"ExpressionStatement","src":"23788:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"23828:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"23842:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6209,"nodeType":"IfStatement","src":"23824:98:19","trueBody":{"id":6208,"nodeType":"Block","src":"23849:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"23905:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6203,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"23870:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6207,"nodeType":"RevertStatement","src":"23863:48:19"}]}}]},"documentation":{"id":6186,"nodeType":"StructuredDocumentation","src":"23387:312:19","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6211,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:19","nodeType":"FunctionDefinition","parameters":{"id":6189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6188,"mutability":"mutable","name":"value","nameLocation":"23729:5:19","nodeType":"VariableDeclaration","scope":6211,"src":"23722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6187,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:19"},"returnParameters":{"id":6192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6191,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:19","nodeType":"VariableDeclaration","scope":6211,"src":"23759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6190,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:19"},"scope":6746,"src":"23704:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6236,"nodeType":"Block","src":"24325:150:19","statements":[{"expression":{"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6219,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"24335:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"24355:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6220,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:19","typeDescriptions":{}}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6225,"nodeType":"ExpressionStatement","src":"24335:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"24375:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"24389:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6235,"nodeType":"IfStatement","src":"24371:98:19","trueBody":{"id":6234,"nodeType":"Block","src":"24396:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"24452:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6229,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"24417:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6233,"nodeType":"RevertStatement","src":"24410:48:19"}]}}]},"documentation":{"id":6212,"nodeType":"StructuredDocumentation","src":"23934:312:19","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6237,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:19","nodeType":"FunctionDefinition","parameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"value","nameLocation":"24276:5:19","nodeType":"VariableDeclaration","scope":6237,"src":"24269:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6213,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:19"},"returnParameters":{"id":6218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6217,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:19","nodeType":"VariableDeclaration","scope":6237,"src":"24306:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6216,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:19"},"scope":6746,"src":"24251:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6262,"nodeType":"Block","src":"24872:150:19","statements":[{"expression":{"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"24882:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"24902:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6246,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:19","typeDescriptions":{}}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6251,"nodeType":"ExpressionStatement","src":"24882:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"24922:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"24936:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6261,"nodeType":"IfStatement","src":"24918:98:19","trueBody":{"id":6260,"nodeType":"Block","src":"24943:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"24999:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6255,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"24964:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6259,"nodeType":"RevertStatement","src":"24957:48:19"}]}}]},"documentation":{"id":6238,"nodeType":"StructuredDocumentation","src":"24481:312:19","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6263,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:19","nodeType":"FunctionDefinition","parameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"value","nameLocation":"24823:5:19","nodeType":"VariableDeclaration","scope":6263,"src":"24816:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6239,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:19"},"returnParameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:19","nodeType":"VariableDeclaration","scope":6263,"src":"24853:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6242,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:19"},"scope":6746,"src":"24798:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6288,"nodeType":"Block","src":"25419:150:19","statements":[{"expression":{"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"25429:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"25449:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6272,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:19","typeDescriptions":{}}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6277,"nodeType":"ExpressionStatement","src":"25429:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"25469:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"25483:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6287,"nodeType":"IfStatement","src":"25465:98:19","trueBody":{"id":6286,"nodeType":"Block","src":"25490:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"25546:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6281,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"25511:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6285,"nodeType":"RevertStatement","src":"25504:48:19"}]}}]},"documentation":{"id":6264,"nodeType":"StructuredDocumentation","src":"25028:312:19","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6289,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:19","nodeType":"FunctionDefinition","parameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"value","nameLocation":"25370:5:19","nodeType":"VariableDeclaration","scope":6289,"src":"25363:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6265,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:19"},"returnParameters":{"id":6270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6269,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:19","nodeType":"VariableDeclaration","scope":6289,"src":"25400:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6268,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:19"},"scope":6746,"src":"25345:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6314,"nodeType":"Block","src":"25966:150:19","statements":[{"expression":{"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"25976:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"25996:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6298,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:19","typeDescriptions":{}}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6303,"nodeType":"ExpressionStatement","src":"25976:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"26016:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"26030:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6313,"nodeType":"IfStatement","src":"26012:98:19","trueBody":{"id":6312,"nodeType":"Block","src":"26037:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"26093:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6307,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"26058:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6311,"nodeType":"RevertStatement","src":"26051:48:19"}]}}]},"documentation":{"id":6290,"nodeType":"StructuredDocumentation","src":"25575:312:19","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6315,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:19","nodeType":"FunctionDefinition","parameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"value","nameLocation":"25917:5:19","nodeType":"VariableDeclaration","scope":6315,"src":"25910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6291,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:19"},"returnParameters":{"id":6296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6295,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:19","nodeType":"VariableDeclaration","scope":6315,"src":"25947:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6294,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:19"},"scope":6746,"src":"25892:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6340,"nodeType":"Block","src":"26513:150:19","statements":[{"expression":{"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6323,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"26523:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"26543:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6324,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:19","typeDescriptions":{}}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6329,"nodeType":"ExpressionStatement","src":"26523:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"26563:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"26577:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6339,"nodeType":"IfStatement","src":"26559:98:19","trueBody":{"id":6338,"nodeType":"Block","src":"26584:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"26640:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6333,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"26605:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6337,"nodeType":"RevertStatement","src":"26598:48:19"}]}}]},"documentation":{"id":6316,"nodeType":"StructuredDocumentation","src":"26122:312:19","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6341,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:19","nodeType":"FunctionDefinition","parameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6318,"mutability":"mutable","name":"value","nameLocation":"26464:5:19","nodeType":"VariableDeclaration","scope":6341,"src":"26457:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6317,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:19"},"returnParameters":{"id":6322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:19","nodeType":"VariableDeclaration","scope":6341,"src":"26494:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6320,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:19"},"scope":6746,"src":"26439:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6366,"nodeType":"Block","src":"27060:150:19","statements":[{"expression":{"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6349,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"27070:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"27090:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6350,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:19","typeDescriptions":{}}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6355,"nodeType":"ExpressionStatement","src":"27070:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"27110:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"27124:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6365,"nodeType":"IfStatement","src":"27106:98:19","trueBody":{"id":6364,"nodeType":"Block","src":"27131:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"27187:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6359,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"27152:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6363,"nodeType":"RevertStatement","src":"27145:48:19"}]}}]},"documentation":{"id":6342,"nodeType":"StructuredDocumentation","src":"26669:312:19","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6367,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:19","nodeType":"FunctionDefinition","parameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"value","nameLocation":"27011:5:19","nodeType":"VariableDeclaration","scope":6367,"src":"27004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6343,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:19"},"returnParameters":{"id":6348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6347,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:19","nodeType":"VariableDeclaration","scope":6367,"src":"27041:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6346,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:19"},"scope":6746,"src":"26986:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6392,"nodeType":"Block","src":"27607:150:19","statements":[{"expression":{"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"27617:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27637:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6376,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:19","typeDescriptions":{}}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6381,"nodeType":"ExpressionStatement","src":"27617:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"27657:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27671:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6391,"nodeType":"IfStatement","src":"27653:98:19","trueBody":{"id":6390,"nodeType":"Block","src":"27678:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27734:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6385,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"27699:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6389,"nodeType":"RevertStatement","src":"27692:48:19"}]}}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"27216:312:19","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6393,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:19","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"value","nameLocation":"27558:5:19","nodeType":"VariableDeclaration","scope":6393,"src":"27551:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6369,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:19"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:19","nodeType":"VariableDeclaration","scope":6393,"src":"27588:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6372,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:19"},"scope":6746,"src":"27533:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6418,"nodeType":"Block","src":"28147:148:19","statements":[{"expression":{"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6401,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"28157:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"28176:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6402,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:19","typeDescriptions":{}}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6407,"nodeType":"ExpressionStatement","src":"28157:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"28196:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"28210:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6417,"nodeType":"IfStatement","src":"28192:97:19","trueBody":{"id":6416,"nodeType":"Block","src":"28217:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"28272:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6411,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"28238:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6415,"nodeType":"RevertStatement","src":"28231:47:19"}]}}]},"documentation":{"id":6394,"nodeType":"StructuredDocumentation","src":"27763:307:19","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6419,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:19","nodeType":"FunctionDefinition","parameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"value","nameLocation":"28099:5:19","nodeType":"VariableDeclaration","scope":6419,"src":"28092:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6395,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:19"},"returnParameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:19","nodeType":"VariableDeclaration","scope":6419,"src":"28129:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6398,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:19"},"scope":6746,"src":"28075:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6444,"nodeType":"Block","src":"28685:148:19","statements":[{"expression":{"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6427,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"28695:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"28714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6428,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:19","typeDescriptions":{}}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6433,"nodeType":"ExpressionStatement","src":"28695:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"28734:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"28748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6443,"nodeType":"IfStatement","src":"28730:97:19","trueBody":{"id":6442,"nodeType":"Block","src":"28755:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"28810:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6437,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"28776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6441,"nodeType":"RevertStatement","src":"28769:47:19"}]}}]},"documentation":{"id":6420,"nodeType":"StructuredDocumentation","src":"28301:307:19","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6445,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:19","nodeType":"FunctionDefinition","parameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"value","nameLocation":"28637:5:19","nodeType":"VariableDeclaration","scope":6445,"src":"28630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6421,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:19"},"returnParameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6425,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:19","nodeType":"VariableDeclaration","scope":6445,"src":"28667:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6424,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:19"},"scope":6746,"src":"28613:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6470,"nodeType":"Block","src":"29223:148:19","statements":[{"expression":{"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6453,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"29233:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"29252:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6454,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:19","typeDescriptions":{}}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6459,"nodeType":"ExpressionStatement","src":"29233:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"29272:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"29286:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6469,"nodeType":"IfStatement","src":"29268:97:19","trueBody":{"id":6468,"nodeType":"Block","src":"29293:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"29348:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6463,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"29314:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6467,"nodeType":"RevertStatement","src":"29307:47:19"}]}}]},"documentation":{"id":6446,"nodeType":"StructuredDocumentation","src":"28839:307:19","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6471,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:19","nodeType":"FunctionDefinition","parameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"value","nameLocation":"29175:5:19","nodeType":"VariableDeclaration","scope":6471,"src":"29168:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6447,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:19"},"returnParameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:19","nodeType":"VariableDeclaration","scope":6471,"src":"29205:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6450,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:19"},"scope":6746,"src":"29151:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6496,"nodeType":"Block","src":"29761:148:19","statements":[{"expression":{"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6479,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"29771:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"29790:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6480,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:19","typeDescriptions":{}}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6485,"nodeType":"ExpressionStatement","src":"29771:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"29810:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"29824:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6495,"nodeType":"IfStatement","src":"29806:97:19","trueBody":{"id":6494,"nodeType":"Block","src":"29831:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"29886:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6489,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"29852:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6493,"nodeType":"RevertStatement","src":"29845:47:19"}]}}]},"documentation":{"id":6472,"nodeType":"StructuredDocumentation","src":"29377:307:19","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6497,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:19","nodeType":"FunctionDefinition","parameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"value","nameLocation":"29713:5:19","nodeType":"VariableDeclaration","scope":6497,"src":"29706:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6473,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:19"},"returnParameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6477,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:19","nodeType":"VariableDeclaration","scope":6497,"src":"29743:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6476,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:19"},"scope":6746,"src":"29689:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6522,"nodeType":"Block","src":"30299:148:19","statements":[{"expression":{"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6505,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"30309:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"30328:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6506,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:19","typeDescriptions":{}}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6511,"nodeType":"ExpressionStatement","src":"30309:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"30348:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6521,"nodeType":"IfStatement","src":"30344:97:19","trueBody":{"id":6520,"nodeType":"Block","src":"30369:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"30424:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6515,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"30390:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6519,"nodeType":"RevertStatement","src":"30383:47:19"}]}}]},"documentation":{"id":6498,"nodeType":"StructuredDocumentation","src":"29915:307:19","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6523,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:19","nodeType":"FunctionDefinition","parameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"value","nameLocation":"30251:5:19","nodeType":"VariableDeclaration","scope":6523,"src":"30244:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6499,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:19"},"returnParameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:19","nodeType":"VariableDeclaration","scope":6523,"src":"30281:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6502,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:19"},"scope":6746,"src":"30227:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6548,"nodeType":"Block","src":"30837:148:19","statements":[{"expression":{"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6531,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"30847:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"30866:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6532,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:19","typeDescriptions":{}}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6537,"nodeType":"ExpressionStatement","src":"30847:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"30886:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"30900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6547,"nodeType":"IfStatement","src":"30882:97:19","trueBody":{"id":6546,"nodeType":"Block","src":"30907:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"30962:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6541,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"30928:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6545,"nodeType":"RevertStatement","src":"30921:47:19"}]}}]},"documentation":{"id":6524,"nodeType":"StructuredDocumentation","src":"30453:307:19","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6549,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:19","nodeType":"FunctionDefinition","parameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"value","nameLocation":"30789:5:19","nodeType":"VariableDeclaration","scope":6549,"src":"30782:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6525,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:19"},"returnParameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:19","nodeType":"VariableDeclaration","scope":6549,"src":"30819:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6528,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:19"},"scope":6746,"src":"30765:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6574,"nodeType":"Block","src":"31375:148:19","statements":[{"expression":{"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6557,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"31385:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"31404:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6558,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:19","typeDescriptions":{}}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6563,"nodeType":"ExpressionStatement","src":"31385:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"31424:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"31438:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6573,"nodeType":"IfStatement","src":"31420:97:19","trueBody":{"id":6572,"nodeType":"Block","src":"31445:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"31500:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6567,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"31466:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6571,"nodeType":"RevertStatement","src":"31459:47:19"}]}}]},"documentation":{"id":6550,"nodeType":"StructuredDocumentation","src":"30991:307:19","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6575,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:19","nodeType":"FunctionDefinition","parameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"mutability":"mutable","name":"value","nameLocation":"31327:5:19","nodeType":"VariableDeclaration","scope":6575,"src":"31320:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6551,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:19"},"returnParameters":{"id":6556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6555,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:19","nodeType":"VariableDeclaration","scope":6575,"src":"31357:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6554,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:19"},"scope":6746,"src":"31303:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6600,"nodeType":"Block","src":"31913:148:19","statements":[{"expression":{"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6583,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"31923:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"31942:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6584,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:19","typeDescriptions":{}}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6589,"nodeType":"ExpressionStatement","src":"31923:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"31962:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"31976:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6599,"nodeType":"IfStatement","src":"31958:97:19","trueBody":{"id":6598,"nodeType":"Block","src":"31983:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"32038:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6593,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"32004:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6597,"nodeType":"RevertStatement","src":"31997:47:19"}]}}]},"documentation":{"id":6576,"nodeType":"StructuredDocumentation","src":"31529:307:19","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6601,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:19","nodeType":"FunctionDefinition","parameters":{"id":6579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6578,"mutability":"mutable","name":"value","nameLocation":"31865:5:19","nodeType":"VariableDeclaration","scope":6601,"src":"31858:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6577,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:19"},"returnParameters":{"id":6582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6581,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:19","nodeType":"VariableDeclaration","scope":6601,"src":"31895:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6580,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:19"},"scope":6746,"src":"31841:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6626,"nodeType":"Block","src":"32451:148:19","statements":[{"expression":{"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6609,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"32461:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"32480:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6610,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:19","typeDescriptions":{}}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6615,"nodeType":"ExpressionStatement","src":"32461:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"32500:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"32514:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6625,"nodeType":"IfStatement","src":"32496:97:19","trueBody":{"id":6624,"nodeType":"Block","src":"32521:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"32576:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6619,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"32542:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6623,"nodeType":"RevertStatement","src":"32535:47:19"}]}}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"32067:307:19","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6627,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:19","nodeType":"FunctionDefinition","parameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"value","nameLocation":"32403:5:19","nodeType":"VariableDeclaration","scope":6627,"src":"32396:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6603,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:19"},"returnParameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:19","nodeType":"VariableDeclaration","scope":6627,"src":"32433:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6606,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:19"},"scope":6746,"src":"32379:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6652,"nodeType":"Block","src":"32989:148:19","statements":[{"expression":{"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6633,"src":"32999:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"33018:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6636,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:19","typeDescriptions":{}}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6641,"nodeType":"ExpressionStatement","src":"32999:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6642,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6633,"src":"33038:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"33052:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6651,"nodeType":"IfStatement","src":"33034:97:19","trueBody":{"id":6650,"nodeType":"Block","src":"33059:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"33114:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6645,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"33080:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6649,"nodeType":"RevertStatement","src":"33073:47:19"}]}}]},"documentation":{"id":6628,"nodeType":"StructuredDocumentation","src":"32605:307:19","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6653,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:19","nodeType":"FunctionDefinition","parameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"value","nameLocation":"32941:5:19","nodeType":"VariableDeclaration","scope":6653,"src":"32934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6629,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:19"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6633,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:19","nodeType":"VariableDeclaration","scope":6653,"src":"32971:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6632,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:19"},"scope":6746,"src":"32917:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6678,"nodeType":"Block","src":"33527:148:19","statements":[{"expression":{"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6661,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"33537:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"33556:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6662,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:19","typeDescriptions":{}}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6667,"nodeType":"ExpressionStatement","src":"33537:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6668,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"33576:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"33590:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6677,"nodeType":"IfStatement","src":"33572:97:19","trueBody":{"id":6676,"nodeType":"Block","src":"33597:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"33652:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6671,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"33618:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6675,"nodeType":"RevertStatement","src":"33611:47:19"}]}}]},"documentation":{"id":6654,"nodeType":"StructuredDocumentation","src":"33143:307:19","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6679,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:19","nodeType":"FunctionDefinition","parameters":{"id":6657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6656,"mutability":"mutable","name":"value","nameLocation":"33479:5:19","nodeType":"VariableDeclaration","scope":6679,"src":"33472:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6655,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:19"},"returnParameters":{"id":6660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6659,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:19","nodeType":"VariableDeclaration","scope":6679,"src":"33509:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6658,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:19"},"scope":6746,"src":"33455:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6704,"nodeType":"Block","src":"34058:146:19","statements":[{"expression":{"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"34068:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"34086:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6688,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:19","typeDescriptions":{}}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6693,"nodeType":"ExpressionStatement","src":"34068:24:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"34106:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"34120:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6703,"nodeType":"IfStatement","src":"34102:96:19","trueBody":{"id":6702,"nodeType":"Block","src":"34127:71:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"34181:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6697,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"34148:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6701,"nodeType":"RevertStatement","src":"34141:46:19"}]}}]},"documentation":{"id":6680,"nodeType":"StructuredDocumentation","src":"33681:302:19","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6705,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:19","nodeType":"FunctionDefinition","parameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"value","nameLocation":"34011:5:19","nodeType":"VariableDeclaration","scope":6705,"src":"34004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6681,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:19"},"returnParameters":{"id":6686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6685,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:19","nodeType":"VariableDeclaration","scope":6705,"src":"34041:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6684,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:19"},"scope":6746,"src":"33988:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6734,"nodeType":"Block","src":"34444:250:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"34557:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6717,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:19","memberName":"max","nodeType":"MemberAccess","src":"34573:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6714,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:19","typeDescriptions":{}}},"id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6728,"nodeType":"IfStatement","src":"34553:105:19","trueBody":{"id":6727,"nodeType":"Block","src":"34592:66:19","statements":[{"errorCall":{"arguments":[{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"34641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6723,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"34613:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6726,"nodeType":"RevertStatement","src":"34606:41:19"}]}},{"expression":{"arguments":[{"id":6731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"34681:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6729,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:19","typeDescriptions":{}}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6712,"id":6733,"nodeType":"Return","src":"34667:20:19"}]},"documentation":{"id":6706,"nodeType":"StructuredDocumentation","src":"34210:165:19","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6735,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:19","nodeType":"FunctionDefinition","parameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"value","nameLocation":"34406:5:19","nodeType":"VariableDeclaration","scope":6735,"src":"34398:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:19"},"returnParameters":{"id":6712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6735,"src":"34436:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6710,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:19"},"scope":6746,"src":"34380:314:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6744,"nodeType":"Block","src":"34853:87:19","statements":[{"AST":{"nativeSrc":"34888:46:19","nodeType":"YulBlock","src":"34888:46:19","statements":[{"nativeSrc":"34902:22:19","nodeType":"YulAssignment","src":"34902:22:19","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:19","nodeType":"YulIdentifier","src":"34921:1:19"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:19","nodeType":"YulIdentifier","src":"34914:6:19"},"nativeSrc":"34914:9:19","nodeType":"YulFunctionCall","src":"34914:9:19"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:19","nodeType":"YulIdentifier","src":"34907:6:19"},"nativeSrc":"34907:17:19","nodeType":"YulFunctionCall","src":"34907:17:19"},"variableNames":[{"name":"u","nativeSrc":"34902:1:19","nodeType":"YulIdentifier","src":"34902:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6738,"isOffset":false,"isSlot":false,"src":"34921:1:19","valueSize":1},{"declaration":6741,"isOffset":false,"isSlot":false,"src":"34902:1:19","valueSize":1}],"flags":["memory-safe"],"id":6743,"nodeType":"InlineAssembly","src":"34863:71:19"}]},"documentation":{"id":6736,"nodeType":"StructuredDocumentation","src":"34700:90:19","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6745,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:19","nodeType":"FunctionDefinition","parameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"b","nameLocation":"34816:1:19","nodeType":"VariableDeclaration","scope":6745,"src":"34811:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6737,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:19"},"returnParameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"u","nameLocation":"34850:1:19","nodeType":"VariableDeclaration","scope":6745,"src":"34842:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6740,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:19"},"scope":6746,"src":"34795:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6747,"src":"769:34173:19","usedErrors":[4991,4996,5003,5008],"usedEvents":[]}],"src":"192:34751:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6746],"SignedMath":[6890]},"id":6891,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6748,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6891,"sourceUnit":6747,"src":"135:40:20","symbolAliases":[{"foreign":{"id":6749,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"143:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6751,"nodeType":"StructuredDocumentation","src":"177:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6890,"linearizedBaseContracts":[6890],"name":"SignedMath","nameLocation":"266:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":6780,"nodeType":"Block","src":"746:215:20","statements":[{"id":6779,"nodeType":"UncheckedBlock","src":"756:199:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"894:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6764,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"900:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6765,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"904:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6772,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"932:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6770,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"916:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6746_$","typeString":"type(library SafeCast)"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"916:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6768,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:20","typeDescriptions":{}}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6762,"id":6778,"nodeType":"Return","src":"887:57:20"}]}]},"documentation":{"id":6752,"nodeType":"StructuredDocumentation","src":"283:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6781,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:20","nodeType":"FunctionDefinition","parameters":{"id":6759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"condition","nameLocation":"684:9:20","nodeType":"VariableDeclaration","scope":6781,"src":"679:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6753,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6756,"mutability":"mutable","name":"a","nameLocation":"702:1:20","nodeType":"VariableDeclaration","scope":6781,"src":"695:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6755,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6758,"mutability":"mutable","name":"b","nameLocation":"712:1:20","nodeType":"VariableDeclaration","scope":6781,"src":"705:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6757,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:20"},"returnParameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6781,"src":"738:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6760,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:20"},"scope":6890,"src":"662:299:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6799,"nodeType":"Block","src":"1102:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"1127:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"1131:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"1134:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"1137:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6791,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"1119:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6790,"id":6798,"nodeType":"Return","src":"1112:27:20"}]},"documentation":{"id":6782,"nodeType":"StructuredDocumentation","src":"967:66:20","text":" @dev Returns the largest of two signed numbers."},"id":6800,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:20","nodeType":"FunctionDefinition","parameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6784,"mutability":"mutable","name":"a","nameLocation":"1058:1:20","nodeType":"VariableDeclaration","scope":6800,"src":"1051:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6783,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6786,"mutability":"mutable","name":"b","nameLocation":"1068:1:20","nodeType":"VariableDeclaration","scope":6800,"src":"1061:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6785,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:20"},"returnParameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6800,"src":"1094:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6788,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:20"},"scope":6890,"src":"1038:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6818,"nodeType":"Block","src":"1288:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"1313:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6812,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"1317:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"1320:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"1323:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6810,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"1305:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6809,"id":6817,"nodeType":"Return","src":"1298:27:20"}]},"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"1152:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":6819,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:20","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"a","nameLocation":"1244:1:20","nodeType":"VariableDeclaration","scope":6819,"src":"1237:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6802,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6805,"mutability":"mutable","name":"b","nameLocation":"1254:1:20","nodeType":"VariableDeclaration","scope":6819,"src":"1247:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6804,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:20"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6819,"src":"1280:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6807,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:20"},"scope":6890,"src":"1224:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6862,"nodeType":"Block","src":"1537:162:20","statements":[{"assignments":[6830],"declarations":[{"constant":false,"id":6830,"mutability":"mutable","name":"x","nameLocation":"1606:1:20","nodeType":"VariableDeclaration","scope":6862,"src":"1599:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6829,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6843,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"1611:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6832,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"1615:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"1622:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6836,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"1626:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6844,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6849,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"1671:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{}}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6845,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:20","typeDescriptions":{}}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"1685:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"1689:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6828,"id":6861,"nodeType":"Return","src":"1644:48:20"}]},"documentation":{"id":6820,"nodeType":"StructuredDocumentation","src":"1338:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6863,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:20","nodeType":"FunctionDefinition","parameters":{"id":6825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"mutability":"mutable","name":"a","nameLocation":"1493:1:20","nodeType":"VariableDeclaration","scope":6863,"src":"1486:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6821,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6824,"mutability":"mutable","name":"b","nameLocation":"1503:1:20","nodeType":"VariableDeclaration","scope":6863,"src":"1496:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6823,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:20"},"returnParameters":{"id":6828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6863,"src":"1529:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6826,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:20"},"scope":6890,"src":"1469:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6888,"nodeType":"Block","src":"1843:767:20","statements":[{"id":6887,"nodeType":"UncheckedBlock","src":"1853:751:20","statements":[{"assignments":[6872],"declarations":[{"constant":false,"id":6872,"mutability":"mutable","name":"mask","nameLocation":"2424:4:20","nodeType":"VariableDeclaration","scope":6887,"src":"2417:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6871,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6876,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6873,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"2431:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6879,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"2576:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6880,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"2580:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6883,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"2588:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6877,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:20","typeDescriptions":{}}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6870,"id":6886,"nodeType":"Return","src":"2560:33:20"}]}]},"documentation":{"id":6864,"nodeType":"StructuredDocumentation","src":"1705:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6889,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:20","nodeType":"FunctionDefinition","parameters":{"id":6867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6866,"mutability":"mutable","name":"n","nameLocation":"1808:1:20","nodeType":"VariableDeclaration","scope":6889,"src":"1801:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6865,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:20"},"returnParameters":{"id":6870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6889,"src":"1834:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:20"},"scope":6890,"src":"1788:822:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6891,"src":"258:2354:20","usedErrors":[],"usedEvents":[]}],"src":"109:2504:20"},"id":20},"contracts/PayMaster.sol":{"ast":{"absolutePath":"contracts/PayMaster.sol","exportedSymbols":{"Context":[1472],"IAggregator":[837],"IEntryPoint":[1022],"INonceManager":[1041],"IPaymaster":[1078],"ISenderCreator":[1097],"IStakeManager":[1201],"Ownable":[1442],"PackedUserOperation":[1223],"Paymaster":[7097],"UserOperationLib":[786],"calldataKeccak":[422],"min":[440]},"id":7098,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6892,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:21"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6893,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7098,"sourceUnit":1443,"src":"60:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","file":"@account-abstraction/contracts/interfaces/IPaymaster.sol","id":6894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7098,"sourceUnit":1079,"src":"114:66:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","id":6895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7098,"sourceUnit":1023,"src":"182:67:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/UserOperationLib.sol","file":"@account-abstraction/contracts/core/UserOperationLib.sol","id":6896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7098,"sourceUnit":787,"src":"251:66:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6898,"name":"IPaymaster","nameLocations":["484:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":1078,"src":"484:10:21"},"id":6899,"nodeType":"InheritanceSpecifier","src":"484:10:21"},{"baseName":{"id":6900,"name":"Ownable","nameLocations":["496:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"496:7:21"},"id":6901,"nodeType":"InheritanceSpecifier","src":"496:7:21"}],"canonicalName":"Paymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":6897,"nodeType":"StructuredDocumentation","src":"327:133:21","text":" @title Sponsored Paymaster\n @notice This contract pays gas fees on behalf of users using its own ERC20 token balance."},"fullyImplemented":true,"id":7097,"linearizedBaseContracts":[7097,1442,1472,1078],"name":"Paymaster","nameLocation":"471:9:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":6904,"mutability":"immutable","name":"entryPoint","nameLocation":"540:10:21","nodeType":"VariableDeclaration","scope":7097,"src":"511:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},"typeName":{"id":6903,"nodeType":"UserDefinedTypeName","pathNode":{"id":6902,"name":"IEntryPoint","nameLocations":["511:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":1022,"src":"511:11:21"},"referencedDeclaration":1022,"src":"511:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"visibility":"public"},{"constant":false,"functionSelector":"f68016b7","id":6906,"mutability":"mutable","name":"gasLimit","nameLocation":"572:8:21","nodeType":"VariableDeclaration","scope":7097,"src":"557:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"d45de942e068e55ec4e953f51c3a40ecc3195b619702f4cfb0531a7a6b955ff4","id":6914,"name":"PaymasterSetup","nameLocation":"595:14:21","nodeType":"EventDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"indexed":true,"mutability":"mutable","name":"entryPoint","nameLocation":"626:10:21","nodeType":"VariableDeclaration","scope":6914,"src":"610:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6907,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6910,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"654:5:21","nodeType":"VariableDeclaration","scope":6914,"src":"638:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6909,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6912,"indexed":false,"mutability":"mutable","name":"gasLimit","nameLocation":"669:8:21","nodeType":"VariableDeclaration","scope":6914,"src":"661:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6911,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"609:69:21"},"src":"589:90:21"},{"anonymous":false,"eventSelector":"65eb9e4e31cbc02dd2f7edd35f1e684132f20496511b7228c15163afc04dc1e4","id":6920,"name":"GasPayment","nameLocation":"691:10:21","nodeType":"EventDefinition","parameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6916,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"718:4:21","nodeType":"VariableDeclaration","scope":6920,"src":"702:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6915,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6918,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"732:6:21","nodeType":"VariableDeclaration","scope":6920,"src":"724:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6917,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:38:21"},"src":"685:55:21"},{"body":{"id":6961,"nodeType":"Block","src":"846:230:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6933,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"875:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"898:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"890:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6934,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:21","typeDescriptions":{}}},"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"890:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"875:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420456e747279506f696e74","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"902:20:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ca51d52894fd00ad066b7629f2c9a8945fcfd6b1d808122ccb17c3bb99c5b7d","typeString":"literal_string \"Invalid EntryPoint\""},"value":"Invalid EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ca51d52894fd00ad066b7629f2c9a8945fcfd6b1d808122ccb17c3bb99c5b7d","typeString":"literal_string \"Invalid EntryPoint\""}],"id":6932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"867:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"867:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6941,"nodeType":"ExpressionStatement","src":"867:56:21"},{"expression":{"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6942,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"934:10:21","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6944,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"959:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6943,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"947:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$1022_$","typeString":"type(contract IEntryPoint)"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"947:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"src":"934:37:21","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"id":6947,"nodeType":"ExpressionStatement","src":"934:37:21"},{"expression":{"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6948,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"982:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6949,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"993:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"982:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6951,"nodeType":"ExpressionStatement","src":"982:20:21"},{"eventCall":{"arguments":[{"id":6953,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"1033:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1054:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1046:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6954,"name":"address","nodeType":"ElementaryTypeName","src":"1046:7:21","typeDescriptions":{}}},"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1046:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6958,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"1058:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6952,"name":"PaymasterSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"1018:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1018:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6960,"nodeType":"EmitStatement","src":"1013:55:21"}]},"id":6962,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6929,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"831:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6930,"kind":"baseConstructorSpecifier","modifierName":{"id":6928,"name":"Ownable","nameLocations":["823:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"823:7:21"},"nodeType":"ModifierInvocation","src":"823:21:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6922,"mutability":"mutable","name":"_entryPoint","nameLocation":"768:11:21","nodeType":"VariableDeclaration","scope":6962,"src":"760:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6921,"name":"address","nodeType":"ElementaryTypeName","src":"760:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6924,"mutability":"mutable","name":"_gasLimit","nameLocation":"789:9:21","nodeType":"VariableDeclaration","scope":6962,"src":"781:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6923,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6926,"mutability":"mutable","name":"initialOwner","nameLocation":"809:12:21","nodeType":"VariableDeclaration","scope":6962,"src":"801:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6925,"name":"address","nodeType":"ElementaryTypeName","src":"801:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"759:63:21"},"returnParameters":{"id":6931,"nodeType":"ParameterList","parameters":[],"src":"846:0:21"},"scope":7097,"src":"748:328:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1064],"body":{"id":7013,"nodeType":"Block","src":"1503:513:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1522:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1526:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1522:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6983,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"1544:10:21","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}],"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1536:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6981,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:21","typeDescriptions":{}}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1522:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a65642063616c6c6572","id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1557:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_64b1bc42466b5f8fdb461f14c13404ae0d0275ba3fcdcc68554699795fc89d16","typeString":"literal_string \"Unauthorized caller\""},"value":"Unauthorized caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64b1bc42466b5f8fdb461f14c13404ae0d0275ba3fcdcc68554699795fc89d16","typeString":"literal_string \"Unauthorized caller\""}],"id":6978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1514:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1514:65:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6988,"nodeType":"ExpressionStatement","src":"1514:65:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6989,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"1678:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1685:8:21","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"1678:15:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1694:6:21","memberName":"length","nodeType":"MemberAccess","src":"1678:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1704:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1678:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6999,"nodeType":"IfStatement","src":"1674:123:21","trueBody":{"id":6998,"nodeType":"Block","src":"1707:90:21","statements":[{"expression":{"components":[{"hexValue":"","id":6994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1730:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"31","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1734:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":6996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1729:7:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$","typeString":"tuple(literal_string \"\",int_const 1)"}},"functionReturnParameters":6977,"id":6997,"nodeType":"Return","src":"1722:14:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7000,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"1883:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7001,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"1901:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7008,"nodeType":"IfStatement","src":"1879:73:21","trueBody":{"id":7007,"nodeType":"Block","src":"1911:41:21","statements":[{"expression":{"components":[{"hexValue":"","id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1934:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"31","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1938:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":7005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1933:7:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$","typeString":"tuple(literal_string \"\",int_const 1)"}},"functionReturnParameters":6977,"id":7006,"nodeType":"Return","src":"1926:14:21"}]}},{"expression":{"components":[{"hexValue":"","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1976:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"30","id":7010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1980:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1975:7:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$","typeString":"tuple(literal_string \"\",int_const 0)"}},"functionReturnParameters":6977,"id":7012,"nodeType":"Return","src":"1968:14:21"}]},"documentation":{"id":6963,"nodeType":"StructuredDocumentation","src":"1084:181:21","text":" @notice Validates whether this paymaster will sponsor the given UserOperation.\n @dev This version simply checks if gas required is within allowed limits."},"functionSelector":"52b7512c","id":7014,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1282:23:21","nodeType":"FunctionDefinition","overrides":{"id":6972,"nodeType":"OverrideSpecifier","overrides":[],"src":"1439:8:21"},"parameters":{"id":6971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"userOp","nameLocation":"1345:6:21","nodeType":"VariableDeclaration","scope":7014,"src":"1316:35:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6965,"nodeType":"UserDefinedTypeName","pathNode":{"id":6964,"name":"PackedUserOperation","nameLocations":["1316:19:21"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"1316:19:21"},"referencedDeclaration":1223,"src":"1316:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":6968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7014,"src":"1362:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1362:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6970,"mutability":"mutable","name":"requiredPreFund","nameLocation":"1402:15:21","nodeType":"VariableDeclaration","scope":7014,"src":"1394:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1394:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1305:119:21"},"returnParameters":{"id":6977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6974,"mutability":"mutable","name":"context","nameLocation":"1470:7:21","nodeType":"VariableDeclaration","scope":7014,"src":"1457:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6973,"name":"bytes","nodeType":"ElementaryTypeName","src":"1457:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6976,"mutability":"mutable","name":"validationData","nameLocation":"1487:14:21","nodeType":"VariableDeclaration","scope":7014,"src":"1479:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1456:46:21"},"scope":7097,"src":"1273:743:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1077],"body":{"id":7074,"nodeType":"Block","src":"2334:393:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2353:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2353:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7033,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"2375:10:21","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}],"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2367:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7031,"name":"address","nodeType":"ElementaryTypeName","src":"2367:7:21","typeDescriptions":{}}},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2353:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920456e747279506f696e742063616e2063616c6c20706f73744f70","id":7036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2388:33:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ad3a91c3da3200577dee9e4c52a7d63d89388db4fceb16d097a3d2aac5fa4ca","typeString":"literal_string \"Only EntryPoint can call postOp\""},"value":"Only EntryPoint can call postOp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ad3a91c3da3200577dee9e4c52a7d63d89388db4fceb16d097a3d2aac5fa4ca","typeString":"literal_string \"Only EntryPoint can call postOp\""}],"id":7028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2345:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:77:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7038,"nodeType":"ExpressionStatement","src":"2345:77:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7039,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"2439:4:21","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7040,"name":"PostOpMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2447:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$1049_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":7041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2458:11:21","memberName":"opSucceeded","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"2447:22:21","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"}},"src":"2439:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7043,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"2473:4:21","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7044,"name":"PostOpMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2481:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$1049_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2492:10:21","memberName":"opReverted","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"2481:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"}},"src":"2473:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2439:63:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7067,"nodeType":"IfStatement","src":"2435:230:21","trueBody":{"id":7066,"nodeType":"Block","src":"2504:161:21","statements":[{"assignments":[7049,null],"declarations":[{"constant":false,"id":7049,"mutability":"mutable","name":"success","nameLocation":"2525:7:21","nodeType":"VariableDeclaration","scope":7066,"src":"2520:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7048,"name":"bool","nodeType":"ElementaryTypeName","src":"2520:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7060,"initialValue":{"arguments":[{"hexValue":"","id":7058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2585:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":7052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2546:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2550:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2546:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2538:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7050,"name":"address","nodeType":"ElementaryTypeName","src":"2538:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2558:4:21","memberName":"call","nodeType":"MemberAccess","src":"2538:24:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7056,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"2570:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2538:46:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2519:69:21"},{"expression":{"arguments":[{"id":7062,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"2611:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e617469766520746f6b656e207472616e73666572206661696c6564","id":7063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2620:30:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_31648a6ab03d74294f8bf4f36f0fc2ed8a43f78a0a4a6c7190625150250cdbb4","typeString":"literal_string \"Native token transfer failed\""},"value":"Native token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_31648a6ab03d74294f8bf4f36f0fc2ed8a43f78a0a4a6c7190625150250cdbb4","typeString":"literal_string \"Native token transfer failed\""}],"id":7061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2603:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2603:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7065,"nodeType":"ExpressionStatement","src":"2603:48:21"}]}},{"eventCall":{"arguments":[{"expression":{"id":7069,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2693:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2697:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2693:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7071,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"2705:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7068,"name":"GasPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"2682:10:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7073,"nodeType":"EmitStatement","src":"2677:42:21"}]},"documentation":{"id":7015,"nodeType":"StructuredDocumentation","src":"2030:116:21","text":" @notice Pays the gas fee after the operation completes.\n @dev Called only by EntryPoint."},"functionSelector":"7c627b21","id":7075,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"2161:6:21","nodeType":"FunctionDefinition","overrides":{"id":7026,"nodeType":"OverrideSpecifier","overrides":[],"src":"2325:8:21"},"parameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"mode","nameLocation":"2189:4:21","nodeType":"VariableDeclaration","scope":7075,"src":"2178:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":7017,"nodeType":"UserDefinedTypeName","pathNode":{"id":7016,"name":"PostOpMode","nameLocations":["2178:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":1049,"src":"2178:10:21"},"referencedDeclaration":1049,"src":"2178:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1049","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":7020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7075,"src":"2204:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7019,"name":"bytes","nodeType":"ElementaryTypeName","src":"2204:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7022,"mutability":"mutable","name":"actualGasCost","nameLocation":"2250:13:21","nodeType":"VariableDeclaration","scope":7075,"src":"2242:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2242:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7075,"src":"2273:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2167:148:21"},"returnParameters":{"id":7027,"nodeType":"ParameterList","parameters":[],"src":"2334:0:21"},"scope":7097,"src":"2152:575:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7087,"nodeType":"Block","src":"2886:41:21","statements":[{"expression":{"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7083,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"2897:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7084,"name":"newGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"2908:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2897:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7086,"nodeType":"ExpressionStatement","src":"2897:22:21"}]},"documentation":{"id":7076,"nodeType":"StructuredDocumentation","src":"2735:84:21","text":" @notice Updates the gas limit allowed for sponsored operations."},"functionSelector":"ee7d72b4","id":7088,"implemented":true,"kind":"function","modifiers":[{"id":7081,"kind":"modifierInvocation","modifierName":{"id":7080,"name":"onlyOwner","nameLocations":["2876:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"2876:9:21"},"nodeType":"ModifierInvocation","src":"2876:9:21"}],"name":"setGasLimit","nameLocation":"2834:11:21","nodeType":"FunctionDefinition","parameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"newGasLimit","nameLocation":"2854:11:21","nodeType":"VariableDeclaration","scope":7088,"src":"2846:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2845:21:21"},"returnParameters":{"id":7082,"nodeType":"ParameterList","parameters":[],"src":"2886:0:21"},"scope":7097,"src":"2825:102:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7091,"nodeType":"Block","src":"2962:2:21","statements":[]},"id":7092,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7089,"nodeType":"ParameterList","parameters":[],"src":"2942:2:21"},"returnParameters":{"id":7090,"nodeType":"ParameterList","parameters":[],"src":"2962:0:21"},"scope":7097,"src":"2935:29:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7095,"nodeType":"Block","src":"2998:2:21","statements":[]},"id":7096,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7093,"nodeType":"ParameterList","parameters":[],"src":"2978:2:21"},"returnParameters":{"id":7094,"nodeType":"ParameterList","parameters":[],"src":"2998:0:21"},"scope":7097,"src":"2970:30:21","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":7098,"src":"462:2541:21","usedErrors":[1308,1313],"usedEvents":[1319,6914,6920]}],"src":"33:2970:21"},"id":21},"contracts/SmartAccount.sol":{"ast":{"absolutePath":"contracts/SmartAccount.sol","exportedSymbols":{"BaseAccount":[261],"ECDSA":[3274],"Exec":[1294],"IAccount":[803],"IAggregator":[837],"IEntryPoint":[1022],"INonceManager":[1041],"ISenderCreator":[1097],"IStakeManager":[1201],"MessageHashUtils":[3360],"PackedUserOperation":[1223],"SmartAccount":[7233],"Strings":[2926],"UserOperationLib":[786],"calldataKeccak":[422],"min":[440]},"id":7234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7099,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:22"},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","id":7100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7234,"sourceUnit":1023,"src":"61:67:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/BaseAccount.sol","file":"@account-abstraction/contracts/core/BaseAccount.sol","id":7101,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7234,"sourceUnit":262,"src":"130:61:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7234,"sourceUnit":3275,"src":"193:62:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":7103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7234,"sourceUnit":3361,"src":"257:73:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/UserOperationLib.sol","file":"@account-abstraction/contracts/core/UserOperationLib.sol","id":7104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7234,"sourceUnit":787,"src":"332:66:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7105,"name":"BaseAccount","nameLocations":["427:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":261,"src":"427:11:22"},"id":7106,"nodeType":"InheritanceSpecifier","src":"427:11:22"}],"canonicalName":"SmartAccount","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7233,"linearizedBaseContracts":[7233,261,803],"name":"SmartAccount","nameLocation":"411:12:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7109,"libraryName":{"id":7107,"name":"ECDSA","nameLocations":["452:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":3274,"src":"452:5:22"},"nodeType":"UsingForDirective","src":"446:24:22","typeName":{"id":7108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"462:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":7112,"libraryName":{"id":7110,"name":"MessageHashUtils","nameLocations":["482:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"482:16:22"},"nodeType":"UsingForDirective","src":"476:35:22","typeName":{"id":7111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"503:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"id":7115,"mutability":"immutable","name":"_entryPoint","nameLocation":"549:11:22","nodeType":"VariableDeclaration","scope":7233,"src":"519:41:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},"typeName":{"id":7114,"nodeType":"UserDefinedTypeName","pathNode":{"id":7113,"name":"IEntryPoint","nameLocations":["519:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1022,"src":"519:11:22"},"referencedDeclaration":1022,"src":"519:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"visibility":"private"},{"constant":false,"functionSelector":"8da5cb5b","id":7117,"mutability":"mutable","name":"owner","nameLocation":"584:5:22","nodeType":"VariableDeclaration","scope":7233,"src":"569:20:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7116,"name":"address","nodeType":"ElementaryTypeName","src":"569:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":7133,"nodeType":"Block","src":"651:69:22","statements":[{"expression":{"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7125,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"662:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7126,"name":"entryPoint_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"676:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"src":"662:25:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"id":7128,"nodeType":"ExpressionStatement","src":"662:25:22"},{"expression":{"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7129,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"698:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7130,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"706:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"698:14:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7132,"nodeType":"ExpressionStatement","src":"698:14:22"}]},"id":7134,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"entryPoint_","nameLocation":"622:11:22","nodeType":"VariableDeclaration","scope":7134,"src":"610:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},"typeName":{"id":7119,"nodeType":"UserDefinedTypeName","pathNode":{"id":7118,"name":"IEntryPoint","nameLocations":["610:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1022,"src":"610:11:22"},"referencedDeclaration":1022,"src":"610:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":7122,"mutability":"mutable","name":"_owner","nameLocation":"643:6:22","nodeType":"VariableDeclaration","scope":7134,"src":"635:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7121,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:41:22"},"returnParameters":{"id":7124,"nodeType":"ParameterList","parameters":[],"src":"651:0:22"},"scope":7233,"src":"598:122:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[49],"body":{"id":7143,"nodeType":"Block","src":"793:37:22","statements":[{"expression":{"id":7141,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"811:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"functionReturnParameters":7140,"id":7142,"nodeType":"Return","src":"804:18:22"}]},"functionSelector":"b0d691fe","id":7144,"implemented":true,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"737:10:22","nodeType":"FunctionDefinition","overrides":{"id":7136,"nodeType":"OverrideSpecifier","overrides":[],"src":"762:8:22"},"parameters":{"id":7135,"nodeType":"ParameterList","parameters":[],"src":"747:2:22"},"returnParameters":{"id":7140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7144,"src":"780:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},"typeName":{"id":7138,"nodeType":"UserDefinedTypeName","pathNode":{"id":7137,"name":"IEntryPoint","nameLocations":["780:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1022,"src":"780:11:22"},"referencedDeclaration":1022,"src":"780:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"779:13:22"},"scope":7233,"src":"728:102:22","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[225],"body":{"id":7174,"nodeType":"Block","src":"1004:228:22","statements":[{"assignments":[7156],"declarations":[{"constant":false,"id":7156,"mutability":"mutable","name":"hash","nameLocation":"1023:4:22","nodeType":"VariableDeclaration","scope":7174,"src":"1015:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7160,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7157,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"1030:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1041:22:22","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":3289,"src":"1030:33:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1030:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1015:50:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7163,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"1093:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1100:9:22","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":1222,"src":"1093:16:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7161,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"1080:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1085:7:22","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3030,"src":"1080:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1080:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7166,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"1114:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1080:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7171,"nodeType":"IfStatement","src":"1076:111:22","trueBody":{"id":7170,"nodeType":"Block","src":"1121:66:22","statements":[{"expression":{"hexValue":"31","id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1143:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":7154,"id":7169,"nodeType":"Return","src":"1136:8:22"}]}},{"expression":{"hexValue":"30","id":7172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7154,"id":7173,"nodeType":"Return","src":"1197:8:22"}]},"id":7175,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"847:18:22","nodeType":"FunctionDefinition","overrides":{"id":7151,"nodeType":"OverrideSpecifier","overrides":[],"src":"962:8:22"},"parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"mutability":"mutable","name":"userOp","nameLocation":"905:6:22","nodeType":"VariableDeclaration","scope":7175,"src":"876:35:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":7146,"nodeType":"UserDefinedTypeName","pathNode":{"id":7145,"name":"PackedUserOperation","nameLocations":["876:19:22"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"876:19:22"},"referencedDeclaration":1223,"src":"876:19:22","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":7149,"mutability":"mutable","name":"userOpHash","nameLocation":"930:10:22","nodeType":"VariableDeclaration","scope":7175,"src":"922:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"865:82:22"},"returnParameters":{"id":7154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7153,"mutability":"mutable","name":"validationData","nameLocation":"988:14:22","nodeType":"VariableDeclaration","scope":7175,"src":"980:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7152,"name":"uint256","nodeType":"ElementaryTypeName","src":"980:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"979:24:22"},"scope":7233,"src":"838:394:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7192,"nodeType":"Block","src":"1335:84:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7182,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"1354:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7183,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"1363:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1370:5:22","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"1363:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1354:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206e6f6e6365","id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1377:15:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568","typeString":"literal_string \"Invalid nonce\""},"value":"Invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568","typeString":"literal_string \"Invalid nonce\""}],"id":7181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1346:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1346:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7188,"nodeType":"ExpressionStatement","src":"1346:47:22"},{"expression":{"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1404:7:22","subExpression":{"id":7189,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"1404:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7191,"nodeType":"ExpressionStatement","src":"1404:7:22"}]},"id":7193,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAndUpdateNonce","nameLocation":"1249:23:22","nodeType":"FunctionDefinition","parameters":{"id":7179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7178,"mutability":"mutable","name":"userOp","nameLocation":"1312:6:22","nodeType":"VariableDeclaration","scope":7193,"src":"1283:35:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":7177,"nodeType":"UserDefinedTypeName","pathNode":{"id":7176,"name":"PackedUserOperation","nameLocations":["1283:19:22"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"1283:19:22"},"referencedDeclaration":1223,"src":"1283:19:22","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1223_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1272:53:22"},"returnParameters":{"id":7180,"nodeType":"ParameterList","parameters":[],"src":"1335:0:22"},"scope":7233,"src":"1240:179:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"affed0e0","id":7195,"mutability":"mutable","name":"nonce","nameLocation":"1442:5:22","nodeType":"VariableDeclaration","scope":7233,"src":"1427:20:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[83],"body":{"id":7227,"nodeType":"Block","src":"1575:167:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7206,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1594:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1598:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1594:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"1608:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1594:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e6572","id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1615:12:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""},"value":"Only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""}],"id":7205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1586:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1586:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7212,"nodeType":"ExpressionStatement","src":"1586:42:22"},{"assignments":[7214,null],"declarations":[{"constant":false,"id":7214,"mutability":"mutable","name":"success","nameLocation":"1645:7:22","nodeType":"VariableDeclaration","scope":7227,"src":"1640:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7213,"name":"bool","nodeType":"ElementaryTypeName","src":"1640:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7221,"initialValue":{"arguments":[{"id":7219,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"1682:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7215,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"1658:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1663:4:22","memberName":"call","nodeType":"MemberAccess","src":"1658:9:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"1675:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1658:23:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1639:48:22"},{"expression":{"arguments":[{"id":7223,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"1706:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457865637574696f6e206661696c6564","id":7224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1715:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_36fdcc45171afde7667666c94fc33ecdb7822c92e5282dda8124205e12e0ac03","typeString":"literal_string \"Execution failed\""},"value":"Execution failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36fdcc45171afde7667666c94fc33ecdb7822c92e5282dda8124205e12e0ac03","typeString":"literal_string \"Execution failed\""}],"id":7222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1698:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1698:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7226,"nodeType":"ExpressionStatement","src":"1698:36:22"}]},"functionSelector":"b61d27f6","id":7228,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1465:7:22","nodeType":"FunctionDefinition","overrides":{"id":7203,"nodeType":"OverrideSpecifier","overrides":[],"src":"1566:8:22"},"parameters":{"id":7202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"dest","nameLocation":"1491:4:22","nodeType":"VariableDeclaration","scope":7228,"src":"1483:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7196,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7199,"mutability":"mutable","name":"value","nameLocation":"1514:5:22","nodeType":"VariableDeclaration","scope":7228,"src":"1506:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7201,"mutability":"mutable","name":"func","nameLocation":"1545:4:22","nodeType":"VariableDeclaration","scope":7228,"src":"1530:19:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7200,"name":"bytes","nodeType":"ElementaryTypeName","src":"1530:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1472:84:22"},"returnParameters":{"id":7204,"nodeType":"ParameterList","parameters":[],"src":"1575:0:22"},"scope":7233,"src":"1456:286:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7231,"nodeType":"Block","src":"1777:2:22","statements":[]},"id":7232,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7229,"nodeType":"ParameterList","parameters":[],"src":"1757:2:22"},"returnParameters":{"id":7230,"nodeType":"ParameterList","parameters":[],"src":"1777:0:22"},"scope":7233,"src":"1750:29:22","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":7234,"src":"402:1380:22","usedErrors":[25,2937,2942,2947],"usedEvents":[]}],"src":"33:1751:22"},"id":22},"contracts/SmartAccountFactory.sol":{"ast":{"absolutePath":"contracts/SmartAccountFactory.sol","exportedSymbols":{"BaseAccount":[261],"ECDSA":[3274],"Exec":[1294],"IAccount":[803],"IAggregator":[837],"IEntryPoint":[1022],"INonceManager":[1041],"ISenderCreator":[1097],"IStakeManager":[1201],"MessageHashUtils":[3360],"PackedUserOperation":[1223],"SmartAccount":[7233],"SmartAccountFactory":[7378],"Strings":[2926],"UserOperationLib":[786],"calldataKeccak":[422],"min":[440]},"id":7379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7235,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:23"},{"absolutePath":"contracts/SmartAccount.sol","file":"./SmartAccount.sol","id":7236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7379,"sourceUnit":7234,"src":"61:28:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","id":7237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7379,"sourceUnit":1023,"src":"91:67:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SmartAccountFactory","contractDependencies":[7233],"contractKind":"contract","fullyImplemented":true,"id":7378,"linearizedBaseContracts":[7378],"name":"SmartAccountFactory","nameLocation":"171:19:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7240,"mutability":"immutable","name":"_entryPoint","nameLocation":"228:11:23","nodeType":"VariableDeclaration","scope":7378,"src":"198:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},"typeName":{"id":7239,"nodeType":"UserDefinedTypeName","pathNode":{"id":7238,"name":"IEntryPoint","nameLocations":["198:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1022,"src":"198:11:23"},"referencedDeclaration":1022,"src":"198:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"visibility":"private"},{"body":{"id":7248,"nodeType":"Block","src":"304:37:23","statements":[{"expression":{"id":7246,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"322:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"functionReturnParameters":7245,"id":7247,"nodeType":"Return","src":"315:18:23"}]},"functionSelector":"b0d691fe","id":7249,"implemented":true,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"257:10:23","nodeType":"FunctionDefinition","parameters":{"id":7241,"nodeType":"ParameterList","parameters":[],"src":"267:2:23"},"returnParameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7249,"src":"291:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},"typeName":{"id":7243,"nodeType":"UserDefinedTypeName","pathNode":{"id":7242,"name":"IEntryPoint","nameLocations":["291:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1022,"src":"291:11:23"},"referencedDeclaration":1022,"src":"291:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"290:13:23"},"scope":7378,"src":"248:93:23","stateMutability":"view","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"8117abc1","id":7251,"mutability":"immutable","name":"walletImplementation","nameLocation":"374:20:23","nodeType":"VariableDeclaration","scope":7378,"src":"349:45:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7250,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"f25144576b87c0db53fd13e964c2b18299ee19d7d44d4b2636144644acff745b","id":7257,"name":"WalletDeployed","nameLocation":"409:14:23","nodeType":"EventDefinition","parameters":{"id":7256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7253,"indexed":false,"mutability":"mutable","name":"wallet","nameLocation":"432:6:23","nodeType":"VariableDeclaration","scope":7257,"src":"424:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7252,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7255,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"448:5:23","nodeType":"VariableDeclaration","scope":7257,"src":"440:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7254,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"423:31:23"},"src":"403:52:23"},{"body":{"id":7287,"nodeType":"Block","src":"500:172:23","statements":[{"expression":{"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7263,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"511:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7264,"name":"entryPoint_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"525:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"src":"511:25:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"id":7266,"nodeType":"ExpressionStatement","src":"511:25:23"},{"assignments":[7269],"declarations":[{"constant":false,"id":7269,"mutability":"mutable","name":"wallet","nameLocation":"562:6:23","nodeType":"VariableDeclaration","scope":7287,"src":"549:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$7233","typeString":"contract SmartAccount"},"typeName":{"id":7268,"nodeType":"UserDefinedTypeName","pathNode":{"id":7267,"name":"SmartAccount","nameLocations":["549:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":7233,"src":"549:12:23"},"referencedDeclaration":7233,"src":"549:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$7233","typeString":"contract SmartAccount"}},"visibility":"internal"}],"id":7279,"initialValue":{"arguments":[{"id":7273,"name":"entryPoint_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"588:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},{"arguments":[{"id":7276,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"609:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccountFactory_$7378","typeString":"contract SmartAccountFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccountFactory_$7378","typeString":"contract SmartAccountFactory"}],"id":7275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"601:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7274,"name":"address","nodeType":"ElementaryTypeName","src":"601:7:23","typeDescriptions":{}}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"601:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"571:16:23","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_contract$_IEntryPoint_$1022_$_t_address_$returns$_t_contract$_SmartAccount_$7233_$","typeString":"function (contract IEntryPoint,address) returns (contract SmartAccount)"},"typeName":{"id":7271,"nodeType":"UserDefinedTypeName","pathNode":{"id":7270,"name":"SmartAccount","nameLocations":["575:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":7233,"src":"575:12:23"},"referencedDeclaration":7233,"src":"575:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$7233","typeString":"contract SmartAccount"}}},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$7233","typeString":"contract SmartAccount"}},"nodeType":"VariableDeclarationStatement","src":"549:66:23"},{"expression":{"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7280,"name":"walletImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"626:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7283,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"657:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccount_$7233","typeString":"contract SmartAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccount_$7233","typeString":"contract SmartAccount"}],"id":7282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"649:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7281,"name":"address","nodeType":"ElementaryTypeName","src":"649:7:23","typeDescriptions":{}}},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"649:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"626:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7286,"nodeType":"ExpressionStatement","src":"626:38:23"}]},"id":7288,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"entryPoint_","nameLocation":"487:11:23","nodeType":"VariableDeclaration","scope":7288,"src":"475:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},"typeName":{"id":7259,"nodeType":"UserDefinedTypeName","pathNode":{"id":7258,"name":"IEntryPoint","nameLocations":["475:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1022,"src":"475:11:23"},"referencedDeclaration":1022,"src":"475:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"474:25:23"},"returnParameters":{"id":7262,"nodeType":"ParameterList","parameters":[],"src":"500:0:23"},"scope":7378,"src":"463:209:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7333,"nodeType":"Block","src":"794:550:23","statements":[{"assignments":[7298],"declarations":[{"constant":false,"id":7298,"mutability":"mutable","name":"bytecodeHash","nameLocation":"813:12:23","nodeType":"VariableDeclaration","scope":7333,"src":"805:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"805:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7304,"initialValue":{"arguments":[{"arguments":[{"id":7301,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"850:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7300,"name":"getBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"838:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) view returns (bytes memory)"}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"838:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7299,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"828:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"805:52:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30786666","id":7316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1073:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":7315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1066:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":7314,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1066:6:23","typeDescriptions":{}}},"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1066:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"arguments":[{"id":7320,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1121:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_SmartAccountFactory_$7378","typeString":"contract SmartAccountFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartAccountFactory_$7378","typeString":"contract SmartAccountFactory"}],"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1113:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7318,"name":"address","nodeType":"ElementaryTypeName","src":"1113:7:23","typeDescriptions":{}}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1113:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7324,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"1169:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1161:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1161:7:23","typeDescriptions":{}}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1161:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7326,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"1209:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7312,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1015:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1019:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"1015:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1015:237:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7311,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"975:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:304:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"944:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7309,"name":"uint","nodeType":"ElementaryTypeName","src":"944:4:23","typeDescriptions":{}}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"944:358:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7307,"name":"uint160","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{}}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"914:407:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"888:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7305,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:23","typeDescriptions":{}}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"888:448:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7296,"id":7332,"nodeType":"Return","src":"868:468:23"}]},"functionSelector":"8cb84e18","id":7334,"implemented":true,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"689:10:23","nodeType":"FunctionDefinition","parameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7290,"mutability":"mutable","name":"owner","nameLocation":"718:5:23","nodeType":"VariableDeclaration","scope":7334,"src":"710:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7289,"name":"address","nodeType":"ElementaryTypeName","src":"710:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7292,"mutability":"mutable","name":"salt","nameLocation":"742:4:23","nodeType":"VariableDeclaration","scope":7334,"src":"734:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7291,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"699:54:23"},"returnParameters":{"id":7296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7295,"mutability":"mutable","name":"predicted","nameLocation":"783:9:23","nodeType":"VariableDeclaration","scope":7334,"src":"775:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7294,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"774:19:23"},"scope":7378,"src":"680:664:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7355,"nodeType":"Block","src":"1462:304:23","statements":[{"assignments":[7344],"declarations":[{"constant":false,"id":7344,"mutability":"mutable","name":"bytecode","nameLocation":"1486:8:23","nodeType":"VariableDeclaration","scope":7355,"src":"1473:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7343,"name":"bytes","nodeType":"ElementaryTypeName","src":"1473:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7348,"initialValue":{"arguments":[{"id":7346,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"1509:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7345,"name":"getBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"1497:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) view returns (bytes memory)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1473:42:23"},{"AST":{"nativeSrc":"1535:179:23","nodeType":"YulBlock","src":"1535:179:23","statements":[{"nativeSrc":"1550:62:23","nodeType":"YulAssignment","src":"1550:62:23","value":{"arguments":[{"kind":"number","nativeSrc":"1568:1:23","nodeType":"YulLiteral","src":"1568:1:23","type":"","value":"0"},{"arguments":[{"name":"bytecode","nativeSrc":"1575:8:23","nodeType":"YulIdentifier","src":"1575:8:23"},{"kind":"number","nativeSrc":"1585:2:23","nodeType":"YulLiteral","src":"1585:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1571:3:23","nodeType":"YulIdentifier","src":"1571:3:23"},"nativeSrc":"1571:17:23","nodeType":"YulFunctionCall","src":"1571:17:23"},{"arguments":[{"name":"bytecode","nativeSrc":"1596:8:23","nodeType":"YulIdentifier","src":"1596:8:23"}],"functionName":{"name":"mload","nativeSrc":"1590:5:23","nodeType":"YulIdentifier","src":"1590:5:23"},"nativeSrc":"1590:15:23","nodeType":"YulFunctionCall","src":"1590:15:23"},{"name":"salt","nativeSrc":"1607:4:23","nodeType":"YulIdentifier","src":"1607:4:23"}],"functionName":{"name":"create2","nativeSrc":"1560:7:23","nodeType":"YulIdentifier","src":"1560:7:23"},"nativeSrc":"1560:52:23","nodeType":"YulFunctionCall","src":"1560:52:23"},"variableNames":[{"name":"wallet","nativeSrc":"1550:6:23","nodeType":"YulIdentifier","src":"1550:6:23"}]},{"body":{"nativeSrc":"1657:46:23","nodeType":"YulBlock","src":"1657:46:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1683:1:23","nodeType":"YulLiteral","src":"1683:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"1686:1:23","nodeType":"YulLiteral","src":"1686:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1676:6:23","nodeType":"YulIdentifier","src":"1676:6:23"},"nativeSrc":"1676:12:23","nodeType":"YulFunctionCall","src":"1676:12:23"},"nativeSrc":"1676:12:23","nodeType":"YulExpressionStatement","src":"1676:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"wallet","nativeSrc":"1648:6:23","nodeType":"YulIdentifier","src":"1648:6:23"}],"functionName":{"name":"extcodesize","nativeSrc":"1636:11:23","nodeType":"YulIdentifier","src":"1636:11:23"},"nativeSrc":"1636:19:23","nodeType":"YulFunctionCall","src":"1636:19:23"}],"functionName":{"name":"iszero","nativeSrc":"1629:6:23","nodeType":"YulIdentifier","src":"1629:6:23"},"nativeSrc":"1629:27:23","nodeType":"YulFunctionCall","src":"1629:27:23"},"nativeSrc":"1626:77:23","nodeType":"YulIf","src":"1626:77:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":7344,"isOffset":false,"isSlot":false,"src":"1575:8:23","valueSize":1},{"declaration":7344,"isOffset":false,"isSlot":false,"src":"1596:8:23","valueSize":1},{"declaration":7338,"isOffset":false,"isSlot":false,"src":"1607:4:23","valueSize":1},{"declaration":7341,"isOffset":false,"isSlot":false,"src":"1550:6:23","valueSize":1},{"declaration":7341,"isOffset":false,"isSlot":false,"src":"1648:6:23","valueSize":1}],"id":7349,"nodeType":"InlineAssembly","src":"1526:188:23"},{"eventCall":{"arguments":[{"id":7351,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"1744:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7352,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"1752:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7350,"name":"WalletDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"1729:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1729:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7354,"nodeType":"EmitStatement","src":"1724:34:23"}]},"functionSelector":"f247d217","id":7356,"implemented":true,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"1361:12:23","nodeType":"FunctionDefinition","parameters":{"id":7339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7336,"mutability":"mutable","name":"owner","nameLocation":"1392:5:23","nodeType":"VariableDeclaration","scope":7356,"src":"1384:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7335,"name":"address","nodeType":"ElementaryTypeName","src":"1384:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7338,"mutability":"mutable","name":"salt","nameLocation":"1416:4:23","nodeType":"VariableDeclaration","scope":7356,"src":"1408:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1373:54:23"},"returnParameters":{"id":7342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7341,"mutability":"mutable","name":"wallet","nameLocation":"1454:6:23","nodeType":"VariableDeclaration","scope":7356,"src":"1446:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7340,"name":"address","nodeType":"ElementaryTypeName","src":"1446:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1445:16:23"},"scope":7378,"src":"1352:414:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7376,"nodeType":"Block","src":"1847:169:23","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":7366,"name":"SmartAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"1918:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SmartAccount_$7233_$","typeString":"type(contract SmartAccount)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_SmartAccount_$7233_$","typeString":"type(contract SmartAccount)"}],"id":7365,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1913:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_SmartAccount_$7233","typeString":"type(contract SmartAccount)"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1932:12:23","memberName":"creationCode","nodeType":"MemberAccess","src":"1913:31:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7371,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"1974:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"}},{"id":7372,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"1987:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1022","typeString":"contract IEntryPoint"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7369,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1963:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1967:6:23","memberName":"encode","nodeType":"MemberAccess","src":"1963:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7363,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1878:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1882:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"1878:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:130:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":7362,"id":7375,"nodeType":"Return","src":"1858:150:23"}]},"id":7377,"implemented":true,"kind":"function","modifiers":[],"name":"getBytecode","nameLocation":"1783:11:23","nodeType":"FunctionDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7358,"mutability":"mutable","name":"owner","nameLocation":"1803:5:23","nodeType":"VariableDeclaration","scope":7377,"src":"1795:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7357,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1794:15:23"},"returnParameters":{"id":7362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7377,"src":"1833:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7360,"name":"bytes","nodeType":"ElementaryTypeName","src":"1833:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1832:14:23"},"scope":7378,"src":"1774:242:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7379,"src":"162:1857:23","usedErrors":[],"usedEvents":[7257]}],"src":"33:1988:23"},"id":23}},"contracts":{"@account-abstraction/contracts/core/BaseAccount.sol":{"BaseAccount":{"abi":[{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"error","type":"bytes"}],"name":"ExecuteError","type":"error"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct BaseAccount.Call[]","name":"calls","type":"tuple[]"}],"name":"executeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"entryPoint()":"b0d691fe","execute(address,uint256,bytes)":"b61d27f6","executeBatch((address,uint256,bytes)[])":"34fcd5be","getNonce()":"d087d288","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"error\",\"type\":\"bytes\"}],\"name\":\"ExecuteError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BaseAccount.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"aggregator\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute a single call from the account.\"},\"executeBatch((address,uint256,bytes)[])\":{\"notice\":\"execute a batch of calls. revert on the first call that fails. If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,  to mark the failing call index.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"notice\":\"Basic account implementation. This contract provides the basic logic for implementing the IAccount interface - validateUserOp Specific account implementation should inherit it and provide the account-specific logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/core/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x071e38cf697bedbfe021955879277620ff763ecca1a1143ce14792e8c86c6d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d55468ffadcec140a1dc853fac153de985d7335655e70935b9d28e148a495ab\",\"dweb:/ipfs/QmXMPLx92TLCDRtNTdmTLSWBNbPVmSGeN9im2zsK9P9p4R\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x1030b464b49ce80da46b5b6c9af357c2d526f308de61391db6a4ec767d33b864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671945f8e18e7305797312b5a209506be3c9bd1d9b9b561c1e8863bccfa61319\",\"dweb:/ipfs/QmVanLK5Aenrb7J94doiE1C9oHwo86jvv8NrpDeNHwvnii\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]},\"@account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x9c724ee22011193ea7f92d3c3c467ee6aa27139d3ddc225c7f1254d241e6ccdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96cc246fe944a212cbb9ba82065b2d380ec80954fcdb5d8d982b476bd5b72868\",\"dweb:/ipfs/QmZ25eFixEhukbfWGz5TBjsp7YohxUqD5i2rxhaghfvHt8\"]}},\"version\":1}"}},"@account-abstraction/contracts/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[{"inputs":[],"name":"PAYMASTER_DATA_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_POSTOP_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_VALIDATION_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a96037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146065578063ede3150214606c575b600080fd5b6053602481565b60405190815260200160405180910390f35b6053601481565b605360348156fea264697066735822122019fb70435213092b4d14adc5b113f64f67bc488d7661eeebe794ba55542c1ac964736f6c634300081c0033","opcodes":"PUSH1 0xA9 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x65 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x53 PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x53 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x53 PUSH1 0x34 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xFB PUSH17 0x435213092B4D14ADC5B113F64F67BC488D PUSH23 0x61EEEBE794BA55542C1AC964736F6C634300081C003300 ","sourceMap":"278:4766:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;278:4766:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PAYMASTER_DATA_OFFSET_466":{"entryPoint":null,"id":466,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_POSTOP_GAS_OFFSET_463":{"entryPoint":null,"id":463,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_VALIDATION_GAS_OFFSET_460":{"entryPoint":null,"id":460,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:201:24","nodeType":"YulBlock","src":"0:201:24","statements":[{"nativeSrc":"6:3:24","nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nativeSrc":"123:76:24","nodeType":"YulBlock","src":"123:76:24","statements":[{"nativeSrc":"133:26:24","nodeType":"YulAssignment","src":"133:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"145:9:24","nodeType":"YulIdentifier","src":"145:9:24"},{"kind":"number","nativeSrc":"156:2:24","nodeType":"YulLiteral","src":"156:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"141:3:24","nodeType":"YulIdentifier","src":"141:3:24"},"nativeSrc":"141:18:24","nodeType":"YulFunctionCall","src":"141:18:24"},"variableNames":[{"name":"tail","nativeSrc":"133:4:24","nodeType":"YulIdentifier","src":"133:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"175:9:24","nodeType":"YulIdentifier","src":"175:9:24"},{"name":"value0","nativeSrc":"186:6:24","nodeType":"YulIdentifier","src":"186:6:24"}],"functionName":{"name":"mstore","nativeSrc":"168:6:24","nodeType":"YulIdentifier","src":"168:6:24"},"nativeSrc":"168:25:24","nodeType":"YulFunctionCall","src":"168:25:24"},"nativeSrc":"168:25:24","nodeType":"YulExpressionStatement","src":"168:25:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nativeSrc":"14:185:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"92:9:24","nodeType":"YulTypedName","src":"92:9:24","type":""},{"name":"value0","nativeSrc":"103:6:24","nodeType":"YulTypedName","src":"103:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"114:4:24","nodeType":"YulTypedName","src":"114:4:24","type":""}],"src":"14:185:24"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146065578063ede3150214606c575b600080fd5b6053602481565b60405190815260200160405180910390f35b6053601481565b605360348156fea264697066735822122019fb70435213092b4d14adc5b113f64f67bc488d7661eeebe794ba55542c1ac964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x65 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x53 PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x53 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x53 PUSH1 0x34 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xFB PUSH17 0x435213092B4D14ADC5B113F64F67BC488D PUSH23 0x61EEEBE794BA55542C1AC964736F6C634300081C003300 ","sourceMap":"278:4766:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:56;;430:2;376:56;;;;;168:25:24;;;156:2;141:18;376:56:2;;;;;;;310:60;;368:2;310:60;;438:50;;486:2;438:50;"},"methodIdentifiers":{"PAYMASTER_DATA_OFFSET()":"ede31502","PAYMASTER_POSTOP_GAS_OFFSET()":"25093e1b","PAYMASTER_VALIDATION_GAS_OFFSET()":"b29a8ff4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PAYMASTER_DATA_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_POSTOP_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_VALIDATION_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"aggregator\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x1030b464b49ce80da46b5b6c9af357c2d526f308de61391db6a4ec767d33b864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671945f8e18e7305797312b5a209506be3c9bd1d9b9b561c1e8863bccfa61319\",\"dweb:/ipfs/QmVanLK5Aenrb7J94doiE1C9oHwo86jvv8NrpDeNHwvnii\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])":"ae574a43","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)":"2dd81133","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"062a422b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- An array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- An array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code to perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"notice\":\"Validate an aggregated signature. Reverts if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Validate the signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"UserOperationPrefundTooLow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"senderCreator","outputs":[{"internalType":"contract ISenderCreator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"22cdde4c","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)":"dbed18e0","handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)":"765e827f","incrementNonce(uint192)":"0bd28e3b","senderCreator()":"09ccb880","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UserOperationPrefundTooLow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderCreator\",\"outputs\":[{\"internalType\":\"contract ISenderCreator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint256,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted call to \\\"postOp\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted \\\"callData\\\" call.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\",\"params\":{\"data\":\"data to pass to target in a delegatecall\",\"target\":\"a target contract to make a delegatecall from entrypoint\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"},\"returns\":{\"_0\":\"hash the hash of this UserOperation\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op. Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"notice\":\"UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error.this method cannot be used for EIP-7702 derived contracts.\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"senderCreator()\":{\"notice\":\"Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256,uint256)":"7c627b21","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual cost of gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x6be37abc0760d60a41124e2e3f46185a0d3df48b32bd73174790981f76fbdae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c144ba15a63883c7da41fc0729a46108f7d5487dbac2da0bde00aed67f5a2f00\",\"dweb:/ipfs/Qmdh7MzQmCQLh7wz719xMuG2yvMUkKDVwyN44P7pLofJfS\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/ISenderCreator.sol":{"ISenderCreator":{"abi":[{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"createSender","outputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"initCallData","type":"bytes"}],"name":"initEip7702Sender","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createSender(bytes)":"570e1a36","initEip7702Sender(address,bytes)":"c09ad0d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData\",\"type\":\"bytes\"}],\"name\":\"initEip7702Sender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"details\":\"Creates a new sender contract.\",\"returns\":{\"sender\":\"Address of the newly created sender contract.\"}},\"initEip7702Sender(address,bytes)\":{\"params\":{\"initCallData\":\"- the call data to be passed to the sender account call.\",\"sender\":\"- the 'sender' EIP-7702 account to be initialized.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initEip7702Sender(address,bytes)\":{\"notice\":\"Use initCallData to initialize an EIP-7702 account. The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account. Note: Can be called multiple times as long as an appropriate initCode is supplied\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":\"ISenderCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]}},\"version\":1}"}},"@account-abstraction/contracts/utils/Exec.sol":{"Exec":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220630a4887541e7e2962d573111fe07efb7c3dabfcffbc8dc3db9c8d0337e3ab8164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xA488754 0x1E PUSH31 0x2962D573111FE07EFB7C3DABFCFFBC8DC3DB9C8D0337E3AB8164736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"193:1892:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;193:1892:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220630a4887541e7e2962d573111fe07efb7c3dabfcffbc8dc3db9c8d0337e3ab8164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xA488754 0x1E PUSH31 0x2962D573111FE07EFB7C3DABFCFFBC8DC3DB9C8D0337E3AB8164736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"193:1892:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when making different kinds of contract calls in Solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/utils/Exec.sol\":\"Exec\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x9c724ee22011193ea7f92d3c3c467ee6aa27139d3ddc225c7f1254d241e6ccdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96cc246fe944a212cbb9ba82065b2d380ec80954fcdb5d8d982b476bd5b72868\",\"dweb:/ipfs/QmZ25eFixEhukbfWGz5TBjsp7YohxUqD5i2rxhaghfvHt8\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056d4d0852072ed0413631c4c0b5b1ff8a263096055a19f5faa2cadc04618cbc364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xD4 0xD0 DUP6 KECCAK256 PUSH19 0xED0413631C4C0B5B1FF8A263096055A19F5FAA 0x2C 0xAD 0xC0 CHAINID XOR 0xCB 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18980:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056d4d0852072ed0413631c4c0b5b1ff8a263096055a19f5faa2cadc04618cbc364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xD4 0xD0 DUP6 KECCAK256 PUSH19 0xED0413631C4C0B5B1FF8A263096055A19F5FAA 0x2C 0xAD 0xC0 CHAINID XOR 0xCB 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18980:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203376831630f08b8d35435f8576945761134eb73cbed0d9c2ec5b64bf80d3094a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER PUSH23 0x831630F08B8D35435F8576945761134EB73CBED0D9C2EC JUMPDEST PUSH5 0xBF80D3094A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"344:7470:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203376831630f08b8d35435f8576945761134eb73cbed0d9c2ec5b64bf80d3094a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER PUSH23 0x831630F08B8D35435F8576945761134EB73CBED0D9C2EC JUMPDEST PUSH5 0xBF80D3094A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"344:7470:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220731ea9c48f3dcf43bcd80c0c3140e6f5e937de8bd528adea3785b0421988243964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x1EA9C48F3DCF43BCD80C0C3140E6F5E937DE8BD5 0x28 0xAD 0xEA CALLDATACOPY DUP6 0xB0 TIMESTAMP NOT DUP9 0x24 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"521:3729:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220731ea9c48f3dcf43bcd80c0c3140e6f5e937de8bd528adea3785b0421988243964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x1EA9C48F3DCF43BCD80C0C3140E6F5E937DE8BD5 0x28 0xAD 0xEA CALLDATACOPY DUP6 0xB0 TIMESTAMP NOT DUP9 0x24 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"521:3729:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41425f41c1222419b5f7510ef4b5382051038809b54a2c00f0e2d3ac98d815264736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EQ 0x25 DELEGATECALL SHR SLT 0x22 COINBASE SWAP12 PUSH0 PUSH22 0x10EF4B5382051038809B54A2C00F0E2D3AC98D815264 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41425f41c1222419b5f7510ef4b5382051038809b54a2c00f0e2d3ac98d815264736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EQ 0x25 DELEGATECALL SHR SLT 0x22 COINBASE SWAP12 PUSH0 PUSH22 0x10EF4B5382051038809B54A2C00F0E2D3AC98D815264 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/PayMaster.sol":{"Paymaster":{"abi":[{"inputs":[{"internalType":"address","name":"_entryPoint","type":"address"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"GasPayment","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"entryPoint","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"gasLimit","type":"uint256"}],"name":"PaymasterSetup","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gasLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newGasLimit","type":"uint256"}],"name":"setGasLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"requiredPreFund","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1345":{"entryPoint":null,"id":1345,"parameterSlots":1,"returnSlots":0},"@_6962":{"entryPoint":null,"id":6962,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_1441":{"entryPoint":263,"id":1441,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":343,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_address_fromMemory":{"entryPoint":371,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6ca51d52894fd00ad066b7629f2c9a8945fcfd6b1d808122ccb17c3bb99c5b7d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1289:24","nodeType":"YulBlock","src":"0:1289:24","statements":[{"nativeSrc":"6:3:24","nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nativeSrc":"74:117:24","nodeType":"YulBlock","src":"74:117:24","statements":[{"nativeSrc":"84:22:24","nodeType":"YulAssignment","src":"84:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:24","nodeType":"YulIdentifier","src":"99:6:24"}],"functionName":{"name":"mload","nativeSrc":"93:5:24","nodeType":"YulIdentifier","src":"93:5:24"},"nativeSrc":"93:13:24","nodeType":"YulFunctionCall","src":"93:13:24"},"variableNames":[{"name":"value","nativeSrc":"84:5:24","nodeType":"YulIdentifier","src":"84:5:24"}]},{"body":{"nativeSrc":"169:16:24","nodeType":"YulBlock","src":"169:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:24","nodeType":"YulLiteral","src":"178:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:24","nodeType":"YulLiteral","src":"181:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:24","nodeType":"YulIdentifier","src":"171:6:24"},"nativeSrc":"171:12:24","nodeType":"YulFunctionCall","src":"171:12:24"},"nativeSrc":"171:12:24","nodeType":"YulExpressionStatement","src":"171:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:24","nodeType":"YulIdentifier","src":"128:5:24"},{"arguments":[{"name":"value","nativeSrc":"139:5:24","nodeType":"YulIdentifier","src":"139:5:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:24","nodeType":"YulLiteral","src":"154:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:24","nodeType":"YulLiteral","src":"159:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:24","nodeType":"YulIdentifier","src":"150:3:24"},"nativeSrc":"150:11:24","nodeType":"YulFunctionCall","src":"150:11:24"},{"kind":"number","nativeSrc":"163:1:24","nodeType":"YulLiteral","src":"163:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:24","nodeType":"YulIdentifier","src":"146:3:24"},"nativeSrc":"146:19:24","nodeType":"YulFunctionCall","src":"146:19:24"}],"functionName":{"name":"and","nativeSrc":"135:3:24","nodeType":"YulIdentifier","src":"135:3:24"},"nativeSrc":"135:31:24","nodeType":"YulFunctionCall","src":"135:31:24"}],"functionName":{"name":"eq","nativeSrc":"125:2:24","nodeType":"YulIdentifier","src":"125:2:24"},"nativeSrc":"125:42:24","nodeType":"YulFunctionCall","src":"125:42:24"}],"functionName":{"name":"iszero","nativeSrc":"118:6:24","nodeType":"YulIdentifier","src":"118:6:24"},"nativeSrc":"118:50:24","nodeType":"YulFunctionCall","src":"118:50:24"},"nativeSrc":"115:70:24","nodeType":"YulIf","src":"115:70:24"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:24","nodeType":"YulTypedName","src":"53:6:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:24","nodeType":"YulTypedName","src":"64:5:24","type":""}],"src":"14:177:24"},{"body":{"nativeSrc":"311:239:24","nodeType":"YulBlock","src":"311:239:24","statements":[{"body":{"nativeSrc":"357:16:24","nodeType":"YulBlock","src":"357:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"366:1:24","nodeType":"YulLiteral","src":"366:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"369:1:24","nodeType":"YulLiteral","src":"369:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"359:6:24","nodeType":"YulIdentifier","src":"359:6:24"},"nativeSrc":"359:12:24","nodeType":"YulFunctionCall","src":"359:12:24"},"nativeSrc":"359:12:24","nodeType":"YulExpressionStatement","src":"359:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"332:7:24","nodeType":"YulIdentifier","src":"332:7:24"},{"name":"headStart","nativeSrc":"341:9:24","nodeType":"YulIdentifier","src":"341:9:24"}],"functionName":{"name":"sub","nativeSrc":"328:3:24","nodeType":"YulIdentifier","src":"328:3:24"},"nativeSrc":"328:23:24","nodeType":"YulFunctionCall","src":"328:23:24"},{"kind":"number","nativeSrc":"353:2:24","nodeType":"YulLiteral","src":"353:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"324:3:24","nodeType":"YulIdentifier","src":"324:3:24"},"nativeSrc":"324:32:24","nodeType":"YulFunctionCall","src":"324:32:24"},"nativeSrc":"321:52:24","nodeType":"YulIf","src":"321:52:24"},{"nativeSrc":"382:50:24","nodeType":"YulAssignment","src":"382:50:24","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:24","nodeType":"YulIdentifier","src":"422:9:24"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"392:29:24","nodeType":"YulIdentifier","src":"392:29:24"},"nativeSrc":"392:40:24","nodeType":"YulFunctionCall","src":"392:40:24"},"variableNames":[{"name":"value0","nativeSrc":"382:6:24","nodeType":"YulIdentifier","src":"382:6:24"}]},{"nativeSrc":"441:35:24","nodeType":"YulAssignment","src":"441:35:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"461:9:24","nodeType":"YulIdentifier","src":"461:9:24"},{"kind":"number","nativeSrc":"472:2:24","nodeType":"YulLiteral","src":"472:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"457:3:24","nodeType":"YulIdentifier","src":"457:3:24"},"nativeSrc":"457:18:24","nodeType":"YulFunctionCall","src":"457:18:24"}],"functionName":{"name":"mload","nativeSrc":"451:5:24","nodeType":"YulIdentifier","src":"451:5:24"},"nativeSrc":"451:25:24","nodeType":"YulFunctionCall","src":"451:25:24"},"variableNames":[{"name":"value1","nativeSrc":"441:6:24","nodeType":"YulIdentifier","src":"441:6:24"}]},{"nativeSrc":"485:59:24","nodeType":"YulAssignment","src":"485:59:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"529:9:24","nodeType":"YulIdentifier","src":"529:9:24"},{"kind":"number","nativeSrc":"540:2:24","nodeType":"YulLiteral","src":"540:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"525:3:24","nodeType":"YulIdentifier","src":"525:3:24"},"nativeSrc":"525:18:24","nodeType":"YulFunctionCall","src":"525:18:24"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"495:29:24","nodeType":"YulIdentifier","src":"495:29:24"},"nativeSrc":"495:49:24","nodeType":"YulFunctionCall","src":"495:49:24"},"variableNames":[{"name":"value2","nativeSrc":"485:6:24","nodeType":"YulIdentifier","src":"485:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address_fromMemory","nativeSrc":"196:354:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"261:9:24","nodeType":"YulTypedName","src":"261:9:24","type":""},{"name":"dataEnd","nativeSrc":"272:7:24","nodeType":"YulTypedName","src":"272:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"284:6:24","nodeType":"YulTypedName","src":"284:6:24","type":""},{"name":"value1","nativeSrc":"292:6:24","nodeType":"YulTypedName","src":"292:6:24","type":""},{"name":"value2","nativeSrc":"300:6:24","nodeType":"YulTypedName","src":"300:6:24","type":""}],"src":"196:354:24"},{"body":{"nativeSrc":"656:102:24","nodeType":"YulBlock","src":"656:102:24","statements":[{"nativeSrc":"666:26:24","nodeType":"YulAssignment","src":"666:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"678:9:24","nodeType":"YulIdentifier","src":"678:9:24"},{"kind":"number","nativeSrc":"689:2:24","nodeType":"YulLiteral","src":"689:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"674:3:24","nodeType":"YulIdentifier","src":"674:3:24"},"nativeSrc":"674:18:24","nodeType":"YulFunctionCall","src":"674:18:24"},"variableNames":[{"name":"tail","nativeSrc":"666:4:24","nodeType":"YulIdentifier","src":"666:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"708:9:24","nodeType":"YulIdentifier","src":"708:9:24"},{"arguments":[{"name":"value0","nativeSrc":"723:6:24","nodeType":"YulIdentifier","src":"723:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"739:3:24","nodeType":"YulLiteral","src":"739:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"744:1:24","nodeType":"YulLiteral","src":"744:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"735:3:24","nodeType":"YulIdentifier","src":"735:3:24"},"nativeSrc":"735:11:24","nodeType":"YulFunctionCall","src":"735:11:24"},{"kind":"number","nativeSrc":"748:1:24","nodeType":"YulLiteral","src":"748:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"731:3:24","nodeType":"YulIdentifier","src":"731:3:24"},"nativeSrc":"731:19:24","nodeType":"YulFunctionCall","src":"731:19:24"}],"functionName":{"name":"and","nativeSrc":"719:3:24","nodeType":"YulIdentifier","src":"719:3:24"},"nativeSrc":"719:32:24","nodeType":"YulFunctionCall","src":"719:32:24"}],"functionName":{"name":"mstore","nativeSrc":"701:6:24","nodeType":"YulIdentifier","src":"701:6:24"},"nativeSrc":"701:51:24","nodeType":"YulFunctionCall","src":"701:51:24"},"nativeSrc":"701:51:24","nodeType":"YulExpressionStatement","src":"701:51:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"555:203:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"625:9:24","nodeType":"YulTypedName","src":"625:9:24","type":""},{"name":"value0","nativeSrc":"636:6:24","nodeType":"YulTypedName","src":"636:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"647:4:24","nodeType":"YulTypedName","src":"647:4:24","type":""}],"src":"555:203:24"},{"body":{"nativeSrc":"937:168:24","nodeType":"YulBlock","src":"937:168:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"954:9:24","nodeType":"YulIdentifier","src":"954:9:24"},{"kind":"number","nativeSrc":"965:2:24","nodeType":"YulLiteral","src":"965:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"947:6:24","nodeType":"YulIdentifier","src":"947:6:24"},"nativeSrc":"947:21:24","nodeType":"YulFunctionCall","src":"947:21:24"},"nativeSrc":"947:21:24","nodeType":"YulExpressionStatement","src":"947:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"988:9:24","nodeType":"YulIdentifier","src":"988:9:24"},{"kind":"number","nativeSrc":"999:2:24","nodeType":"YulLiteral","src":"999:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"984:3:24","nodeType":"YulIdentifier","src":"984:3:24"},"nativeSrc":"984:18:24","nodeType":"YulFunctionCall","src":"984:18:24"},{"kind":"number","nativeSrc":"1004:2:24","nodeType":"YulLiteral","src":"1004:2:24","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"977:6:24","nodeType":"YulIdentifier","src":"977:6:24"},"nativeSrc":"977:30:24","nodeType":"YulFunctionCall","src":"977:30:24"},"nativeSrc":"977:30:24","nodeType":"YulExpressionStatement","src":"977:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1027:9:24","nodeType":"YulIdentifier","src":"1027:9:24"},{"kind":"number","nativeSrc":"1038:2:24","nodeType":"YulLiteral","src":"1038:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1023:3:24","nodeType":"YulIdentifier","src":"1023:3:24"},"nativeSrc":"1023:18:24","nodeType":"YulFunctionCall","src":"1023:18:24"},{"hexValue":"496e76616c696420456e747279506f696e74","kind":"string","nativeSrc":"1043:20:24","nodeType":"YulLiteral","src":"1043:20:24","type":"","value":"Invalid EntryPoint"}],"functionName":{"name":"mstore","nativeSrc":"1016:6:24","nodeType":"YulIdentifier","src":"1016:6:24"},"nativeSrc":"1016:48:24","nodeType":"YulFunctionCall","src":"1016:48:24"},"nativeSrc":"1016:48:24","nodeType":"YulExpressionStatement","src":"1016:48:24"},{"nativeSrc":"1073:26:24","nodeType":"YulAssignment","src":"1073:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1085:9:24","nodeType":"YulIdentifier","src":"1085:9:24"},{"kind":"number","nativeSrc":"1096:2:24","nodeType":"YulLiteral","src":"1096:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1081:3:24","nodeType":"YulIdentifier","src":"1081:3:24"},"nativeSrc":"1081:18:24","nodeType":"YulFunctionCall","src":"1081:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1073:4:24","nodeType":"YulIdentifier","src":"1073:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ca51d52894fd00ad066b7629f2c9a8945fcfd6b1d808122ccb17c3bb99c5b7d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"763:342:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"914:9:24","nodeType":"YulTypedName","src":"914:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"928:4:24","nodeType":"YulTypedName","src":"928:4:24","type":""}],"src":"763:342:24"},{"body":{"nativeSrc":"1211:76:24","nodeType":"YulBlock","src":"1211:76:24","statements":[{"nativeSrc":"1221:26:24","nodeType":"YulAssignment","src":"1221:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1233:9:24","nodeType":"YulIdentifier","src":"1233:9:24"},{"kind":"number","nativeSrc":"1244:2:24","nodeType":"YulLiteral","src":"1244:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1229:3:24","nodeType":"YulIdentifier","src":"1229:3:24"},"nativeSrc":"1229:18:24","nodeType":"YulFunctionCall","src":"1229:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1221:4:24","nodeType":"YulIdentifier","src":"1221:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1263:9:24","nodeType":"YulIdentifier","src":"1263:9:24"},{"name":"value0","nativeSrc":"1274:6:24","nodeType":"YulIdentifier","src":"1274:6:24"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:24","nodeType":"YulIdentifier","src":"1256:6:24"},"nativeSrc":"1256:25:24","nodeType":"YulFunctionCall","src":"1256:25:24"},"nativeSrc":"1256:25:24","nodeType":"YulExpressionStatement","src":"1256:25:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1110:177:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1180:9:24","nodeType":"YulTypedName","src":"1180:9:24","type":""},{"name":"value0","nativeSrc":"1191:6:24","nodeType":"YulTypedName","src":"1191:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1202:4:24","nodeType":"YulTypedName","src":"1202:4:24","type":""}],"src":"1110:177:24"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6ca51d52894fd00ad066b7629f2c9a8945fcfd6b1d808122ccb17c3bb99c5b7d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b506040516108f33803806108f383398101604081905261002f91610173565b806001600160a01b03811661005f57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006881610107565b506001600160a01b0383166100b45760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908115b9d1c9e541bda5b9d60721b6044820152606401610056565b6001600160a01b03831660808190526001839055604051838152600091907fd45de942e068e55ec4e953f51c3a40ecc3195b619702f4cfb0531a7a6b955ff49060200160405180910390a35050506101af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461016e57600080fd5b919050565b60008060006060848603121561018857600080fd5b61019184610157565b9250602084015191506101a660408501610157565b90509250925092565b60805161071b6101d86000396000818161012a015281816101bf01526102b1015261071b6000f3fe6080604052600436106100785760003560e01c8063b0d691fe1161004b578063b0d691fe14610118578063ee7d72b41461014c578063f2fde38b1461016c578063f68016b71461018c57005b806352b7512c1461007a578063715018a6146100b15780637c627b21146100c65780638da5cb5b146100e6575b005b34801561008657600080fd5b5061009a6100953660046104f2565b6101b0565b6040516100a8929190610546565b60405180910390f35b3480156100bd57600080fd5b50610078610292565b3480156100d257600080fd5b506100786100e136600461059b565b6102a6565b3480156100f257600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100a8565b34801561012457600080fd5b506101007f000000000000000000000000000000000000000000000000000000000000000081565b34801561015857600080fd5b50610078610167366004610638565b61042a565b34801561017857600080fd5b50610078610187366004610651565b610437565b34801561019857600080fd5b506101a260015481565b6040519081526020016100a8565b60606000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102275760405162461bcd60e51b81526020600482015260136024820152722ab730baba3437b934bd32b21031b0b63632b960691b60448201526064015b60405180910390fd5b6102346040860186610681565b9050600003610255575050604080516020810190915260008152600161028a565b600154831115610277575050604080516020810190915260008152600161028a565b5050604080516020810190915260008082525b935093915050565b61029a610475565b6102a460006104a2565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461031e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920456e747279506f696e742063616e2063616c6c20706f73744f7000604482015260640161021e565b6000856002811115610332576103326106cf565b148061034f5750600185600281111561034d5761034d6106cf565b145b156103ee57604051600090339084908381818185875af1925050503d8060008114610396576040519150601f19603f3d011682016040523d82523d6000602084013e61039b565b606091505b50509050806103ec5760405162461bcd60e51b815260206004820152601c60248201527f4e617469766520746f6b656e207472616e73666572206661696c656400000000604482015260640161021e565b505b60405182815233907f65eb9e4e31cbc02dd2f7edd35f1e684132f20496511b7228c15163afc04dc1e49060200160405180910390a25050505050565b610432610475565b600155565b61043f610475565b6001600160a01b03811661046957604051631e4fbdf760e01b81526000600482015260240161021e565b610472816104a2565b50565b6000546001600160a01b031633146102a45760405163118cdaa760e01b815233600482015260240161021e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006060848603121561050757600080fd5b833567ffffffffffffffff81111561051e57600080fd5b8401610120818703121561053157600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b818110156105745760208187018101516060868401015201610557565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b6000806000806000608086880312156105b357600080fd5b8535600381106105c257600080fd5b9450602086013567ffffffffffffffff8111156105de57600080fd5b8601601f810188136105ef57600080fd5b803567ffffffffffffffff81111561060657600080fd5b88602082840101111561061857600080fd5b959860209190910197509495604081013595606090910135945092505050565b60006020828403121561064a57600080fd5b5035919050565b60006020828403121561066357600080fd5b81356001600160a01b038116811461067a57600080fd5b9392505050565b6000808335601e1984360301811261069857600080fd5b83018035915067ffffffffffffffff8211156106b357600080fd5b6020019150368190038213156106c857600080fd5b9250929050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209d9a906df2ffcb4d0640f162c490ce368357a3cfa3dc7cca0875482399011b1e64736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8F3 CODESIZE SUB DUP1 PUSH2 0x8F3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68 DUP2 PUSH2 0x107 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A5908115B9D1C9E541BDA5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0x1 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH32 0xD45DE942E068E55EC4E953F51C3A40ECC3195B619702F4CFB0531A7A6B955FF4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191 DUP5 PUSH2 0x157 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH2 0x1A6 PUSH1 0x40 DUP6 ADD PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x71B PUSH2 0x1D8 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x12A ADD MSTORE DUP2 DUP2 PUSH2 0x1BF ADD MSTORE PUSH2 0x2B1 ADD MSTORE PUSH2 0x71B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0D691FE GT PUSH2 0x4B JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xEE7D72B4 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xF68016B7 EQ PUSH2 0x18C JUMPI STOP JUMPDEST DUP1 PUSH4 0x52B7512C EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x95 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP3 SWAP2 SWAP1 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH2 0x292 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x59B JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x651 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2AB730BABA3437B934BD32B21031B0B63632B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x234 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x255 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x1 SLOAD DUP4 GT ISZERO PUSH2 0x277 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH2 0x28A JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29A PUSH2 0x475 JUMP JUMPDEST PUSH2 0x2A4 PUSH1 0x0 PUSH2 0x4A2 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920456E747279506F696E742063616E2063616C6C20706F73744F7000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH2 0x332 PUSH2 0x6CF JUMP JUMPDEST EQ DUP1 PUSH2 0x34F JUMPI POP PUSH1 0x1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34D PUSH2 0x6CF JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x39B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E617469766520746F6B656E207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x65EB9E4E31CBC02DD2F7EDD35F1E684132F20496511B7228C15163AFC04DC1E4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x432 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x43F PUSH2 0x475 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0x472 DUP2 PUSH2 0x4A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x574 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x557 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0x60 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SWAP11 SWAP1 PUSH14 0xF2FFCB4D0640F162C490CE368357 LOG3 0xCF LOG3 0xDC PUSH29 0xCA0875482399011B1E64736F6C634300081C0033000000000000000000 ","sourceMap":"462:2541:21:-:0;;;748:328;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;831:12;-1:-1:-1;;;;;1273:26:12;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:12;;1350:1;1322:31;;;701:51:24;674:18;;1322:31:12;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;875:25:21;::::1;867:56;;;::::0;-1:-1:-1;;;867:56:21;;965:2:24;867:56:21::1;::::0;::::1;947:21:24::0;1004:2;984:18;;;977:30;-1:-1:-1;;;1023:18:24;;;1016:48;1081:18;;867:56:21::1;763:342:24::0;867:56:21::1;-1:-1:-1::0;;;;;934:37:21;::::1;;::::0;;;982:8:::1;:20:::0;;;1018:50:::1;::::0;1256:25:24;;;1054:1:21::1;::::0;934:37;1018:50:::1;::::0;1244:2:24;1229:18;1018:50:21::1;;;;;;;748:328:::0;;;462:2541;;2912:187:12;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:12;;;-1:-1:-1;;;;;;3020:17:12;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:24:-;93:13;;-1:-1:-1;;;;;135:31:24;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;1110:177::-;462:2541:21;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_7092":{"entryPoint":null,"id":7092,"parameterSlots":0,"returnSlots":0},"@_7096":{"entryPoint":null,"id":7096,"parameterSlots":0,"returnSlots":0},"@_checkOwner_1379":{"entryPoint":1141,"id":1379,"parameterSlots":0,"returnSlots":0},"@_msgSender_1454":{"entryPoint":null,"id":1454,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1441":{"entryPoint":1186,"id":1441,"parameterSlots":1,"returnSlots":0},"@entryPoint_6904":{"entryPoint":null,"id":6904,"parameterSlots":0,"returnSlots":0},"@gasLimit_6906":{"entryPoint":null,"id":6906,"parameterSlots":0,"returnSlots":0},"@owner_1362":{"entryPoint":null,"id":1362,"parameterSlots":0,"returnSlots":1},"@postOp_7075":{"entryPoint":678,"id":7075,"parameterSlots":5,"returnSlots":0},"@renounceOwnership_1393":{"entryPoint":658,"id":1393,"parameterSlots":0,"returnSlots":0},"@setGasLimit_7088":{"entryPoint":1066,"id":7088,"parameterSlots":1,"returnSlots":0},"@transferOwnership_1421":{"entryPoint":1079,"id":1421,"parameterSlots":1,"returnSlots":0},"@validatePaymasterUserOp_7014":{"entryPoint":432,"id":7014,"parameterSlots":3,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":1617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_PostOpMode_$1049t_bytes_calldata_ptrt_uint256t_uint256":{"entryPoint":1435,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_PackedUserOperation_$1223_calldata_ptrt_bytes32t_uint256":{"entryPoint":1266,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":1592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":1350,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_31648a6ab03d74294f8bf4f36f0fc2ed8a43f78a0a4a6c7190625150250cdbb4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_64b1bc42466b5f8fdb461f14c13404ae0d0275ba3fcdcc68554699795fc89d16__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9ad3a91c3da3200577dee9e4c52a7d63d89388db4fceb16d097a3d2aac5fa4ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":1665,"id":null,"parameterSlots":2,"returnSlots":2},"panic_error_0x21":{"entryPoint":1743,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5268:24","nodeType":"YulBlock","src":"0:5268:24","statements":[{"nativeSrc":"6:3:24","nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nativeSrc":"157:438:24","nodeType":"YulBlock","src":"157:438:24","statements":[{"body":{"nativeSrc":"203:16:24","nodeType":"YulBlock","src":"203:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"212:1:24","nodeType":"YulLiteral","src":"212:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"215:1:24","nodeType":"YulLiteral","src":"215:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"205:6:24","nodeType":"YulIdentifier","src":"205:6:24"},"nativeSrc":"205:12:24","nodeType":"YulFunctionCall","src":"205:12:24"},"nativeSrc":"205:12:24","nodeType":"YulExpressionStatement","src":"205:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"178:7:24","nodeType":"YulIdentifier","src":"178:7:24"},{"name":"headStart","nativeSrc":"187:9:24","nodeType":"YulIdentifier","src":"187:9:24"}],"functionName":{"name":"sub","nativeSrc":"174:3:24","nodeType":"YulIdentifier","src":"174:3:24"},"nativeSrc":"174:23:24","nodeType":"YulFunctionCall","src":"174:23:24"},{"kind":"number","nativeSrc":"199:2:24","nodeType":"YulLiteral","src":"199:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"170:3:24","nodeType":"YulIdentifier","src":"170:3:24"},"nativeSrc":"170:32:24","nodeType":"YulFunctionCall","src":"170:32:24"},"nativeSrc":"167:52:24","nodeType":"YulIf","src":"167:52:24"},{"nativeSrc":"228:37:24","nodeType":"YulVariableDeclaration","src":"228:37:24","value":{"arguments":[{"name":"headStart","nativeSrc":"255:9:24","nodeType":"YulIdentifier","src":"255:9:24"}],"functionName":{"name":"calldataload","nativeSrc":"242:12:24","nodeType":"YulIdentifier","src":"242:12:24"},"nativeSrc":"242:23:24","nodeType":"YulFunctionCall","src":"242:23:24"},"variables":[{"name":"offset","nativeSrc":"232:6:24","nodeType":"YulTypedName","src":"232:6:24","type":""}]},{"body":{"nativeSrc":"308:16:24","nodeType":"YulBlock","src":"308:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:24","nodeType":"YulLiteral","src":"317:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:24","nodeType":"YulLiteral","src":"320:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:24","nodeType":"YulIdentifier","src":"310:6:24"},"nativeSrc":"310:12:24","nodeType":"YulFunctionCall","src":"310:12:24"},"nativeSrc":"310:12:24","nodeType":"YulExpressionStatement","src":"310:12:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"280:6:24","nodeType":"YulIdentifier","src":"280:6:24"},{"kind":"number","nativeSrc":"288:18:24","nodeType":"YulLiteral","src":"288:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"277:2:24","nodeType":"YulIdentifier","src":"277:2:24"},"nativeSrc":"277:30:24","nodeType":"YulFunctionCall","src":"277:30:24"},"nativeSrc":"274:50:24","nodeType":"YulIf","src":"274:50:24"},{"nativeSrc":"333:32:24","nodeType":"YulVariableDeclaration","src":"333:32:24","value":{"arguments":[{"name":"headStart","nativeSrc":"347:9:24","nodeType":"YulIdentifier","src":"347:9:24"},{"name":"offset","nativeSrc":"358:6:24","nodeType":"YulIdentifier","src":"358:6:24"}],"functionName":{"name":"add","nativeSrc":"343:3:24","nodeType":"YulIdentifier","src":"343:3:24"},"nativeSrc":"343:22:24","nodeType":"YulFunctionCall","src":"343:22:24"},"variables":[{"name":"_1","nativeSrc":"337:2:24","nodeType":"YulTypedName","src":"337:2:24","type":""}]},{"body":{"nativeSrc":"404:16:24","nodeType":"YulBlock","src":"404:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"413:1:24","nodeType":"YulLiteral","src":"413:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"416:1:24","nodeType":"YulLiteral","src":"416:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"406:6:24","nodeType":"YulIdentifier","src":"406:6:24"},"nativeSrc":"406:12:24","nodeType":"YulFunctionCall","src":"406:12:24"},"nativeSrc":"406:12:24","nodeType":"YulExpressionStatement","src":"406:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"385:7:24","nodeType":"YulIdentifier","src":"385:7:24"},{"name":"_1","nativeSrc":"394:2:24","nodeType":"YulIdentifier","src":"394:2:24"}],"functionName":{"name":"sub","nativeSrc":"381:3:24","nodeType":"YulIdentifier","src":"381:3:24"},"nativeSrc":"381:16:24","nodeType":"YulFunctionCall","src":"381:16:24"},{"kind":"number","nativeSrc":"399:3:24","nodeType":"YulLiteral","src":"399:3:24","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"377:3:24","nodeType":"YulIdentifier","src":"377:3:24"},"nativeSrc":"377:26:24","nodeType":"YulFunctionCall","src":"377:26:24"},"nativeSrc":"374:46:24","nodeType":"YulIf","src":"374:46:24"},{"nativeSrc":"429:12:24","nodeType":"YulAssignment","src":"429:12:24","value":{"name":"_1","nativeSrc":"439:2:24","nodeType":"YulIdentifier","src":"439:2:24"},"variableNames":[{"name":"value0","nativeSrc":"429:6:24","nodeType":"YulIdentifier","src":"429:6:24"}]},{"nativeSrc":"450:42:24","nodeType":"YulAssignment","src":"450:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"477:9:24","nodeType":"YulIdentifier","src":"477:9:24"},{"kind":"number","nativeSrc":"488:2:24","nodeType":"YulLiteral","src":"488:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"473:3:24","nodeType":"YulIdentifier","src":"473:3:24"},"nativeSrc":"473:18:24","nodeType":"YulFunctionCall","src":"473:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"460:12:24","nodeType":"YulIdentifier","src":"460:12:24"},"nativeSrc":"460:32:24","nodeType":"YulFunctionCall","src":"460:32:24"},"variableNames":[{"name":"value1","nativeSrc":"450:6:24","nodeType":"YulIdentifier","src":"450:6:24"}]},{"nativeSrc":"501:14:24","nodeType":"YulVariableDeclaration","src":"501:14:24","value":{"kind":"number","nativeSrc":"514:1:24","nodeType":"YulLiteral","src":"514:1:24","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"505:5:24","nodeType":"YulTypedName","src":"505:5:24","type":""}]},{"nativeSrc":"524:41:24","nodeType":"YulAssignment","src":"524:41:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"550:9:24","nodeType":"YulIdentifier","src":"550:9:24"},{"kind":"number","nativeSrc":"561:2:24","nodeType":"YulLiteral","src":"561:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"546:3:24","nodeType":"YulIdentifier","src":"546:3:24"},"nativeSrc":"546:18:24","nodeType":"YulFunctionCall","src":"546:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"533:12:24","nodeType":"YulIdentifier","src":"533:12:24"},"nativeSrc":"533:32:24","nodeType":"YulFunctionCall","src":"533:32:24"},"variableNames":[{"name":"value","nativeSrc":"524:5:24","nodeType":"YulIdentifier","src":"524:5:24"}]},{"nativeSrc":"574:15:24","nodeType":"YulAssignment","src":"574:15:24","value":{"name":"value","nativeSrc":"584:5:24","nodeType":"YulIdentifier","src":"584:5:24"},"variableNames":[{"name":"value2","nativeSrc":"574:6:24","nodeType":"YulIdentifier","src":"574:6:24"}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$1223_calldata_ptrt_bytes32t_uint256","nativeSrc":"14:581:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"107:9:24","nodeType":"YulTypedName","src":"107:9:24","type":""},{"name":"dataEnd","nativeSrc":"118:7:24","nodeType":"YulTypedName","src":"118:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"130:6:24","nodeType":"YulTypedName","src":"130:6:24","type":""},{"name":"value1","nativeSrc":"138:6:24","nodeType":"YulTypedName","src":"138:6:24","type":""},{"name":"value2","nativeSrc":"146:6:24","nodeType":"YulTypedName","src":"146:6:24","type":""}],"src":"14:581:24"},{"body":{"nativeSrc":"747:455:24","nodeType":"YulBlock","src":"747:455:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"764:9:24","nodeType":"YulIdentifier","src":"764:9:24"},{"kind":"number","nativeSrc":"775:2:24","nodeType":"YulLiteral","src":"775:2:24","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"757:6:24","nodeType":"YulIdentifier","src":"757:6:24"},"nativeSrc":"757:21:24","nodeType":"YulFunctionCall","src":"757:21:24"},"nativeSrc":"757:21:24","nodeType":"YulExpressionStatement","src":"757:21:24"},{"nativeSrc":"787:27:24","nodeType":"YulVariableDeclaration","src":"787:27:24","value":{"arguments":[{"name":"value0","nativeSrc":"807:6:24","nodeType":"YulIdentifier","src":"807:6:24"}],"functionName":{"name":"mload","nativeSrc":"801:5:24","nodeType":"YulIdentifier","src":"801:5:24"},"nativeSrc":"801:13:24","nodeType":"YulFunctionCall","src":"801:13:24"},"variables":[{"name":"length","nativeSrc":"791:6:24","nodeType":"YulTypedName","src":"791:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"834:9:24","nodeType":"YulIdentifier","src":"834:9:24"},{"kind":"number","nativeSrc":"845:2:24","nodeType":"YulLiteral","src":"845:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"830:3:24","nodeType":"YulIdentifier","src":"830:3:24"},"nativeSrc":"830:18:24","nodeType":"YulFunctionCall","src":"830:18:24"},{"name":"length","nativeSrc":"850:6:24","nodeType":"YulIdentifier","src":"850:6:24"}],"functionName":{"name":"mstore","nativeSrc":"823:6:24","nodeType":"YulIdentifier","src":"823:6:24"},"nativeSrc":"823:34:24","nodeType":"YulFunctionCall","src":"823:34:24"},"nativeSrc":"823:34:24","nodeType":"YulExpressionStatement","src":"823:34:24"},{"nativeSrc":"866:10:24","nodeType":"YulVariableDeclaration","src":"866:10:24","value":{"kind":"number","nativeSrc":"875:1:24","nodeType":"YulLiteral","src":"875:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"870:1:24","nodeType":"YulTypedName","src":"870:1:24","type":""}]},{"body":{"nativeSrc":"937:92:24","nodeType":"YulBlock","src":"937:92:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"966:9:24","nodeType":"YulIdentifier","src":"966:9:24"},{"name":"i","nativeSrc":"977:1:24","nodeType":"YulIdentifier","src":"977:1:24"}],"functionName":{"name":"add","nativeSrc":"962:3:24","nodeType":"YulIdentifier","src":"962:3:24"},"nativeSrc":"962:17:24","nodeType":"YulFunctionCall","src":"962:17:24"},{"kind":"number","nativeSrc":"981:2:24","nodeType":"YulLiteral","src":"981:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"958:3:24","nodeType":"YulIdentifier","src":"958:3:24"},"nativeSrc":"958:26:24","nodeType":"YulFunctionCall","src":"958:26:24"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1000:6:24","nodeType":"YulIdentifier","src":"1000:6:24"},{"name":"i","nativeSrc":"1008:1:24","nodeType":"YulIdentifier","src":"1008:1:24"}],"functionName":{"name":"add","nativeSrc":"996:3:24","nodeType":"YulIdentifier","src":"996:3:24"},"nativeSrc":"996:14:24","nodeType":"YulFunctionCall","src":"996:14:24"},{"kind":"number","nativeSrc":"1012:4:24","nodeType":"YulLiteral","src":"1012:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"992:3:24","nodeType":"YulIdentifier","src":"992:3:24"},"nativeSrc":"992:25:24","nodeType":"YulFunctionCall","src":"992:25:24"}],"functionName":{"name":"mload","nativeSrc":"986:5:24","nodeType":"YulIdentifier","src":"986:5:24"},"nativeSrc":"986:32:24","nodeType":"YulFunctionCall","src":"986:32:24"}],"functionName":{"name":"mstore","nativeSrc":"951:6:24","nodeType":"YulIdentifier","src":"951:6:24"},"nativeSrc":"951:68:24","nodeType":"YulFunctionCall","src":"951:68:24"},"nativeSrc":"951:68:24","nodeType":"YulExpressionStatement","src":"951:68:24"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"896:1:24","nodeType":"YulIdentifier","src":"896:1:24"},{"name":"length","nativeSrc":"899:6:24","nodeType":"YulIdentifier","src":"899:6:24"}],"functionName":{"name":"lt","nativeSrc":"893:2:24","nodeType":"YulIdentifier","src":"893:2:24"},"nativeSrc":"893:13:24","nodeType":"YulFunctionCall","src":"893:13:24"},"nativeSrc":"885:144:24","nodeType":"YulForLoop","post":{"nativeSrc":"907:21:24","nodeType":"YulBlock","src":"907:21:24","statements":[{"nativeSrc":"909:17:24","nodeType":"YulAssignment","src":"909:17:24","value":{"arguments":[{"name":"i","nativeSrc":"918:1:24","nodeType":"YulIdentifier","src":"918:1:24"},{"kind":"number","nativeSrc":"921:4:24","nodeType":"YulLiteral","src":"921:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"914:3:24","nodeType":"YulIdentifier","src":"914:3:24"},"nativeSrc":"914:12:24","nodeType":"YulFunctionCall","src":"914:12:24"},"variableNames":[{"name":"i","nativeSrc":"909:1:24","nodeType":"YulIdentifier","src":"909:1:24"}]}]},"pre":{"nativeSrc":"889:3:24","nodeType":"YulBlock","src":"889:3:24","statements":[]},"src":"885:144:24"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1053:9:24","nodeType":"YulIdentifier","src":"1053:9:24"},{"name":"length","nativeSrc":"1064:6:24","nodeType":"YulIdentifier","src":"1064:6:24"}],"functionName":{"name":"add","nativeSrc":"1049:3:24","nodeType":"YulIdentifier","src":"1049:3:24"},"nativeSrc":"1049:22:24","nodeType":"YulFunctionCall","src":"1049:22:24"},{"kind":"number","nativeSrc":"1073:2:24","nodeType":"YulLiteral","src":"1073:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1045:3:24","nodeType":"YulIdentifier","src":"1045:3:24"},"nativeSrc":"1045:31:24","nodeType":"YulFunctionCall","src":"1045:31:24"},{"kind":"number","nativeSrc":"1078:1:24","nodeType":"YulLiteral","src":"1078:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1038:6:24","nodeType":"YulIdentifier","src":"1038:6:24"},"nativeSrc":"1038:42:24","nodeType":"YulFunctionCall","src":"1038:42:24"},"nativeSrc":"1038:42:24","nodeType":"YulExpressionStatement","src":"1038:42:24"},{"nativeSrc":"1089:62:24","nodeType":"YulAssignment","src":"1089:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1105:9:24","nodeType":"YulIdentifier","src":"1105:9:24"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1124:6:24","nodeType":"YulIdentifier","src":"1124:6:24"},{"kind":"number","nativeSrc":"1132:2:24","nodeType":"YulLiteral","src":"1132:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1120:3:24","nodeType":"YulIdentifier","src":"1120:3:24"},"nativeSrc":"1120:15:24","nodeType":"YulFunctionCall","src":"1120:15:24"},{"arguments":[{"kind":"number","nativeSrc":"1141:2:24","nodeType":"YulLiteral","src":"1141:2:24","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1137:3:24","nodeType":"YulIdentifier","src":"1137:3:24"},"nativeSrc":"1137:7:24","nodeType":"YulFunctionCall","src":"1137:7:24"}],"functionName":{"name":"and","nativeSrc":"1116:3:24","nodeType":"YulIdentifier","src":"1116:3:24"},"nativeSrc":"1116:29:24","nodeType":"YulFunctionCall","src":"1116:29:24"}],"functionName":{"name":"add","nativeSrc":"1101:3:24","nodeType":"YulIdentifier","src":"1101:3:24"},"nativeSrc":"1101:45:24","nodeType":"YulFunctionCall","src":"1101:45:24"},{"kind":"number","nativeSrc":"1148:2:24","nodeType":"YulLiteral","src":"1148:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1097:3:24","nodeType":"YulIdentifier","src":"1097:3:24"},"nativeSrc":"1097:54:24","nodeType":"YulFunctionCall","src":"1097:54:24"},"variableNames":[{"name":"tail","nativeSrc":"1089:4:24","nodeType":"YulIdentifier","src":"1089:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1171:9:24","nodeType":"YulIdentifier","src":"1171:9:24"},{"kind":"number","nativeSrc":"1182:4:24","nodeType":"YulLiteral","src":"1182:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1167:3:24","nodeType":"YulIdentifier","src":"1167:3:24"},"nativeSrc":"1167:20:24","nodeType":"YulFunctionCall","src":"1167:20:24"},{"name":"value1","nativeSrc":"1189:6:24","nodeType":"YulIdentifier","src":"1189:6:24"}],"functionName":{"name":"mstore","nativeSrc":"1160:6:24","nodeType":"YulIdentifier","src":"1160:6:24"},"nativeSrc":"1160:36:24","nodeType":"YulFunctionCall","src":"1160:36:24"},"nativeSrc":"1160:36:24","nodeType":"YulExpressionStatement","src":"1160:36:24"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"600:602:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"708:9:24","nodeType":"YulTypedName","src":"708:9:24","type":""},{"name":"value1","nativeSrc":"719:6:24","nodeType":"YulTypedName","src":"719:6:24","type":""},{"name":"value0","nativeSrc":"727:6:24","nodeType":"YulTypedName","src":"727:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"738:4:24","nodeType":"YulTypedName","src":"738:4:24","type":""}],"src":"600:602:24"},{"body":{"nativeSrc":"1362:831:24","nodeType":"YulBlock","src":"1362:831:24","statements":[{"body":{"nativeSrc":"1409:16:24","nodeType":"YulBlock","src":"1409:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1418:1:24","nodeType":"YulLiteral","src":"1418:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1421:1:24","nodeType":"YulLiteral","src":"1421:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1411:6:24","nodeType":"YulIdentifier","src":"1411:6:24"},"nativeSrc":"1411:12:24","nodeType":"YulFunctionCall","src":"1411:12:24"},"nativeSrc":"1411:12:24","nodeType":"YulExpressionStatement","src":"1411:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1383:7:24","nodeType":"YulIdentifier","src":"1383:7:24"},{"name":"headStart","nativeSrc":"1392:9:24","nodeType":"YulIdentifier","src":"1392:9:24"}],"functionName":{"name":"sub","nativeSrc":"1379:3:24","nodeType":"YulIdentifier","src":"1379:3:24"},"nativeSrc":"1379:23:24","nodeType":"YulFunctionCall","src":"1379:23:24"},{"kind":"number","nativeSrc":"1404:3:24","nodeType":"YulLiteral","src":"1404:3:24","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1375:3:24","nodeType":"YulIdentifier","src":"1375:3:24"},"nativeSrc":"1375:33:24","nodeType":"YulFunctionCall","src":"1375:33:24"},"nativeSrc":"1372:53:24","nodeType":"YulIf","src":"1372:53:24"},{"nativeSrc":"1434:36:24","nodeType":"YulVariableDeclaration","src":"1434:36:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1460:9:24","nodeType":"YulIdentifier","src":"1460:9:24"}],"functionName":{"name":"calldataload","nativeSrc":"1447:12:24","nodeType":"YulIdentifier","src":"1447:12:24"},"nativeSrc":"1447:23:24","nodeType":"YulFunctionCall","src":"1447:23:24"},"variables":[{"name":"value","nativeSrc":"1438:5:24","nodeType":"YulTypedName","src":"1438:5:24","type":""}]},{"body":{"nativeSrc":"1503:16:24","nodeType":"YulBlock","src":"1503:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1512:1:24","nodeType":"YulLiteral","src":"1512:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1515:1:24","nodeType":"YulLiteral","src":"1515:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1505:6:24","nodeType":"YulIdentifier","src":"1505:6:24"},"nativeSrc":"1505:12:24","nodeType":"YulFunctionCall","src":"1505:12:24"},"nativeSrc":"1505:12:24","nodeType":"YulExpressionStatement","src":"1505:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1492:5:24","nodeType":"YulIdentifier","src":"1492:5:24"},{"kind":"number","nativeSrc":"1499:1:24","nodeType":"YulLiteral","src":"1499:1:24","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"1489:2:24","nodeType":"YulIdentifier","src":"1489:2:24"},"nativeSrc":"1489:12:24","nodeType":"YulFunctionCall","src":"1489:12:24"}],"functionName":{"name":"iszero","nativeSrc":"1482:6:24","nodeType":"YulIdentifier","src":"1482:6:24"},"nativeSrc":"1482:20:24","nodeType":"YulFunctionCall","src":"1482:20:24"},"nativeSrc":"1479:40:24","nodeType":"YulIf","src":"1479:40:24"},{"nativeSrc":"1528:15:24","nodeType":"YulAssignment","src":"1528:15:24","value":{"name":"value","nativeSrc":"1538:5:24","nodeType":"YulIdentifier","src":"1538:5:24"},"variableNames":[{"name":"value0","nativeSrc":"1528:6:24","nodeType":"YulIdentifier","src":"1528:6:24"}]},{"nativeSrc":"1552:46:24","nodeType":"YulVariableDeclaration","src":"1552:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1583:9:24","nodeType":"YulIdentifier","src":"1583:9:24"},{"kind":"number","nativeSrc":"1594:2:24","nodeType":"YulLiteral","src":"1594:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1579:3:24","nodeType":"YulIdentifier","src":"1579:3:24"},"nativeSrc":"1579:18:24","nodeType":"YulFunctionCall","src":"1579:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"1566:12:24","nodeType":"YulIdentifier","src":"1566:12:24"},"nativeSrc":"1566:32:24","nodeType":"YulFunctionCall","src":"1566:32:24"},"variables":[{"name":"offset","nativeSrc":"1556:6:24","nodeType":"YulTypedName","src":"1556:6:24","type":""}]},{"body":{"nativeSrc":"1641:16:24","nodeType":"YulBlock","src":"1641:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1650:1:24","nodeType":"YulLiteral","src":"1650:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1653:1:24","nodeType":"YulLiteral","src":"1653:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1643:6:24","nodeType":"YulIdentifier","src":"1643:6:24"},"nativeSrc":"1643:12:24","nodeType":"YulFunctionCall","src":"1643:12:24"},"nativeSrc":"1643:12:24","nodeType":"YulExpressionStatement","src":"1643:12:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1613:6:24","nodeType":"YulIdentifier","src":"1613:6:24"},{"kind":"number","nativeSrc":"1621:18:24","nodeType":"YulLiteral","src":"1621:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1610:2:24","nodeType":"YulIdentifier","src":"1610:2:24"},"nativeSrc":"1610:30:24","nodeType":"YulFunctionCall","src":"1610:30:24"},"nativeSrc":"1607:50:24","nodeType":"YulIf","src":"1607:50:24"},{"nativeSrc":"1666:32:24","nodeType":"YulVariableDeclaration","src":"1666:32:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1680:9:24","nodeType":"YulIdentifier","src":"1680:9:24"},{"name":"offset","nativeSrc":"1691:6:24","nodeType":"YulIdentifier","src":"1691:6:24"}],"functionName":{"name":"add","nativeSrc":"1676:3:24","nodeType":"YulIdentifier","src":"1676:3:24"},"nativeSrc":"1676:22:24","nodeType":"YulFunctionCall","src":"1676:22:24"},"variables":[{"name":"_1","nativeSrc":"1670:2:24","nodeType":"YulTypedName","src":"1670:2:24","type":""}]},{"body":{"nativeSrc":"1746:16:24","nodeType":"YulBlock","src":"1746:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1755:1:24","nodeType":"YulLiteral","src":"1755:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1758:1:24","nodeType":"YulLiteral","src":"1758:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1748:6:24","nodeType":"YulIdentifier","src":"1748:6:24"},"nativeSrc":"1748:12:24","nodeType":"YulFunctionCall","src":"1748:12:24"},"nativeSrc":"1748:12:24","nodeType":"YulExpressionStatement","src":"1748:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1725:2:24","nodeType":"YulIdentifier","src":"1725:2:24"},{"kind":"number","nativeSrc":"1729:4:24","nodeType":"YulLiteral","src":"1729:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1721:3:24","nodeType":"YulIdentifier","src":"1721:3:24"},"nativeSrc":"1721:13:24","nodeType":"YulFunctionCall","src":"1721:13:24"},{"name":"dataEnd","nativeSrc":"1736:7:24","nodeType":"YulIdentifier","src":"1736:7:24"}],"functionName":{"name":"slt","nativeSrc":"1717:3:24","nodeType":"YulIdentifier","src":"1717:3:24"},"nativeSrc":"1717:27:24","nodeType":"YulFunctionCall","src":"1717:27:24"}],"functionName":{"name":"iszero","nativeSrc":"1710:6:24","nodeType":"YulIdentifier","src":"1710:6:24"},"nativeSrc":"1710:35:24","nodeType":"YulFunctionCall","src":"1710:35:24"},"nativeSrc":"1707:55:24","nodeType":"YulIf","src":"1707:55:24"},{"nativeSrc":"1771:30:24","nodeType":"YulVariableDeclaration","src":"1771:30:24","value":{"arguments":[{"name":"_1","nativeSrc":"1798:2:24","nodeType":"YulIdentifier","src":"1798:2:24"}],"functionName":{"name":"calldataload","nativeSrc":"1785:12:24","nodeType":"YulIdentifier","src":"1785:12:24"},"nativeSrc":"1785:16:24","nodeType":"YulFunctionCall","src":"1785:16:24"},"variables":[{"name":"length","nativeSrc":"1775:6:24","nodeType":"YulTypedName","src":"1775:6:24","type":""}]},{"body":{"nativeSrc":"1844:16:24","nodeType":"YulBlock","src":"1844:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1853:1:24","nodeType":"YulLiteral","src":"1853:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1856:1:24","nodeType":"YulLiteral","src":"1856:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1846:6:24","nodeType":"YulIdentifier","src":"1846:6:24"},"nativeSrc":"1846:12:24","nodeType":"YulFunctionCall","src":"1846:12:24"},"nativeSrc":"1846:12:24","nodeType":"YulExpressionStatement","src":"1846:12:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1816:6:24","nodeType":"YulIdentifier","src":"1816:6:24"},{"kind":"number","nativeSrc":"1824:18:24","nodeType":"YulLiteral","src":"1824:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1813:2:24","nodeType":"YulIdentifier","src":"1813:2:24"},"nativeSrc":"1813:30:24","nodeType":"YulFunctionCall","src":"1813:30:24"},"nativeSrc":"1810:50:24","nodeType":"YulIf","src":"1810:50:24"},{"body":{"nativeSrc":"1910:16:24","nodeType":"YulBlock","src":"1910:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1919:1:24","nodeType":"YulLiteral","src":"1919:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1922:1:24","nodeType":"YulLiteral","src":"1922:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1912:6:24","nodeType":"YulIdentifier","src":"1912:6:24"},"nativeSrc":"1912:12:24","nodeType":"YulFunctionCall","src":"1912:12:24"},"nativeSrc":"1912:12:24","nodeType":"YulExpressionStatement","src":"1912:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1883:2:24","nodeType":"YulIdentifier","src":"1883:2:24"},{"name":"length","nativeSrc":"1887:6:24","nodeType":"YulIdentifier","src":"1887:6:24"}],"functionName":{"name":"add","nativeSrc":"1879:3:24","nodeType":"YulIdentifier","src":"1879:3:24"},"nativeSrc":"1879:15:24","nodeType":"YulFunctionCall","src":"1879:15:24"},{"kind":"number","nativeSrc":"1896:2:24","nodeType":"YulLiteral","src":"1896:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1875:3:24","nodeType":"YulIdentifier","src":"1875:3:24"},"nativeSrc":"1875:24:24","nodeType":"YulFunctionCall","src":"1875:24:24"},{"name":"dataEnd","nativeSrc":"1901:7:24","nodeType":"YulIdentifier","src":"1901:7:24"}],"functionName":{"name":"gt","nativeSrc":"1872:2:24","nodeType":"YulIdentifier","src":"1872:2:24"},"nativeSrc":"1872:37:24","nodeType":"YulFunctionCall","src":"1872:37:24"},"nativeSrc":"1869:57:24","nodeType":"YulIf","src":"1869:57:24"},{"nativeSrc":"1935:21:24","nodeType":"YulAssignment","src":"1935:21:24","value":{"arguments":[{"name":"_1","nativeSrc":"1949:2:24","nodeType":"YulIdentifier","src":"1949:2:24"},{"kind":"number","nativeSrc":"1953:2:24","nodeType":"YulLiteral","src":"1953:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1945:3:24","nodeType":"YulIdentifier","src":"1945:3:24"},"nativeSrc":"1945:11:24","nodeType":"YulFunctionCall","src":"1945:11:24"},"variableNames":[{"name":"value1","nativeSrc":"1935:6:24","nodeType":"YulIdentifier","src":"1935:6:24"}]},{"nativeSrc":"1965:16:24","nodeType":"YulAssignment","src":"1965:16:24","value":{"name":"length","nativeSrc":"1975:6:24","nodeType":"YulIdentifier","src":"1975:6:24"},"variableNames":[{"name":"value2","nativeSrc":"1965:6:24","nodeType":"YulIdentifier","src":"1965:6:24"}]},{"nativeSrc":"1990:16:24","nodeType":"YulVariableDeclaration","src":"1990:16:24","value":{"kind":"number","nativeSrc":"2005:1:24","nodeType":"YulLiteral","src":"2005:1:24","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"1994:7:24","nodeType":"YulTypedName","src":"1994:7:24","type":""}]},{"nativeSrc":"2015:43:24","nodeType":"YulAssignment","src":"2015:43:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2043:9:24","nodeType":"YulIdentifier","src":"2043:9:24"},{"kind":"number","nativeSrc":"2054:2:24","nodeType":"YulLiteral","src":"2054:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2039:3:24","nodeType":"YulIdentifier","src":"2039:3:24"},"nativeSrc":"2039:18:24","nodeType":"YulFunctionCall","src":"2039:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"2026:12:24","nodeType":"YulIdentifier","src":"2026:12:24"},"nativeSrc":"2026:32:24","nodeType":"YulFunctionCall","src":"2026:32:24"},"variableNames":[{"name":"value_1","nativeSrc":"2015:7:24","nodeType":"YulIdentifier","src":"2015:7:24"}]},{"nativeSrc":"2067:17:24","nodeType":"YulAssignment","src":"2067:17:24","value":{"name":"value_1","nativeSrc":"2077:7:24","nodeType":"YulIdentifier","src":"2077:7:24"},"variableNames":[{"name":"value3","nativeSrc":"2067:6:24","nodeType":"YulIdentifier","src":"2067:6:24"}]},{"nativeSrc":"2093:16:24","nodeType":"YulVariableDeclaration","src":"2093:16:24","value":{"kind":"number","nativeSrc":"2108:1:24","nodeType":"YulLiteral","src":"2108:1:24","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"2097:7:24","nodeType":"YulTypedName","src":"2097:7:24","type":""}]},{"nativeSrc":"2118:43:24","nodeType":"YulAssignment","src":"2118:43:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2146:9:24","nodeType":"YulIdentifier","src":"2146:9:24"},{"kind":"number","nativeSrc":"2157:2:24","nodeType":"YulLiteral","src":"2157:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2142:3:24","nodeType":"YulIdentifier","src":"2142:3:24"},"nativeSrc":"2142:18:24","nodeType":"YulFunctionCall","src":"2142:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"2129:12:24","nodeType":"YulIdentifier","src":"2129:12:24"},"nativeSrc":"2129:32:24","nodeType":"YulFunctionCall","src":"2129:32:24"},"variableNames":[{"name":"value_2","nativeSrc":"2118:7:24","nodeType":"YulIdentifier","src":"2118:7:24"}]},{"nativeSrc":"2170:17:24","nodeType":"YulAssignment","src":"2170:17:24","value":{"name":"value_2","nativeSrc":"2180:7:24","nodeType":"YulIdentifier","src":"2180:7:24"},"variableNames":[{"name":"value4","nativeSrc":"2170:6:24","nodeType":"YulIdentifier","src":"2170:6:24"}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$1049t_bytes_calldata_ptrt_uint256t_uint256","nativeSrc":"1207:986:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1296:9:24","nodeType":"YulTypedName","src":"1296:9:24","type":""},{"name":"dataEnd","nativeSrc":"1307:7:24","nodeType":"YulTypedName","src":"1307:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1319:6:24","nodeType":"YulTypedName","src":"1319:6:24","type":""},{"name":"value1","nativeSrc":"1327:6:24","nodeType":"YulTypedName","src":"1327:6:24","type":""},{"name":"value2","nativeSrc":"1335:6:24","nodeType":"YulTypedName","src":"1335:6:24","type":""},{"name":"value3","nativeSrc":"1343:6:24","nodeType":"YulTypedName","src":"1343:6:24","type":""},{"name":"value4","nativeSrc":"1351:6:24","nodeType":"YulTypedName","src":"1351:6:24","type":""}],"src":"1207:986:24"},{"body":{"nativeSrc":"2299:102:24","nodeType":"YulBlock","src":"2299:102:24","statements":[{"nativeSrc":"2309:26:24","nodeType":"YulAssignment","src":"2309:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"2321:9:24","nodeType":"YulIdentifier","src":"2321:9:24"},{"kind":"number","nativeSrc":"2332:2:24","nodeType":"YulLiteral","src":"2332:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2317:3:24","nodeType":"YulIdentifier","src":"2317:3:24"},"nativeSrc":"2317:18:24","nodeType":"YulFunctionCall","src":"2317:18:24"},"variableNames":[{"name":"tail","nativeSrc":"2309:4:24","nodeType":"YulIdentifier","src":"2309:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2351:9:24","nodeType":"YulIdentifier","src":"2351:9:24"},{"arguments":[{"name":"value0","nativeSrc":"2366:6:24","nodeType":"YulIdentifier","src":"2366:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2382:3:24","nodeType":"YulLiteral","src":"2382:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"2387:1:24","nodeType":"YulLiteral","src":"2387:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2378:3:24","nodeType":"YulIdentifier","src":"2378:3:24"},"nativeSrc":"2378:11:24","nodeType":"YulFunctionCall","src":"2378:11:24"},{"kind":"number","nativeSrc":"2391:1:24","nodeType":"YulLiteral","src":"2391:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2374:3:24","nodeType":"YulIdentifier","src":"2374:3:24"},"nativeSrc":"2374:19:24","nodeType":"YulFunctionCall","src":"2374:19:24"}],"functionName":{"name":"and","nativeSrc":"2362:3:24","nodeType":"YulIdentifier","src":"2362:3:24"},"nativeSrc":"2362:32:24","nodeType":"YulFunctionCall","src":"2362:32:24"}],"functionName":{"name":"mstore","nativeSrc":"2344:6:24","nodeType":"YulIdentifier","src":"2344:6:24"},"nativeSrc":"2344:51:24","nodeType":"YulFunctionCall","src":"2344:51:24"},"nativeSrc":"2344:51:24","nodeType":"YulExpressionStatement","src":"2344:51:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2198:203:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2268:9:24","nodeType":"YulTypedName","src":"2268:9:24","type":""},{"name":"value0","nativeSrc":"2279:6:24","nodeType":"YulTypedName","src":"2279:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2290:4:24","nodeType":"YulTypedName","src":"2290:4:24","type":""}],"src":"2198:203:24"},{"body":{"nativeSrc":"2527:102:24","nodeType":"YulBlock","src":"2527:102:24","statements":[{"nativeSrc":"2537:26:24","nodeType":"YulAssignment","src":"2537:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"2549:9:24","nodeType":"YulIdentifier","src":"2549:9:24"},{"kind":"number","nativeSrc":"2560:2:24","nodeType":"YulLiteral","src":"2560:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2545:3:24","nodeType":"YulIdentifier","src":"2545:3:24"},"nativeSrc":"2545:18:24","nodeType":"YulFunctionCall","src":"2545:18:24"},"variableNames":[{"name":"tail","nativeSrc":"2537:4:24","nodeType":"YulIdentifier","src":"2537:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2579:9:24","nodeType":"YulIdentifier","src":"2579:9:24"},{"arguments":[{"name":"value0","nativeSrc":"2594:6:24","nodeType":"YulIdentifier","src":"2594:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2610:3:24","nodeType":"YulLiteral","src":"2610:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"2615:1:24","nodeType":"YulLiteral","src":"2615:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2606:3:24","nodeType":"YulIdentifier","src":"2606:3:24"},"nativeSrc":"2606:11:24","nodeType":"YulFunctionCall","src":"2606:11:24"},{"kind":"number","nativeSrc":"2619:1:24","nodeType":"YulLiteral","src":"2619:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2602:3:24","nodeType":"YulIdentifier","src":"2602:3:24"},"nativeSrc":"2602:19:24","nodeType":"YulFunctionCall","src":"2602:19:24"}],"functionName":{"name":"and","nativeSrc":"2590:3:24","nodeType":"YulIdentifier","src":"2590:3:24"},"nativeSrc":"2590:32:24","nodeType":"YulFunctionCall","src":"2590:32:24"}],"functionName":{"name":"mstore","nativeSrc":"2572:6:24","nodeType":"YulIdentifier","src":"2572:6:24"},"nativeSrc":"2572:51:24","nodeType":"YulFunctionCall","src":"2572:51:24"},"nativeSrc":"2572:51:24","nodeType":"YulExpressionStatement","src":"2572:51:24"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed","nativeSrc":"2406:223:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2496:9:24","nodeType":"YulTypedName","src":"2496:9:24","type":""},{"name":"value0","nativeSrc":"2507:6:24","nodeType":"YulTypedName","src":"2507:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2518:4:24","nodeType":"YulTypedName","src":"2518:4:24","type":""}],"src":"2406:223:24"},{"body":{"nativeSrc":"2704:156:24","nodeType":"YulBlock","src":"2704:156:24","statements":[{"body":{"nativeSrc":"2750:16:24","nodeType":"YulBlock","src":"2750:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2759:1:24","nodeType":"YulLiteral","src":"2759:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2762:1:24","nodeType":"YulLiteral","src":"2762:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2752:6:24","nodeType":"YulIdentifier","src":"2752:6:24"},"nativeSrc":"2752:12:24","nodeType":"YulFunctionCall","src":"2752:12:24"},"nativeSrc":"2752:12:24","nodeType":"YulExpressionStatement","src":"2752:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2725:7:24","nodeType":"YulIdentifier","src":"2725:7:24"},{"name":"headStart","nativeSrc":"2734:9:24","nodeType":"YulIdentifier","src":"2734:9:24"}],"functionName":{"name":"sub","nativeSrc":"2721:3:24","nodeType":"YulIdentifier","src":"2721:3:24"},"nativeSrc":"2721:23:24","nodeType":"YulFunctionCall","src":"2721:23:24"},{"kind":"number","nativeSrc":"2746:2:24","nodeType":"YulLiteral","src":"2746:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2717:3:24","nodeType":"YulIdentifier","src":"2717:3:24"},"nativeSrc":"2717:32:24","nodeType":"YulFunctionCall","src":"2717:32:24"},"nativeSrc":"2714:52:24","nodeType":"YulIf","src":"2714:52:24"},{"nativeSrc":"2775:14:24","nodeType":"YulVariableDeclaration","src":"2775:14:24","value":{"kind":"number","nativeSrc":"2788:1:24","nodeType":"YulLiteral","src":"2788:1:24","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2779:5:24","nodeType":"YulTypedName","src":"2779:5:24","type":""}]},{"nativeSrc":"2798:32:24","nodeType":"YulAssignment","src":"2798:32:24","value":{"arguments":[{"name":"headStart","nativeSrc":"2820:9:24","nodeType":"YulIdentifier","src":"2820:9:24"}],"functionName":{"name":"calldataload","nativeSrc":"2807:12:24","nodeType":"YulIdentifier","src":"2807:12:24"},"nativeSrc":"2807:23:24","nodeType":"YulFunctionCall","src":"2807:23:24"},"variableNames":[{"name":"value","nativeSrc":"2798:5:24","nodeType":"YulIdentifier","src":"2798:5:24"}]},{"nativeSrc":"2839:15:24","nodeType":"YulAssignment","src":"2839:15:24","value":{"name":"value","nativeSrc":"2849:5:24","nodeType":"YulIdentifier","src":"2849:5:24"},"variableNames":[{"name":"value0","nativeSrc":"2839:6:24","nodeType":"YulIdentifier","src":"2839:6:24"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2634:226:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2670:9:24","nodeType":"YulTypedName","src":"2670:9:24","type":""},{"name":"dataEnd","nativeSrc":"2681:7:24","nodeType":"YulTypedName","src":"2681:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2693:6:24","nodeType":"YulTypedName","src":"2693:6:24","type":""}],"src":"2634:226:24"},{"body":{"nativeSrc":"2935:216:24","nodeType":"YulBlock","src":"2935:216:24","statements":[{"body":{"nativeSrc":"2981:16:24","nodeType":"YulBlock","src":"2981:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2990:1:24","nodeType":"YulLiteral","src":"2990:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2993:1:24","nodeType":"YulLiteral","src":"2993:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2983:6:24","nodeType":"YulIdentifier","src":"2983:6:24"},"nativeSrc":"2983:12:24","nodeType":"YulFunctionCall","src":"2983:12:24"},"nativeSrc":"2983:12:24","nodeType":"YulExpressionStatement","src":"2983:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2956:7:24","nodeType":"YulIdentifier","src":"2956:7:24"},{"name":"headStart","nativeSrc":"2965:9:24","nodeType":"YulIdentifier","src":"2965:9:24"}],"functionName":{"name":"sub","nativeSrc":"2952:3:24","nodeType":"YulIdentifier","src":"2952:3:24"},"nativeSrc":"2952:23:24","nodeType":"YulFunctionCall","src":"2952:23:24"},{"kind":"number","nativeSrc":"2977:2:24","nodeType":"YulLiteral","src":"2977:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2948:3:24","nodeType":"YulIdentifier","src":"2948:3:24"},"nativeSrc":"2948:32:24","nodeType":"YulFunctionCall","src":"2948:32:24"},"nativeSrc":"2945:52:24","nodeType":"YulIf","src":"2945:52:24"},{"nativeSrc":"3006:36:24","nodeType":"YulVariableDeclaration","src":"3006:36:24","value":{"arguments":[{"name":"headStart","nativeSrc":"3032:9:24","nodeType":"YulIdentifier","src":"3032:9:24"}],"functionName":{"name":"calldataload","nativeSrc":"3019:12:24","nodeType":"YulIdentifier","src":"3019:12:24"},"nativeSrc":"3019:23:24","nodeType":"YulFunctionCall","src":"3019:23:24"},"variables":[{"name":"value","nativeSrc":"3010:5:24","nodeType":"YulTypedName","src":"3010:5:24","type":""}]},{"body":{"nativeSrc":"3105:16:24","nodeType":"YulBlock","src":"3105:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3114:1:24","nodeType":"YulLiteral","src":"3114:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3117:1:24","nodeType":"YulLiteral","src":"3117:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3107:6:24","nodeType":"YulIdentifier","src":"3107:6:24"},"nativeSrc":"3107:12:24","nodeType":"YulFunctionCall","src":"3107:12:24"},"nativeSrc":"3107:12:24","nodeType":"YulExpressionStatement","src":"3107:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3064:5:24","nodeType":"YulIdentifier","src":"3064:5:24"},{"arguments":[{"name":"value","nativeSrc":"3075:5:24","nodeType":"YulIdentifier","src":"3075:5:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3090:3:24","nodeType":"YulLiteral","src":"3090:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"3095:1:24","nodeType":"YulLiteral","src":"3095:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3086:3:24","nodeType":"YulIdentifier","src":"3086:3:24"},"nativeSrc":"3086:11:24","nodeType":"YulFunctionCall","src":"3086:11:24"},{"kind":"number","nativeSrc":"3099:1:24","nodeType":"YulLiteral","src":"3099:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3082:3:24","nodeType":"YulIdentifier","src":"3082:3:24"},"nativeSrc":"3082:19:24","nodeType":"YulFunctionCall","src":"3082:19:24"}],"functionName":{"name":"and","nativeSrc":"3071:3:24","nodeType":"YulIdentifier","src":"3071:3:24"},"nativeSrc":"3071:31:24","nodeType":"YulFunctionCall","src":"3071:31:24"}],"functionName":{"name":"eq","nativeSrc":"3061:2:24","nodeType":"YulIdentifier","src":"3061:2:24"},"nativeSrc":"3061:42:24","nodeType":"YulFunctionCall","src":"3061:42:24"}],"functionName":{"name":"iszero","nativeSrc":"3054:6:24","nodeType":"YulIdentifier","src":"3054:6:24"},"nativeSrc":"3054:50:24","nodeType":"YulFunctionCall","src":"3054:50:24"},"nativeSrc":"3051:70:24","nodeType":"YulIf","src":"3051:70:24"},{"nativeSrc":"3130:15:24","nodeType":"YulAssignment","src":"3130:15:24","value":{"name":"value","nativeSrc":"3140:5:24","nodeType":"YulIdentifier","src":"3140:5:24"},"variableNames":[{"name":"value0","nativeSrc":"3130:6:24","nodeType":"YulIdentifier","src":"3130:6:24"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2865:286:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2901:9:24","nodeType":"YulTypedName","src":"2901:9:24","type":""},{"name":"dataEnd","nativeSrc":"2912:7:24","nodeType":"YulTypedName","src":"2912:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2924:6:24","nodeType":"YulTypedName","src":"2924:6:24","type":""}],"src":"2865:286:24"},{"body":{"nativeSrc":"3257:76:24","nodeType":"YulBlock","src":"3257:76:24","statements":[{"nativeSrc":"3267:26:24","nodeType":"YulAssignment","src":"3267:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"3279:9:24","nodeType":"YulIdentifier","src":"3279:9:24"},{"kind":"number","nativeSrc":"3290:2:24","nodeType":"YulLiteral","src":"3290:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3275:3:24","nodeType":"YulIdentifier","src":"3275:3:24"},"nativeSrc":"3275:18:24","nodeType":"YulFunctionCall","src":"3275:18:24"},"variableNames":[{"name":"tail","nativeSrc":"3267:4:24","nodeType":"YulIdentifier","src":"3267:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3309:9:24","nodeType":"YulIdentifier","src":"3309:9:24"},{"name":"value0","nativeSrc":"3320:6:24","nodeType":"YulIdentifier","src":"3320:6:24"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:24","nodeType":"YulIdentifier","src":"3302:6:24"},"nativeSrc":"3302:25:24","nodeType":"YulFunctionCall","src":"3302:25:24"},"nativeSrc":"3302:25:24","nodeType":"YulExpressionStatement","src":"3302:25:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3156:177:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3226:9:24","nodeType":"YulTypedName","src":"3226:9:24","type":""},{"name":"value0","nativeSrc":"3237:6:24","nodeType":"YulTypedName","src":"3237:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3248:4:24","nodeType":"YulTypedName","src":"3248:4:24","type":""}],"src":"3156:177:24"},{"body":{"nativeSrc":"3512:169:24","nodeType":"YulBlock","src":"3512:169:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3529:9:24","nodeType":"YulIdentifier","src":"3529:9:24"},{"kind":"number","nativeSrc":"3540:2:24","nodeType":"YulLiteral","src":"3540:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3522:6:24","nodeType":"YulIdentifier","src":"3522:6:24"},"nativeSrc":"3522:21:24","nodeType":"YulFunctionCall","src":"3522:21:24"},"nativeSrc":"3522:21:24","nodeType":"YulExpressionStatement","src":"3522:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3563:9:24","nodeType":"YulIdentifier","src":"3563:9:24"},{"kind":"number","nativeSrc":"3574:2:24","nodeType":"YulLiteral","src":"3574:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3559:3:24","nodeType":"YulIdentifier","src":"3559:3:24"},"nativeSrc":"3559:18:24","nodeType":"YulFunctionCall","src":"3559:18:24"},{"kind":"number","nativeSrc":"3579:2:24","nodeType":"YulLiteral","src":"3579:2:24","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"3552:6:24","nodeType":"YulIdentifier","src":"3552:6:24"},"nativeSrc":"3552:30:24","nodeType":"YulFunctionCall","src":"3552:30:24"},"nativeSrc":"3552:30:24","nodeType":"YulExpressionStatement","src":"3552:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3602:9:24","nodeType":"YulIdentifier","src":"3602:9:24"},{"kind":"number","nativeSrc":"3613:2:24","nodeType":"YulLiteral","src":"3613:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3598:3:24","nodeType":"YulIdentifier","src":"3598:3:24"},"nativeSrc":"3598:18:24","nodeType":"YulFunctionCall","src":"3598:18:24"},{"hexValue":"556e617574686f72697a65642063616c6c6572","kind":"string","nativeSrc":"3618:21:24","nodeType":"YulLiteral","src":"3618:21:24","type":"","value":"Unauthorized caller"}],"functionName":{"name":"mstore","nativeSrc":"3591:6:24","nodeType":"YulIdentifier","src":"3591:6:24"},"nativeSrc":"3591:49:24","nodeType":"YulFunctionCall","src":"3591:49:24"},"nativeSrc":"3591:49:24","nodeType":"YulExpressionStatement","src":"3591:49:24"},{"nativeSrc":"3649:26:24","nodeType":"YulAssignment","src":"3649:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"3661:9:24","nodeType":"YulIdentifier","src":"3661:9:24"},{"kind":"number","nativeSrc":"3672:2:24","nodeType":"YulLiteral","src":"3672:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3657:3:24","nodeType":"YulIdentifier","src":"3657:3:24"},"nativeSrc":"3657:18:24","nodeType":"YulFunctionCall","src":"3657:18:24"},"variableNames":[{"name":"tail","nativeSrc":"3649:4:24","nodeType":"YulIdentifier","src":"3649:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_64b1bc42466b5f8fdb461f14c13404ae0d0275ba3fcdcc68554699795fc89d16__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3338:343:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3489:9:24","nodeType":"YulTypedName","src":"3489:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3503:4:24","nodeType":"YulTypedName","src":"3503:4:24","type":""}],"src":"3338:343:24"},{"body":{"nativeSrc":"3780:427:24","nodeType":"YulBlock","src":"3780:427:24","statements":[{"nativeSrc":"3790:51:24","nodeType":"YulVariableDeclaration","src":"3790:51:24","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"3829:11:24","nodeType":"YulIdentifier","src":"3829:11:24"}],"functionName":{"name":"calldataload","nativeSrc":"3816:12:24","nodeType":"YulIdentifier","src":"3816:12:24"},"nativeSrc":"3816:25:24","nodeType":"YulFunctionCall","src":"3816:25:24"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"3794:18:24","nodeType":"YulTypedName","src":"3794:18:24","type":""}]},{"body":{"nativeSrc":"3930:16:24","nodeType":"YulBlock","src":"3930:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3939:1:24","nodeType":"YulLiteral","src":"3939:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3942:1:24","nodeType":"YulLiteral","src":"3942:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3932:6:24","nodeType":"YulIdentifier","src":"3932:6:24"},"nativeSrc":"3932:12:24","nodeType":"YulFunctionCall","src":"3932:12:24"},"nativeSrc":"3932:12:24","nodeType":"YulExpressionStatement","src":"3932:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"3864:18:24","nodeType":"YulIdentifier","src":"3864:18:24"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"3892:12:24","nodeType":"YulIdentifier","src":"3892:12:24"},"nativeSrc":"3892:14:24","nodeType":"YulFunctionCall","src":"3892:14:24"},{"name":"base_ref","nativeSrc":"3908:8:24","nodeType":"YulIdentifier","src":"3908:8:24"}],"functionName":{"name":"sub","nativeSrc":"3888:3:24","nodeType":"YulIdentifier","src":"3888:3:24"},"nativeSrc":"3888:29:24","nodeType":"YulFunctionCall","src":"3888:29:24"},{"arguments":[{"kind":"number","nativeSrc":"3923:2:24","nodeType":"YulLiteral","src":"3923:2:24","type":"","value":"30"}],"functionName":{"name":"not","nativeSrc":"3919:3:24","nodeType":"YulIdentifier","src":"3919:3:24"},"nativeSrc":"3919:7:24","nodeType":"YulFunctionCall","src":"3919:7:24"}],"functionName":{"name":"add","nativeSrc":"3884:3:24","nodeType":"YulIdentifier","src":"3884:3:24"},"nativeSrc":"3884:43:24","nodeType":"YulFunctionCall","src":"3884:43:24"}],"functionName":{"name":"slt","nativeSrc":"3860:3:24","nodeType":"YulIdentifier","src":"3860:3:24"},"nativeSrc":"3860:68:24","nodeType":"YulFunctionCall","src":"3860:68:24"}],"functionName":{"name":"iszero","nativeSrc":"3853:6:24","nodeType":"YulIdentifier","src":"3853:6:24"},"nativeSrc":"3853:76:24","nodeType":"YulFunctionCall","src":"3853:76:24"},"nativeSrc":"3850:96:24","nodeType":"YulIf","src":"3850:96:24"},{"nativeSrc":"3955:47:24","nodeType":"YulVariableDeclaration","src":"3955:47:24","value":{"arguments":[{"name":"base_ref","nativeSrc":"3973:8:24","nodeType":"YulIdentifier","src":"3973:8:24"},{"name":"rel_offset_of_tail","nativeSrc":"3983:18:24","nodeType":"YulIdentifier","src":"3983:18:24"}],"functionName":{"name":"add","nativeSrc":"3969:3:24","nodeType":"YulIdentifier","src":"3969:3:24"},"nativeSrc":"3969:33:24","nodeType":"YulFunctionCall","src":"3969:33:24"},"variables":[{"name":"addr_1","nativeSrc":"3959:6:24","nodeType":"YulTypedName","src":"3959:6:24","type":""}]},{"nativeSrc":"4011:30:24","nodeType":"YulAssignment","src":"4011:30:24","value":{"arguments":[{"name":"addr_1","nativeSrc":"4034:6:24","nodeType":"YulIdentifier","src":"4034:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"4021:12:24","nodeType":"YulIdentifier","src":"4021:12:24"},"nativeSrc":"4021:20:24","nodeType":"YulFunctionCall","src":"4021:20:24"},"variableNames":[{"name":"length","nativeSrc":"4011:6:24","nodeType":"YulIdentifier","src":"4011:6:24"}]},{"body":{"nativeSrc":"4084:16:24","nodeType":"YulBlock","src":"4084:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4093:1:24","nodeType":"YulLiteral","src":"4093:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"4096:1:24","nodeType":"YulLiteral","src":"4096:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4086:6:24","nodeType":"YulIdentifier","src":"4086:6:24"},"nativeSrc":"4086:12:24","nodeType":"YulFunctionCall","src":"4086:12:24"},"nativeSrc":"4086:12:24","nodeType":"YulExpressionStatement","src":"4086:12:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4056:6:24","nodeType":"YulIdentifier","src":"4056:6:24"},{"kind":"number","nativeSrc":"4064:18:24","nodeType":"YulLiteral","src":"4064:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4053:2:24","nodeType":"YulIdentifier","src":"4053:2:24"},"nativeSrc":"4053:30:24","nodeType":"YulFunctionCall","src":"4053:30:24"},"nativeSrc":"4050:50:24","nodeType":"YulIf","src":"4050:50:24"},{"nativeSrc":"4109:25:24","nodeType":"YulAssignment","src":"4109:25:24","value":{"arguments":[{"name":"addr_1","nativeSrc":"4121:6:24","nodeType":"YulIdentifier","src":"4121:6:24"},{"kind":"number","nativeSrc":"4129:4:24","nodeType":"YulLiteral","src":"4129:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4117:3:24","nodeType":"YulIdentifier","src":"4117:3:24"},"nativeSrc":"4117:17:24","nodeType":"YulFunctionCall","src":"4117:17:24"},"variableNames":[{"name":"addr","nativeSrc":"4109:4:24","nodeType":"YulIdentifier","src":"4109:4:24"}]},{"body":{"nativeSrc":"4185:16:24","nodeType":"YulBlock","src":"4185:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4194:1:24","nodeType":"YulLiteral","src":"4194:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"4197:1:24","nodeType":"YulLiteral","src":"4197:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4187:6:24","nodeType":"YulIdentifier","src":"4187:6:24"},"nativeSrc":"4187:12:24","nodeType":"YulFunctionCall","src":"4187:12:24"},"nativeSrc":"4187:12:24","nodeType":"YulExpressionStatement","src":"4187:12:24"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"4150:4:24","nodeType":"YulIdentifier","src":"4150:4:24"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"4160:12:24","nodeType":"YulIdentifier","src":"4160:12:24"},"nativeSrc":"4160:14:24","nodeType":"YulFunctionCall","src":"4160:14:24"},{"name":"length","nativeSrc":"4176:6:24","nodeType":"YulIdentifier","src":"4176:6:24"}],"functionName":{"name":"sub","nativeSrc":"4156:3:24","nodeType":"YulIdentifier","src":"4156:3:24"},"nativeSrc":"4156:27:24","nodeType":"YulFunctionCall","src":"4156:27:24"}],"functionName":{"name":"sgt","nativeSrc":"4146:3:24","nodeType":"YulIdentifier","src":"4146:3:24"},"nativeSrc":"4146:38:24","nodeType":"YulFunctionCall","src":"4146:38:24"},"nativeSrc":"4143:58:24","nodeType":"YulIf","src":"4143:58:24"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"3686:521:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"3737:8:24","nodeType":"YulTypedName","src":"3737:8:24","type":""},{"name":"ptr_to_tail","nativeSrc":"3747:11:24","nodeType":"YulTypedName","src":"3747:11:24","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"3763:4:24","nodeType":"YulTypedName","src":"3763:4:24","type":""},{"name":"length","nativeSrc":"3769:6:24","nodeType":"YulTypedName","src":"3769:6:24","type":""}],"src":"3686:521:24"},{"body":{"nativeSrc":"4386:181:24","nodeType":"YulBlock","src":"4386:181:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4403:9:24","nodeType":"YulIdentifier","src":"4403:9:24"},{"kind":"number","nativeSrc":"4414:2:24","nodeType":"YulLiteral","src":"4414:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4396:6:24","nodeType":"YulIdentifier","src":"4396:6:24"},"nativeSrc":"4396:21:24","nodeType":"YulFunctionCall","src":"4396:21:24"},"nativeSrc":"4396:21:24","nodeType":"YulExpressionStatement","src":"4396:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4437:9:24","nodeType":"YulIdentifier","src":"4437:9:24"},{"kind":"number","nativeSrc":"4448:2:24","nodeType":"YulLiteral","src":"4448:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4433:3:24","nodeType":"YulIdentifier","src":"4433:3:24"},"nativeSrc":"4433:18:24","nodeType":"YulFunctionCall","src":"4433:18:24"},{"kind":"number","nativeSrc":"4453:2:24","nodeType":"YulLiteral","src":"4453:2:24","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"4426:6:24","nodeType":"YulIdentifier","src":"4426:6:24"},"nativeSrc":"4426:30:24","nodeType":"YulFunctionCall","src":"4426:30:24"},"nativeSrc":"4426:30:24","nodeType":"YulExpressionStatement","src":"4426:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4476:9:24","nodeType":"YulIdentifier","src":"4476:9:24"},{"kind":"number","nativeSrc":"4487:2:24","nodeType":"YulLiteral","src":"4487:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4472:3:24","nodeType":"YulIdentifier","src":"4472:3:24"},"nativeSrc":"4472:18:24","nodeType":"YulFunctionCall","src":"4472:18:24"},{"hexValue":"4f6e6c7920456e747279506f696e742063616e2063616c6c20706f73744f70","kind":"string","nativeSrc":"4492:33:24","nodeType":"YulLiteral","src":"4492:33:24","type":"","value":"Only EntryPoint can call postOp"}],"functionName":{"name":"mstore","nativeSrc":"4465:6:24","nodeType":"YulIdentifier","src":"4465:6:24"},"nativeSrc":"4465:61:24","nodeType":"YulFunctionCall","src":"4465:61:24"},"nativeSrc":"4465:61:24","nodeType":"YulExpressionStatement","src":"4465:61:24"},{"nativeSrc":"4535:26:24","nodeType":"YulAssignment","src":"4535:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"4547:9:24","nodeType":"YulIdentifier","src":"4547:9:24"},{"kind":"number","nativeSrc":"4558:2:24","nodeType":"YulLiteral","src":"4558:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4543:3:24","nodeType":"YulIdentifier","src":"4543:3:24"},"nativeSrc":"4543:18:24","nodeType":"YulFunctionCall","src":"4543:18:24"},"variableNames":[{"name":"tail","nativeSrc":"4535:4:24","nodeType":"YulIdentifier","src":"4535:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ad3a91c3da3200577dee9e4c52a7d63d89388db4fceb16d097a3d2aac5fa4ca__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4212:355:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4363:9:24","nodeType":"YulTypedName","src":"4363:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4377:4:24","nodeType":"YulTypedName","src":"4377:4:24","type":""}],"src":"4212:355:24"},{"body":{"nativeSrc":"4604:95:24","nodeType":"YulBlock","src":"4604:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4621:1:24","nodeType":"YulLiteral","src":"4621:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4628:3:24","nodeType":"YulLiteral","src":"4628:3:24","type":"","value":"224"},{"kind":"number","nativeSrc":"4633:10:24","nodeType":"YulLiteral","src":"4633:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4624:3:24","nodeType":"YulIdentifier","src":"4624:3:24"},"nativeSrc":"4624:20:24","nodeType":"YulFunctionCall","src":"4624:20:24"}],"functionName":{"name":"mstore","nativeSrc":"4614:6:24","nodeType":"YulIdentifier","src":"4614:6:24"},"nativeSrc":"4614:31:24","nodeType":"YulFunctionCall","src":"4614:31:24"},"nativeSrc":"4614:31:24","nodeType":"YulExpressionStatement","src":"4614:31:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4661:1:24","nodeType":"YulLiteral","src":"4661:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"4664:4:24","nodeType":"YulLiteral","src":"4664:4:24","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"4654:6:24","nodeType":"YulIdentifier","src":"4654:6:24"},"nativeSrc":"4654:15:24","nodeType":"YulFunctionCall","src":"4654:15:24"},"nativeSrc":"4654:15:24","nodeType":"YulExpressionStatement","src":"4654:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4685:1:24","nodeType":"YulLiteral","src":"4685:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"4688:4:24","nodeType":"YulLiteral","src":"4688:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4678:6:24","nodeType":"YulIdentifier","src":"4678:6:24"},"nativeSrc":"4678:15:24","nodeType":"YulFunctionCall","src":"4678:15:24"},"nativeSrc":"4678:15:24","nodeType":"YulExpressionStatement","src":"4678:15:24"}]},"name":"panic_error_0x21","nativeSrc":"4572:127:24","nodeType":"YulFunctionDefinition","src":"4572:127:24"},{"body":{"nativeSrc":"4895:14:24","nodeType":"YulBlock","src":"4895:14:24","statements":[{"nativeSrc":"4897:10:24","nodeType":"YulAssignment","src":"4897:10:24","value":{"name":"pos","nativeSrc":"4904:3:24","nodeType":"YulIdentifier","src":"4904:3:24"},"variableNames":[{"name":"end","nativeSrc":"4897:3:24","nodeType":"YulIdentifier","src":"4897:3:24"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"4704:205:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4879:3:24","nodeType":"YulTypedName","src":"4879:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4887:3:24","nodeType":"YulTypedName","src":"4887:3:24","type":""}],"src":"4704:205:24"},{"body":{"nativeSrc":"5088:178:24","nodeType":"YulBlock","src":"5088:178:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5105:9:24","nodeType":"YulIdentifier","src":"5105:9:24"},{"kind":"number","nativeSrc":"5116:2:24","nodeType":"YulLiteral","src":"5116:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5098:6:24","nodeType":"YulIdentifier","src":"5098:6:24"},"nativeSrc":"5098:21:24","nodeType":"YulFunctionCall","src":"5098:21:24"},"nativeSrc":"5098:21:24","nodeType":"YulExpressionStatement","src":"5098:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:24","nodeType":"YulIdentifier","src":"5139:9:24"},{"kind":"number","nativeSrc":"5150:2:24","nodeType":"YulLiteral","src":"5150:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5135:3:24","nodeType":"YulIdentifier","src":"5135:3:24"},"nativeSrc":"5135:18:24","nodeType":"YulFunctionCall","src":"5135:18:24"},{"kind":"number","nativeSrc":"5155:2:24","nodeType":"YulLiteral","src":"5155:2:24","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"5128:6:24","nodeType":"YulIdentifier","src":"5128:6:24"},"nativeSrc":"5128:30:24","nodeType":"YulFunctionCall","src":"5128:30:24"},"nativeSrc":"5128:30:24","nodeType":"YulExpressionStatement","src":"5128:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5178:9:24","nodeType":"YulIdentifier","src":"5178:9:24"},{"kind":"number","nativeSrc":"5189:2:24","nodeType":"YulLiteral","src":"5189:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5174:3:24","nodeType":"YulIdentifier","src":"5174:3:24"},"nativeSrc":"5174:18:24","nodeType":"YulFunctionCall","src":"5174:18:24"},{"hexValue":"4e617469766520746f6b656e207472616e73666572206661696c6564","kind":"string","nativeSrc":"5194:30:24","nodeType":"YulLiteral","src":"5194:30:24","type":"","value":"Native token transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"5167:6:24","nodeType":"YulIdentifier","src":"5167:6:24"},"nativeSrc":"5167:58:24","nodeType":"YulFunctionCall","src":"5167:58:24"},"nativeSrc":"5167:58:24","nodeType":"YulExpressionStatement","src":"5167:58:24"},{"nativeSrc":"5234:26:24","nodeType":"YulAssignment","src":"5234:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"5246:9:24","nodeType":"YulIdentifier","src":"5246:9:24"},{"kind":"number","nativeSrc":"5257:2:24","nodeType":"YulLiteral","src":"5257:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5242:3:24","nodeType":"YulIdentifier","src":"5242:3:24"},"nativeSrc":"5242:18:24","nodeType":"YulFunctionCall","src":"5242:18:24"},"variableNames":[{"name":"tail","nativeSrc":"5234:4:24","nodeType":"YulIdentifier","src":"5234:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_31648a6ab03d74294f8bf4f36f0fc2ed8a43f78a0a4a6c7190625150250cdbb4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4914:352:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5065:9:24","nodeType":"YulTypedName","src":"5065:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5079:4:24","nodeType":"YulTypedName","src":"5079:4:24","type":""}],"src":"4914:352:24"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$1223_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 288) { revert(0, 0) }\n        value0 := _1\n        value1 := calldataload(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value0, i), 0x20)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), value1)\n    }\n    function abi_decode_tuple_t_enum$_PostOpMode_$1049t_bytes_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_1, 32)\n        value2 := length\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 96))\n        value4 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_64b1bc42466b5f8fdb461f14c13404ae0d0275ba3fcdcc68554699795fc89d16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Unauthorized caller\")\n        tail := add(headStart, 96)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_9ad3a91c3da3200577dee9e4c52a7d63d89388db4fceb16d097a3d2aac5fa4ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Only EntryPoint can call postOp\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_31648a6ab03d74294f8bf4f36f0fc2ed8a43f78a0a4a6c7190625150250cdbb4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Native token transfer failed\")\n        tail := add(headStart, 96)\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"6904":[{"length":32,"start":298},{"length":32,"start":447},{"length":32,"start":689}]},"linkReferences":{},"object":"6080604052600436106100785760003560e01c8063b0d691fe1161004b578063b0d691fe14610118578063ee7d72b41461014c578063f2fde38b1461016c578063f68016b71461018c57005b806352b7512c1461007a578063715018a6146100b15780637c627b21146100c65780638da5cb5b146100e6575b005b34801561008657600080fd5b5061009a6100953660046104f2565b6101b0565b6040516100a8929190610546565b60405180910390f35b3480156100bd57600080fd5b50610078610292565b3480156100d257600080fd5b506100786100e136600461059b565b6102a6565b3480156100f257600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100a8565b34801561012457600080fd5b506101007f000000000000000000000000000000000000000000000000000000000000000081565b34801561015857600080fd5b50610078610167366004610638565b61042a565b34801561017857600080fd5b50610078610187366004610651565b610437565b34801561019857600080fd5b506101a260015481565b6040519081526020016100a8565b60606000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102275760405162461bcd60e51b81526020600482015260136024820152722ab730baba3437b934bd32b21031b0b63632b960691b60448201526064015b60405180910390fd5b6102346040860186610681565b9050600003610255575050604080516020810190915260008152600161028a565b600154831115610277575050604080516020810190915260008152600161028a565b5050604080516020810190915260008082525b935093915050565b61029a610475565b6102a460006104a2565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461031e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920456e747279506f696e742063616e2063616c6c20706f73744f7000604482015260640161021e565b6000856002811115610332576103326106cf565b148061034f5750600185600281111561034d5761034d6106cf565b145b156103ee57604051600090339084908381818185875af1925050503d8060008114610396576040519150601f19603f3d011682016040523d82523d6000602084013e61039b565b606091505b50509050806103ec5760405162461bcd60e51b815260206004820152601c60248201527f4e617469766520746f6b656e207472616e73666572206661696c656400000000604482015260640161021e565b505b60405182815233907f65eb9e4e31cbc02dd2f7edd35f1e684132f20496511b7228c15163afc04dc1e49060200160405180910390a25050505050565b610432610475565b600155565b61043f610475565b6001600160a01b03811661046957604051631e4fbdf760e01b81526000600482015260240161021e565b610472816104a2565b50565b6000546001600160a01b031633146102a45760405163118cdaa760e01b815233600482015260240161021e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006060848603121561050757600080fd5b833567ffffffffffffffff81111561051e57600080fd5b8401610120818703121561053157600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b818110156105745760208187018101516060868401015201610557565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b6000806000806000608086880312156105b357600080fd5b8535600381106105c257600080fd5b9450602086013567ffffffffffffffff8111156105de57600080fd5b8601601f810188136105ef57600080fd5b803567ffffffffffffffff81111561060657600080fd5b88602082840101111561061857600080fd5b959860209190910197509495604081013595606090910135945092505050565b60006020828403121561064a57600080fd5b5035919050565b60006020828403121561066357600080fd5b81356001600160a01b038116811461067a57600080fd5b9392505050565b6000808335601e1984360301811261069857600080fd5b83018035915067ffffffffffffffff8211156106b357600080fd5b6020019150368190038213156106c857600080fd5b9250929050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209d9a906df2ffcb4d0640f162c490ce368357a3cfa3dc7cca0875482399011b1e64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0D691FE GT PUSH2 0x4B JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xEE7D72B4 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xF68016B7 EQ PUSH2 0x18C JUMPI STOP JUMPDEST DUP1 PUSH4 0x52B7512C EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x95 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP3 SWAP2 SWAP1 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH2 0x292 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x59B JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x651 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2AB730BABA3437B934BD32B21031B0B63632B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x234 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x255 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x1 SLOAD DUP4 GT ISZERO PUSH2 0x277 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH2 0x28A JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29A PUSH2 0x475 JUMP JUMPDEST PUSH2 0x2A4 PUSH1 0x0 PUSH2 0x4A2 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920456E747279506F696E742063616E2063616C6C20706F73744F7000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH2 0x332 PUSH2 0x6CF JUMP JUMPDEST EQ DUP1 PUSH2 0x34F JUMPI POP PUSH1 0x1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x34D JUMPI PUSH2 0x34D PUSH2 0x6CF JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x39B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E617469766520746F6B656E207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x65EB9E4E31CBC02DD2F7EDD35F1E684132F20496511B7228C15163AFC04DC1E4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x432 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x43F PUSH2 0x475 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0x472 DUP2 PUSH2 0x4A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x574 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x557 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0x60 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SWAP11 SWAP1 PUSH14 0xF2FFCB4D0640F162C490CE368357 LOG3 0xCF LOG3 0xDC PUSH29 0xCA0875482399011B1E64736F6C634300081C0033000000000000000000 ","sourceMap":"462:2541:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:743;;;;;;;;;;-1:-1:-1;1273:743:21;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2293:101:12;;;;;;;;;;;;;:::i;2152:575:21:-;;;;;;;;;;-1:-1:-1;2152:575:21;;;;;:::i;:::-;;:::i;1638:85:12:-;;;;;;;;;;-1:-1:-1;1684:7:12;1710:6;-1:-1:-1;;;;;1710:6:12;1638:85;;;-1:-1:-1;;;;;2362:32:24;;;2344:51;;2332:2;2317:18;1638:85:12;2198:203:24;511:39:21;;;;;;;;;;;;;;;2825:102;;;;;;;;;;-1:-1:-1;2825:102:21;;;;;:::i;:::-;;:::i;2543:215:12:-;;;;;;;;;;-1:-1:-1;2543:215:12;;;;;:::i;:::-;;:::i;557:23:21:-;;;;;;;;;;;;;;;;;;;3302:25:24;;;3290:2;3275:18;557:23:21;3156:177:24;1273:743:21;1457:20;1479:22;1522:10;-1:-1:-1;;;;;1544:10:21;1522:33;;1514:65;;;;-1:-1:-1;;;1514:65:21;;3540:2:24;1514:65:21;;;3522:21:24;3579:2;3559:18;;;3552:30;-1:-1:-1;;;3598:18:24;;;3591:49;3657:18;;1514:65:21;;;;;;;;;1678:15;;;;:6;:15;:::i;:::-;:22;;1704:1;1678:27;1674:123;;-1:-1:-1;;1722:14:21;;;;;;;;;-1:-1:-1;1722:14:21;;1734:1;1722:14;;1674:123;1901:8;;1883:15;:26;1879:73;;;-1:-1:-1;;1926:14:21;;;;;;;;;-1:-1:-1;1926:14:21;;1938:1;1926:14;;1879:73;-1:-1:-1;;1968:14:21;;;;;;;;;1980:1;1968:14;;;1273:743;;;;;;;:::o;2293:101:12:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2152:575:21:-;2353:10;-1:-1:-1;;;;;2375:10:21;2353:33;;2345:77;;;;-1:-1:-1;;;2345:77:21;;4414:2:24;2345:77:21;;;4396:21:24;4453:2;4433:18;;;4426:30;4492:33;4472:18;;;4465:61;4543:18;;2345:77:21;4212:355:24;2345:77:21;2447:22;2439:4;:30;;;;;;;;:::i;:::-;;:63;;;-1:-1:-1;2481:21:21;2473:4;:29;;;;;;;;:::i;:::-;;2439:63;2435:230;;;2538:50;;2520:12;;2546:10;;2570:13;;2520:12;2538:50;2520:12;2538:50;2570:13;2546:10;2538:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2519:69;;;2611:7;2603:48;;;;-1:-1:-1;;;2603:48:21;;5116:2:24;2603:48:21;;;5098:21:24;5155:2;5135:18;;;5128:30;5194;5174:18;;;5167:58;5242:18;;2603:48:21;4914:352:24;2603:48:21;2504:161;2435:230;2682:37;;3302:25:24;;;2693:10:21;;2682:37;;3290:2:24;3275:18;2682:37:21;;;;;;;2152:575;;;;;:::o;2825:102::-;1531:13:12;:11;:13::i;:::-;2897:8:21::1;:22:::0;2825:102::o;2543:215:12:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:12;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:12;;2700:1:::1;2672:31;::::0;::::1;2344:51:24::0;2317:18;;2672:31:12::1;2198:203:24::0;2623:91:12::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:12;735:10:13;1855:23:12;1851:101;;1901:40;;-1:-1:-1;;;1901:40:12;;735:10:13;1901:40:12;;;2344:51:24;2317:18;;1901:40:12;2198:203:24;2912:187:12;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:12;;;-1:-1:-1;;;;;;3020:17:12;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:581:24:-;130:6;138;146;199:2;187:9;178:7;174:23;170:32;167:52;;;215:1;212;205:12;167:52;255:9;242:23;288:18;280:6;277:30;274:50;;;320:1;317;310:12;274:50;343:22;;399:3;381:16;;;377:26;374:46;;;416:1;413;406:12;374:46;439:2;488;473:18;;460:32;;-1:-1:-1;561:2:24;546:18;;;533:32;;14:581;-1:-1:-1;;;14:581:24:o;600:602::-;775:2;764:9;757:21;738:4;807:6;801:13;850:6;845:2;834:9;830:18;823:34;875:1;885:144;899:6;896:1;893:13;885:144;;;1012:4;996:14;;;992:25;;986:32;981:2;962:17;;;958:26;951:68;914:12;885:144;;;889:3;1078:1;1073:2;1064:6;1053:9;1049:22;1045:31;1038:42;1148:2;1141;1137:7;1132:2;1124:6;1120:15;1116:29;1105:9;1101:45;1097:54;1089:62;;;1189:6;1182:4;1171:9;1167:20;1160:36;600:602;;;;;:::o;1207:986::-;1319:6;1327;1335;1343;1351;1404:3;1392:9;1383:7;1379:23;1375:33;1372:53;;;1421:1;1418;1411:12;1372:53;1460:9;1447:23;1499:1;1492:5;1489:12;1479:40;;1515:1;1512;1505:12;1479:40;1538:5;-1:-1:-1;1594:2:24;1579:18;;1566:32;1621:18;1610:30;;1607:50;;;1653:1;1650;1643:12;1607:50;1676:22;;1729:4;1721:13;;1717:27;-1:-1:-1;1707:55:24;;1758:1;1755;1748:12;1707:55;1798:2;1785:16;1824:18;1816:6;1813:30;1810:50;;;1856:1;1853;1846:12;1810:50;1901:7;1896:2;1887:6;1883:2;1879:15;1875:24;1872:37;1869:57;;;1922:1;1919;1912:12;1869:57;1207:986;;1953:2;1945:11;;;;;-1:-1:-1;1975:6:24;;2054:2;2039:18;;2026:32;;2157:2;2142:18;;;2129:32;;-1:-1:-1;1207:986:24;-1:-1:-1;;;1207:986:24:o;2634:226::-;2693:6;2746:2;2734:9;2725:7;2721:23;2717:32;2714:52;;;2762:1;2759;2752:12;2714:52;-1:-1:-1;2807:23:24;;2634:226;-1:-1:-1;2634:226:24:o;2865:286::-;2924:6;2977:2;2965:9;2956:7;2952:23;2948:32;2945:52;;;2993:1;2990;2983:12;2945:52;3019:23;;-1:-1:-1;;;;;3071:31:24;;3061:42;;3051:70;;3117:1;3114;3107:12;3051:70;3140:5;2865:286;-1:-1:-1;;;2865:286:24:o;3686:521::-;3763:4;3769:6;3829:11;3816:25;3923:2;3919:7;3908:8;3892:14;3888:29;3884:43;3864:18;3860:68;3850:96;;3942:1;3939;3932:12;3850:96;3969:33;;4021:20;;;-1:-1:-1;4064:18:24;4053:30;;4050:50;;;4096:1;4093;4086:12;4050:50;4129:4;4117:17;;-1:-1:-1;4160:14:24;4156:27;;;4146:38;;4143:58;;;4197:1;4194;4187:12;4143:58;3686:521;;;;;:::o;4572:127::-;4633:10;4628:3;4624:20;4621:1;4614:31;4664:4;4661:1;4654:15;4688:4;4685:1;4678:15"},"methodIdentifiers":{"entryPoint()":"b0d691fe","gasLimit()":"f68016b7","owner()":"8da5cb5b","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","setGasLimit(uint256)":"ee7d72b4","transferOwnership(address)":"f2fde38b","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GasPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"PaymasterSetup\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasLimit\",\"type\":\"uint256\"}],\"name\":\"setGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"requiredPreFund\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"details\":\"Called only by EntryPoint.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"This version simply checks if gas required is within allowed limits.\"}},\"title\":\"Sponsored Paymaster\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Pays the gas fee after the operation completes.\"},\"setGasLimit(uint256)\":{\"notice\":\"Updates the gas limit allowed for sponsored operations.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validates whether this paymaster will sponsor the given UserOperation.\"}},\"notice\":\"This contract pays gas fees on behalf of users using its own ERC20 token balance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PayMaster.sol\":\"Paymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x6be37abc0760d60a41124e2e3f46185a0d3df48b32bd73174790981f76fbdae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c144ba15a63883c7da41fc0729a46108f7d5487dbac2da0bde00aed67f5a2f00\",\"dweb:/ipfs/Qmdh7MzQmCQLh7wz719xMuG2yvMUkKDVwyN44P7pLofJfS\"]},\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/PayMaster.sol\":{\"keccak256\":\"0xcb0342f626fd39a2c0046d6b3b51d4718c43d333241cea91ef8bef9a7a6d03a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2babda081b8659dab154027206c6d545b40afabd63615adb38b49a067eb1f68c\",\"dweb:/ipfs/QmeZ1zgWXFbK5hupRJ7mdUiSjk1G1PuA91yHuXXMKE6iEA\"]}},\"version\":1}"}},"contracts/SmartAccount.sol":{"SmartAccount":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"entryPoint_","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"error","type":"bytes"}],"name":"ExecuteError","type":"error"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"func","type":"bytes"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct BaseAccount.Call[]","name":"calls","type":"tuple[]"}],"name":"executeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_7134":{"entryPoint":null,"id":7134,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_contract$_IEntryPoint_$1022t_address_fromMemory":{"entryPoint":111,"id":null,"parameterSlots":2,"returnSlots":2},"validator_revert_contract_IEntryPoint":{"entryPoint":87,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:596:24","nodeType":"YulBlock","src":"0:596:24","statements":[{"nativeSrc":"6:3:24","nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nativeSrc":"72:86:24","nodeType":"YulBlock","src":"72:86:24","statements":[{"body":{"nativeSrc":"136:16:24","nodeType":"YulBlock","src":"136:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"145:1:24","nodeType":"YulLiteral","src":"145:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"148:1:24","nodeType":"YulLiteral","src":"148:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"138:6:24","nodeType":"YulIdentifier","src":"138:6:24"},"nativeSrc":"138:12:24","nodeType":"YulFunctionCall","src":"138:12:24"},"nativeSrc":"138:12:24","nodeType":"YulExpressionStatement","src":"138:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"95:5:24","nodeType":"YulIdentifier","src":"95:5:24"},{"arguments":[{"name":"value","nativeSrc":"106:5:24","nodeType":"YulIdentifier","src":"106:5:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"121:3:24","nodeType":"YulLiteral","src":"121:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"126:1:24","nodeType":"YulLiteral","src":"126:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"117:3:24","nodeType":"YulIdentifier","src":"117:3:24"},"nativeSrc":"117:11:24","nodeType":"YulFunctionCall","src":"117:11:24"},{"kind":"number","nativeSrc":"130:1:24","nodeType":"YulLiteral","src":"130:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"113:3:24","nodeType":"YulIdentifier","src":"113:3:24"},"nativeSrc":"113:19:24","nodeType":"YulFunctionCall","src":"113:19:24"}],"functionName":{"name":"and","nativeSrc":"102:3:24","nodeType":"YulIdentifier","src":"102:3:24"},"nativeSrc":"102:31:24","nodeType":"YulFunctionCall","src":"102:31:24"}],"functionName":{"name":"eq","nativeSrc":"92:2:24","nodeType":"YulIdentifier","src":"92:2:24"},"nativeSrc":"92:42:24","nodeType":"YulFunctionCall","src":"92:42:24"}],"functionName":{"name":"iszero","nativeSrc":"85:6:24","nodeType":"YulIdentifier","src":"85:6:24"},"nativeSrc":"85:50:24","nodeType":"YulFunctionCall","src":"85:50:24"},"nativeSrc":"82:70:24","nodeType":"YulIf","src":"82:70:24"}]},"name":"validator_revert_contract_IEntryPoint","nativeSrc":"14:144:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"61:5:24","nodeType":"YulTypedName","src":"61:5:24","type":""}],"src":"14:144:24"},{"body":{"nativeSrc":"281:313:24","nodeType":"YulBlock","src":"281:313:24","statements":[{"body":{"nativeSrc":"327:16:24","nodeType":"YulBlock","src":"327:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"336:1:24","nodeType":"YulLiteral","src":"336:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"339:1:24","nodeType":"YulLiteral","src":"339:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"329:6:24","nodeType":"YulIdentifier","src":"329:6:24"},"nativeSrc":"329:12:24","nodeType":"YulFunctionCall","src":"329:12:24"},"nativeSrc":"329:12:24","nodeType":"YulExpressionStatement","src":"329:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"302:7:24","nodeType":"YulIdentifier","src":"302:7:24"},{"name":"headStart","nativeSrc":"311:9:24","nodeType":"YulIdentifier","src":"311:9:24"}],"functionName":{"name":"sub","nativeSrc":"298:3:24","nodeType":"YulIdentifier","src":"298:3:24"},"nativeSrc":"298:23:24","nodeType":"YulFunctionCall","src":"298:23:24"},{"kind":"number","nativeSrc":"323:2:24","nodeType":"YulLiteral","src":"323:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"294:3:24","nodeType":"YulIdentifier","src":"294:3:24"},"nativeSrc":"294:32:24","nodeType":"YulFunctionCall","src":"294:32:24"},"nativeSrc":"291:52:24","nodeType":"YulIf","src":"291:52:24"},{"nativeSrc":"352:29:24","nodeType":"YulVariableDeclaration","src":"352:29:24","value":{"arguments":[{"name":"headStart","nativeSrc":"371:9:24","nodeType":"YulIdentifier","src":"371:9:24"}],"functionName":{"name":"mload","nativeSrc":"365:5:24","nodeType":"YulIdentifier","src":"365:5:24"},"nativeSrc":"365:16:24","nodeType":"YulFunctionCall","src":"365:16:24"},"variables":[{"name":"value","nativeSrc":"356:5:24","nodeType":"YulTypedName","src":"356:5:24","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"428:5:24","nodeType":"YulIdentifier","src":"428:5:24"}],"functionName":{"name":"validator_revert_contract_IEntryPoint","nativeSrc":"390:37:24","nodeType":"YulIdentifier","src":"390:37:24"},"nativeSrc":"390:44:24","nodeType":"YulFunctionCall","src":"390:44:24"},"nativeSrc":"390:44:24","nodeType":"YulExpressionStatement","src":"390:44:24"},{"nativeSrc":"443:15:24","nodeType":"YulAssignment","src":"443:15:24","value":{"name":"value","nativeSrc":"453:5:24","nodeType":"YulIdentifier","src":"453:5:24"},"variableNames":[{"name":"value0","nativeSrc":"443:6:24","nodeType":"YulIdentifier","src":"443:6:24"}]},{"nativeSrc":"467:40:24","nodeType":"YulVariableDeclaration","src":"467:40:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"492:9:24","nodeType":"YulIdentifier","src":"492:9:24"},{"kind":"number","nativeSrc":"503:2:24","nodeType":"YulLiteral","src":"503:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"488:3:24","nodeType":"YulIdentifier","src":"488:3:24"},"nativeSrc":"488:18:24","nodeType":"YulFunctionCall","src":"488:18:24"}],"functionName":{"name":"mload","nativeSrc":"482:5:24","nodeType":"YulIdentifier","src":"482:5:24"},"nativeSrc":"482:25:24","nodeType":"YulFunctionCall","src":"482:25:24"},"variables":[{"name":"value_1","nativeSrc":"471:7:24","nodeType":"YulTypedName","src":"471:7:24","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"554:7:24","nodeType":"YulIdentifier","src":"554:7:24"}],"functionName":{"name":"validator_revert_contract_IEntryPoint","nativeSrc":"516:37:24","nodeType":"YulIdentifier","src":"516:37:24"},"nativeSrc":"516:46:24","nodeType":"YulFunctionCall","src":"516:46:24"},"nativeSrc":"516:46:24","nodeType":"YulExpressionStatement","src":"516:46:24"},{"nativeSrc":"571:17:24","nodeType":"YulAssignment","src":"571:17:24","value":{"name":"value_1","nativeSrc":"581:7:24","nodeType":"YulIdentifier","src":"581:7:24"},"variableNames":[{"name":"value1","nativeSrc":"571:6:24","nodeType":"YulIdentifier","src":"571:6:24"}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$1022t_address_fromMemory","nativeSrc":"163:431:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"239:9:24","nodeType":"YulTypedName","src":"239:9:24","type":""},{"name":"dataEnd","nativeSrc":"250:7:24","nodeType":"YulTypedName","src":"250:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"262:6:24","nodeType":"YulTypedName","src":"262:6:24","type":""},{"name":"value1","nativeSrc":"270:6:24","nodeType":"YulTypedName","src":"270:6:24","type":""}],"src":"163:431:24"}]},"contents":"{\n    { }\n    function validator_revert_contract_IEntryPoint(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IEntryPoint_$1022t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IEntryPoint(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IEntryPoint(value_1)\n        value1 := value_1\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50604051610bbb380380610bbb83398101604081905261002f9161006f565b6001600160a01b03918216608052600080546001600160a01b031916919092161790556100a9565b6001600160a01b038116811461006c57600080fd5b50565b6000806040838503121561008257600080fd5b825161008d81610057565b602084015190925061009e81610057565b809150509250929050565b608051610ae96100d2600039600081816101320152818161039a015261043a0152610ae96000f3fe6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e01461010d578063b0d691fe14610123578063b61d27f614610156578063d087d2881461017657600080fd5b806319822f7c1461008057806334fcd5be146100b35780638da5cb5b146100d557600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461080f565b61018b565b6040519081526020015b60405180910390f35b3480156100bf57600080fd5b506100d36100ce366004610863565b6101b1565b005b3480156100e157600080fd5b506000546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561011957600080fd5b506100a060015481565b34801561012f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006100f5565b34801561016257600080fd5b506100d36101713660046108f6565b6102a5565b34801561018257600080fd5b506100a0610396565b600061019561042f565b61019f84846104a9565b90506101aa82610558565b9392505050565b6101b96105a0565b8060005b8181101561029f57368484838181106101d8576101d8610980565b90506020028101906101ea9190610996565b9050600061024a6101fe60208401846109b6565b602084013561021060408601866109d1565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a6105a8565b9050806102955783600103610266576102616105c0565b610295565b8261027160006105d2565b604051635a15467560e01b815260040161028c929190610a1f565b60405180910390fd5b50506001016101bd565b50505050565b6000546001600160a01b031633146102ec5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161028c565b6000846001600160a01b0316848484604051610309929190610a74565b60006040518083038185875af1925050503d8060008114610346576040519150601f19603f3d011682016040523d82523d6000602084013e61034b565b606091505b505090508061038f5760405162461bcd60e51b815260206004820152601060248201526f115e1958dd5d1a5bdb8819985a5b195960821b604482015260640161028c565b5050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a84565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a75760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161028c565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812081546001600160a01b03166105316104f46101008701876109d1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106049050565b6001600160a01b03161461054957600191505061054f565b60009150505b92915050565b50565b801561055557604051600090339083908381818185875af1925050503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e61038f565b6104a761042f565b6000806000845160208601878987f195945050505050565b6104a76105cd60006105d2565b61062e565b60603d82156105e657828111156105e65750815b604051602082018101604052818152816000602083013e9392505050565b6000806000806106148686610636565b9250925092506106248282610683565b5090949350505050565b805160208201fd5b600080600083516041036106705760208401516040850151606086015160001a61066288828585610740565b95509550955050505061067c565b50508151600091506002905b9250925092565b600082600381111561069757610697610a9d565b036106a0575050565b60018260038111156106b4576106b4610a9d565b036106d25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156106e6576106e6610a9d565b036107075760405163fce698f760e01b81526004810182905260240161028c565b600382600381111561071b5761071b610a9d565b0361073c576040516335e2f38360e21b81526004810182905260240161028c565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561077b5750600091506003905082610805565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156107cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107fb57506000925060019150829050610805565b9250600091508190505b9450945094915050565b60008060006060848603121561082457600080fd5b833567ffffffffffffffff81111561083b57600080fd5b8401610120818703121561084e57600080fd5b95602085013595506040909401359392505050565b6000806020838503121561087657600080fd5b823567ffffffffffffffff81111561088d57600080fd5b8301601f8101851361089e57600080fd5b803567ffffffffffffffff8111156108b557600080fd5b8560208260051b84010111156108ca57600080fd5b6020919091019590945092505050565b80356001600160a01b03811681146108f157600080fd5b919050565b6000806000806060858703121561090c57600080fd5b610915856108da565b935060208501359250604085013567ffffffffffffffff81111561093857600080fd5b8501601f8101871361094957600080fd5b803567ffffffffffffffff81111561096057600080fd5b87602082840101111561097257600080fd5b949793965060200194505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126109ac57600080fd5b9190910192915050565b6000602082840312156109c857600080fd5b6101aa826108da565b6000808335601e198436030181126109e857600080fd5b83018035915067ffffffffffffffff821115610a0357600080fd5b602001915036819003821315610a1857600080fd5b9250929050565b828152604060208201526000825180604084015260005b81811015610a535760208186018101516060868401015201610a36565b506000606082850101526060601f19601f8301168401019150509392505050565b8183823760009101908152919050565b600060208284031215610a9657600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220da04371a6850372f49a90103209cdf1d0ab31b291d875d237ca9f67e01eda06b64736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBBB CODESIZE SUB DUP1 PUSH2 0xBBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x8D DUP2 PUSH2 0x57 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x9E DUP2 PUSH2 0x57 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAE9 PUSH2 0xD2 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x132 ADD MSTORE DUP2 DUP2 PUSH2 0x39A ADD MSTORE PUSH2 0x43A ADD MSTORE PUSH2 0xAE9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19822F7C EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x34FCD5BE EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x19F DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AA DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x5A0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29F JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D8 PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24A PUSH2 0x1FE PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x210 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP GAS PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x295 JUMPI DUP4 PUSH1 0x1 SUB PUSH2 0x266 JUMPI PUSH2 0x261 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST DUP3 PUSH2 0x271 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5A154675 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP3 SWAP2 SWAP1 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x309 SWAP3 SWAP2 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115E1958DD5D1A5BDB8819985A5B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x1AAB3F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x531 PUSH2 0x4F4 PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x604 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x549 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x54F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x38F JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP8 DUP10 DUP8 CALL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x5CD PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE DUP3 ISZERO PUSH2 0x5E6 JUMPI DUP3 DUP2 GT ISZERO PUSH2 0x5E6 JUMPI POP DUP2 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP3 ADD DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP2 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x614 DUP7 DUP7 PUSH2 0x636 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x624 DUP3 DUP3 PUSH2 0x683 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x670 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x662 DUP9 DUP3 DUP6 DUP6 PUSH2 0x740 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x67C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x697 JUMPI PUSH2 0x697 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6A0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6E6 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x77B JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7FB JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x805 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x915 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x5E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA DUP3 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xA36 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA DIV CALLDATACOPY BYTE PUSH9 0x50372F49A90103209C 0xDF SAR EXP 0xB3 SHL 0x29 SAR DUP8 TSTORE 0x23 PUSH29 0xA9F67E01EDA06B64736F6C634300081C00330000000000000000000000 ","sourceMap":"402:1380:22:-:0;;;598:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;662:25:22;;;;;698:5;:14;;-1:-1:-1;;;;;;698:14:22;;;;;;;;402:1380;;14:144:24;-1:-1:-1;;;;;102:31:24;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:431::-;262:6;270;323:2;311:9;302:7;298:23;294:32;291:52;;;339:1;336;329:12;291:52;371:9;365:16;390:44;428:5;390:44;:::i;:::-;503:2;488:18;;482:25;453:5;;-1:-1:-1;516:46:24;482:25;516:46;:::i;:::-;581:7;571:17;;;163:431;;;;;:::o;:::-;402:1380:22;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_7232":{"entryPoint":null,"id":7232,"parameterSlots":0,"returnSlots":0},"@_payPrefund_260":{"entryPoint":1368,"id":260,"parameterSlots":1,"returnSlots":0},"@_requireForExecute_214":{"entryPoint":1440,"id":214,"parameterSlots":0,"returnSlots":0},"@_requireFromEntryPoint_207":{"entryPoint":1071,"id":207,"parameterSlots":0,"returnSlots":0},"@_throwError_3273":{"entryPoint":1667,"id":3273,"parameterSlots":2,"returnSlots":0},"@_validateNonce_232":{"entryPoint":1365,"id":232,"parameterSlots":1,"returnSlots":0},"@_validateSignature_7175":{"entryPoint":1193,"id":7175,"parameterSlots":2,"returnSlots":1},"@call_1241":{"entryPoint":1448,"id":1241,"parameterSlots":4,"returnSlots":1},"@entryPoint_7144":{"entryPoint":null,"id":7144,"parameterSlots":0,"returnSlots":1},"@executeBatch_156":{"entryPoint":433,"id":156,"parameterSlots":2,"returnSlots":0},"@execute_7228":{"entryPoint":677,"id":7228,"parameterSlots":4,"returnSlots":0},"@getNonce_42":{"entryPoint":918,"id":42,"parameterSlots":0,"returnSlots":1},"@getReturnData_1276":{"entryPoint":1490,"id":1276,"parameterSlots":1,"returnSlots":1},"@nonce_7195":{"entryPoint":null,"id":7195,"parameterSlots":0,"returnSlots":0},"@owner_7117":{"entryPoint":null,"id":7117,"parameterSlots":0,"returnSlots":0},"@recover_3030":{"entryPoint":1540,"id":3030,"parameterSlots":2,"returnSlots":1},"@revertWithData_1283":{"entryPoint":1582,"id":1283,"parameterSlots":1,"returnSlots":0},"@revertWithReturnData_1293":{"entryPoint":1472,"id":1293,"parameterSlots":0,"returnSlots":0},"@toEthSignedMessageHash_3289":{"entryPoint":null,"id":3289,"parameterSlots":1,"returnSlots":1},"@tryRecover_3000":{"entryPoint":1590,"id":3000,"parameterSlots":2,"returnSlots":3},"@tryRecover_3188":{"entryPoint":1856,"id":3188,"parameterSlots":4,"returnSlots":3},"@validateUserOp_190":{"entryPoint":395,"id":190,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":2266,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":2294,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_struct$_Call_$19_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":2147,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_PackedUserOperation_$1223_calldata_ptrt_bytes32t_uint256":{"entryPoint":2063,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2676,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36fdcc45171afde7667666c94fc33ecdb7822c92e5282dda8124205e12e0ac03__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2591,"id":null,"parameterSlots":3,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":2513,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_struct$_Call_$19_calldata_ptr":{"entryPoint":2454,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":2717,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2432,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7329:24","nodeType":"YulBlock","src":"0:7329:24","statements":[{"nativeSrc":"6:3:24","nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nativeSrc":"157:438:24","nodeType":"YulBlock","src":"157:438:24","statements":[{"body":{"nativeSrc":"203:16:24","nodeType":"YulBlock","src":"203:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"212:1:24","nodeType":"YulLiteral","src":"212:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"215:1:24","nodeType":"YulLiteral","src":"215:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"205:6:24","nodeType":"YulIdentifier","src":"205:6:24"},"nativeSrc":"205:12:24","nodeType":"YulFunctionCall","src":"205:12:24"},"nativeSrc":"205:12:24","nodeType":"YulExpressionStatement","src":"205:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"178:7:24","nodeType":"YulIdentifier","src":"178:7:24"},{"name":"headStart","nativeSrc":"187:9:24","nodeType":"YulIdentifier","src":"187:9:24"}],"functionName":{"name":"sub","nativeSrc":"174:3:24","nodeType":"YulIdentifier","src":"174:3:24"},"nativeSrc":"174:23:24","nodeType":"YulFunctionCall","src":"174:23:24"},{"kind":"number","nativeSrc":"199:2:24","nodeType":"YulLiteral","src":"199:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"170:3:24","nodeType":"YulIdentifier","src":"170:3:24"},"nativeSrc":"170:32:24","nodeType":"YulFunctionCall","src":"170:32:24"},"nativeSrc":"167:52:24","nodeType":"YulIf","src":"167:52:24"},{"nativeSrc":"228:37:24","nodeType":"YulVariableDeclaration","src":"228:37:24","value":{"arguments":[{"name":"headStart","nativeSrc":"255:9:24","nodeType":"YulIdentifier","src":"255:9:24"}],"functionName":{"name":"calldataload","nativeSrc":"242:12:24","nodeType":"YulIdentifier","src":"242:12:24"},"nativeSrc":"242:23:24","nodeType":"YulFunctionCall","src":"242:23:24"},"variables":[{"name":"offset","nativeSrc":"232:6:24","nodeType":"YulTypedName","src":"232:6:24","type":""}]},{"body":{"nativeSrc":"308:16:24","nodeType":"YulBlock","src":"308:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:24","nodeType":"YulLiteral","src":"317:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:24","nodeType":"YulLiteral","src":"320:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:24","nodeType":"YulIdentifier","src":"310:6:24"},"nativeSrc":"310:12:24","nodeType":"YulFunctionCall","src":"310:12:24"},"nativeSrc":"310:12:24","nodeType":"YulExpressionStatement","src":"310:12:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"280:6:24","nodeType":"YulIdentifier","src":"280:6:24"},{"kind":"number","nativeSrc":"288:18:24","nodeType":"YulLiteral","src":"288:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"277:2:24","nodeType":"YulIdentifier","src":"277:2:24"},"nativeSrc":"277:30:24","nodeType":"YulFunctionCall","src":"277:30:24"},"nativeSrc":"274:50:24","nodeType":"YulIf","src":"274:50:24"},{"nativeSrc":"333:32:24","nodeType":"YulVariableDeclaration","src":"333:32:24","value":{"arguments":[{"name":"headStart","nativeSrc":"347:9:24","nodeType":"YulIdentifier","src":"347:9:24"},{"name":"offset","nativeSrc":"358:6:24","nodeType":"YulIdentifier","src":"358:6:24"}],"functionName":{"name":"add","nativeSrc":"343:3:24","nodeType":"YulIdentifier","src":"343:3:24"},"nativeSrc":"343:22:24","nodeType":"YulFunctionCall","src":"343:22:24"},"variables":[{"name":"_1","nativeSrc":"337:2:24","nodeType":"YulTypedName","src":"337:2:24","type":""}]},{"body":{"nativeSrc":"404:16:24","nodeType":"YulBlock","src":"404:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"413:1:24","nodeType":"YulLiteral","src":"413:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"416:1:24","nodeType":"YulLiteral","src":"416:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"406:6:24","nodeType":"YulIdentifier","src":"406:6:24"},"nativeSrc":"406:12:24","nodeType":"YulFunctionCall","src":"406:12:24"},"nativeSrc":"406:12:24","nodeType":"YulExpressionStatement","src":"406:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"385:7:24","nodeType":"YulIdentifier","src":"385:7:24"},{"name":"_1","nativeSrc":"394:2:24","nodeType":"YulIdentifier","src":"394:2:24"}],"functionName":{"name":"sub","nativeSrc":"381:3:24","nodeType":"YulIdentifier","src":"381:3:24"},"nativeSrc":"381:16:24","nodeType":"YulFunctionCall","src":"381:16:24"},{"kind":"number","nativeSrc":"399:3:24","nodeType":"YulLiteral","src":"399:3:24","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"377:3:24","nodeType":"YulIdentifier","src":"377:3:24"},"nativeSrc":"377:26:24","nodeType":"YulFunctionCall","src":"377:26:24"},"nativeSrc":"374:46:24","nodeType":"YulIf","src":"374:46:24"},{"nativeSrc":"429:12:24","nodeType":"YulAssignment","src":"429:12:24","value":{"name":"_1","nativeSrc":"439:2:24","nodeType":"YulIdentifier","src":"439:2:24"},"variableNames":[{"name":"value0","nativeSrc":"429:6:24","nodeType":"YulIdentifier","src":"429:6:24"}]},{"nativeSrc":"450:42:24","nodeType":"YulAssignment","src":"450:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"477:9:24","nodeType":"YulIdentifier","src":"477:9:24"},{"kind":"number","nativeSrc":"488:2:24","nodeType":"YulLiteral","src":"488:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"473:3:24","nodeType":"YulIdentifier","src":"473:3:24"},"nativeSrc":"473:18:24","nodeType":"YulFunctionCall","src":"473:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"460:12:24","nodeType":"YulIdentifier","src":"460:12:24"},"nativeSrc":"460:32:24","nodeType":"YulFunctionCall","src":"460:32:24"},"variableNames":[{"name":"value1","nativeSrc":"450:6:24","nodeType":"YulIdentifier","src":"450:6:24"}]},{"nativeSrc":"501:14:24","nodeType":"YulVariableDeclaration","src":"501:14:24","value":{"kind":"number","nativeSrc":"514:1:24","nodeType":"YulLiteral","src":"514:1:24","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"505:5:24","nodeType":"YulTypedName","src":"505:5:24","type":""}]},{"nativeSrc":"524:41:24","nodeType":"YulAssignment","src":"524:41:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"550:9:24","nodeType":"YulIdentifier","src":"550:9:24"},{"kind":"number","nativeSrc":"561:2:24","nodeType":"YulLiteral","src":"561:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"546:3:24","nodeType":"YulIdentifier","src":"546:3:24"},"nativeSrc":"546:18:24","nodeType":"YulFunctionCall","src":"546:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"533:12:24","nodeType":"YulIdentifier","src":"533:12:24"},"nativeSrc":"533:32:24","nodeType":"YulFunctionCall","src":"533:32:24"},"variableNames":[{"name":"value","nativeSrc":"524:5:24","nodeType":"YulIdentifier","src":"524:5:24"}]},{"nativeSrc":"574:15:24","nodeType":"YulAssignment","src":"574:15:24","value":{"name":"value","nativeSrc":"584:5:24","nodeType":"YulIdentifier","src":"584:5:24"},"variableNames":[{"name":"value2","nativeSrc":"574:6:24","nodeType":"YulIdentifier","src":"574:6:24"}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$1223_calldata_ptrt_bytes32t_uint256","nativeSrc":"14:581:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"107:9:24","nodeType":"YulTypedName","src":"107:9:24","type":""},{"name":"dataEnd","nativeSrc":"118:7:24","nodeType":"YulTypedName","src":"118:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"130:6:24","nodeType":"YulTypedName","src":"130:6:24","type":""},{"name":"value1","nativeSrc":"138:6:24","nodeType":"YulTypedName","src":"138:6:24","type":""},{"name":"value2","nativeSrc":"146:6:24","nodeType":"YulTypedName","src":"146:6:24","type":""}],"src":"14:581:24"},{"body":{"nativeSrc":"701:76:24","nodeType":"YulBlock","src":"701:76:24","statements":[{"nativeSrc":"711:26:24","nodeType":"YulAssignment","src":"711:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"723:9:24","nodeType":"YulIdentifier","src":"723:9:24"},{"kind":"number","nativeSrc":"734:2:24","nodeType":"YulLiteral","src":"734:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"719:3:24","nodeType":"YulIdentifier","src":"719:3:24"},"nativeSrc":"719:18:24","nodeType":"YulFunctionCall","src":"719:18:24"},"variableNames":[{"name":"tail","nativeSrc":"711:4:24","nodeType":"YulIdentifier","src":"711:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"753:9:24","nodeType":"YulIdentifier","src":"753:9:24"},{"name":"value0","nativeSrc":"764:6:24","nodeType":"YulIdentifier","src":"764:6:24"}],"functionName":{"name":"mstore","nativeSrc":"746:6:24","nodeType":"YulIdentifier","src":"746:6:24"},"nativeSrc":"746:25:24","nodeType":"YulFunctionCall","src":"746:25:24"},"nativeSrc":"746:25:24","nodeType":"YulExpressionStatement","src":"746:25:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"600:177:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"670:9:24","nodeType":"YulTypedName","src":"670:9:24","type":""},{"name":"value0","nativeSrc":"681:6:24","nodeType":"YulTypedName","src":"681:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"692:4:24","nodeType":"YulTypedName","src":"692:4:24","type":""}],"src":"600:177:24"},{"body":{"nativeSrc":"909:505:24","nodeType":"YulBlock","src":"909:505:24","statements":[{"body":{"nativeSrc":"955:16:24","nodeType":"YulBlock","src":"955:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"964:1:24","nodeType":"YulLiteral","src":"964:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"967:1:24","nodeType":"YulLiteral","src":"967:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"957:6:24","nodeType":"YulIdentifier","src":"957:6:24"},"nativeSrc":"957:12:24","nodeType":"YulFunctionCall","src":"957:12:24"},"nativeSrc":"957:12:24","nodeType":"YulExpressionStatement","src":"957:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"930:7:24","nodeType":"YulIdentifier","src":"930:7:24"},{"name":"headStart","nativeSrc":"939:9:24","nodeType":"YulIdentifier","src":"939:9:24"}],"functionName":{"name":"sub","nativeSrc":"926:3:24","nodeType":"YulIdentifier","src":"926:3:24"},"nativeSrc":"926:23:24","nodeType":"YulFunctionCall","src":"926:23:24"},{"kind":"number","nativeSrc":"951:2:24","nodeType":"YulLiteral","src":"951:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"922:3:24","nodeType":"YulIdentifier","src":"922:3:24"},"nativeSrc":"922:32:24","nodeType":"YulFunctionCall","src":"922:32:24"},"nativeSrc":"919:52:24","nodeType":"YulIf","src":"919:52:24"},{"nativeSrc":"980:37:24","nodeType":"YulVariableDeclaration","src":"980:37:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1007:9:24","nodeType":"YulIdentifier","src":"1007:9:24"}],"functionName":{"name":"calldataload","nativeSrc":"994:12:24","nodeType":"YulIdentifier","src":"994:12:24"},"nativeSrc":"994:23:24","nodeType":"YulFunctionCall","src":"994:23:24"},"variables":[{"name":"offset","nativeSrc":"984:6:24","nodeType":"YulTypedName","src":"984:6:24","type":""}]},{"body":{"nativeSrc":"1060:16:24","nodeType":"YulBlock","src":"1060:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1069:1:24","nodeType":"YulLiteral","src":"1069:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1072:1:24","nodeType":"YulLiteral","src":"1072:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1062:6:24","nodeType":"YulIdentifier","src":"1062:6:24"},"nativeSrc":"1062:12:24","nodeType":"YulFunctionCall","src":"1062:12:24"},"nativeSrc":"1062:12:24","nodeType":"YulExpressionStatement","src":"1062:12:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1032:6:24","nodeType":"YulIdentifier","src":"1032:6:24"},{"kind":"number","nativeSrc":"1040:18:24","nodeType":"YulLiteral","src":"1040:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1029:2:24","nodeType":"YulIdentifier","src":"1029:2:24"},"nativeSrc":"1029:30:24","nodeType":"YulFunctionCall","src":"1029:30:24"},"nativeSrc":"1026:50:24","nodeType":"YulIf","src":"1026:50:24"},{"nativeSrc":"1085:32:24","nodeType":"YulVariableDeclaration","src":"1085:32:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1099:9:24","nodeType":"YulIdentifier","src":"1099:9:24"},{"name":"offset","nativeSrc":"1110:6:24","nodeType":"YulIdentifier","src":"1110:6:24"}],"functionName":{"name":"add","nativeSrc":"1095:3:24","nodeType":"YulIdentifier","src":"1095:3:24"},"nativeSrc":"1095:22:24","nodeType":"YulFunctionCall","src":"1095:22:24"},"variables":[{"name":"_1","nativeSrc":"1089:2:24","nodeType":"YulTypedName","src":"1089:2:24","type":""}]},{"body":{"nativeSrc":"1165:16:24","nodeType":"YulBlock","src":"1165:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1174:1:24","nodeType":"YulLiteral","src":"1174:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1177:1:24","nodeType":"YulLiteral","src":"1177:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1167:6:24","nodeType":"YulIdentifier","src":"1167:6:24"},"nativeSrc":"1167:12:24","nodeType":"YulFunctionCall","src":"1167:12:24"},"nativeSrc":"1167:12:24","nodeType":"YulExpressionStatement","src":"1167:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1144:2:24","nodeType":"YulIdentifier","src":"1144:2:24"},{"kind":"number","nativeSrc":"1148:4:24","nodeType":"YulLiteral","src":"1148:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1140:3:24","nodeType":"YulIdentifier","src":"1140:3:24"},"nativeSrc":"1140:13:24","nodeType":"YulFunctionCall","src":"1140:13:24"},{"name":"dataEnd","nativeSrc":"1155:7:24","nodeType":"YulIdentifier","src":"1155:7:24"}],"functionName":{"name":"slt","nativeSrc":"1136:3:24","nodeType":"YulIdentifier","src":"1136:3:24"},"nativeSrc":"1136:27:24","nodeType":"YulFunctionCall","src":"1136:27:24"}],"functionName":{"name":"iszero","nativeSrc":"1129:6:24","nodeType":"YulIdentifier","src":"1129:6:24"},"nativeSrc":"1129:35:24","nodeType":"YulFunctionCall","src":"1129:35:24"},"nativeSrc":"1126:55:24","nodeType":"YulIf","src":"1126:55:24"},{"nativeSrc":"1190:30:24","nodeType":"YulVariableDeclaration","src":"1190:30:24","value":{"arguments":[{"name":"_1","nativeSrc":"1217:2:24","nodeType":"YulIdentifier","src":"1217:2:24"}],"functionName":{"name":"calldataload","nativeSrc":"1204:12:24","nodeType":"YulIdentifier","src":"1204:12:24"},"nativeSrc":"1204:16:24","nodeType":"YulFunctionCall","src":"1204:16:24"},"variables":[{"name":"length","nativeSrc":"1194:6:24","nodeType":"YulTypedName","src":"1194:6:24","type":""}]},{"body":{"nativeSrc":"1263:16:24","nodeType":"YulBlock","src":"1263:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1272:1:24","nodeType":"YulLiteral","src":"1272:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1275:1:24","nodeType":"YulLiteral","src":"1275:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1265:6:24","nodeType":"YulIdentifier","src":"1265:6:24"},"nativeSrc":"1265:12:24","nodeType":"YulFunctionCall","src":"1265:12:24"},"nativeSrc":"1265:12:24","nodeType":"YulExpressionStatement","src":"1265:12:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1235:6:24","nodeType":"YulIdentifier","src":"1235:6:24"},{"kind":"number","nativeSrc":"1243:18:24","nodeType":"YulLiteral","src":"1243:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1232:2:24","nodeType":"YulIdentifier","src":"1232:2:24"},"nativeSrc":"1232:30:24","nodeType":"YulFunctionCall","src":"1232:30:24"},"nativeSrc":"1229:50:24","nodeType":"YulIf","src":"1229:50:24"},{"body":{"nativeSrc":"1337:16:24","nodeType":"YulBlock","src":"1337:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1346:1:24","nodeType":"YulLiteral","src":"1346:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"1349:1:24","nodeType":"YulLiteral","src":"1349:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1339:6:24","nodeType":"YulIdentifier","src":"1339:6:24"},"nativeSrc":"1339:12:24","nodeType":"YulFunctionCall","src":"1339:12:24"},"nativeSrc":"1339:12:24","nodeType":"YulExpressionStatement","src":"1339:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1302:2:24","nodeType":"YulIdentifier","src":"1302:2:24"},{"arguments":[{"kind":"number","nativeSrc":"1310:1:24","nodeType":"YulLiteral","src":"1310:1:24","type":"","value":"5"},{"name":"length","nativeSrc":"1313:6:24","nodeType":"YulIdentifier","src":"1313:6:24"}],"functionName":{"name":"shl","nativeSrc":"1306:3:24","nodeType":"YulIdentifier","src":"1306:3:24"},"nativeSrc":"1306:14:24","nodeType":"YulFunctionCall","src":"1306:14:24"}],"functionName":{"name":"add","nativeSrc":"1298:3:24","nodeType":"YulIdentifier","src":"1298:3:24"},"nativeSrc":"1298:23:24","nodeType":"YulFunctionCall","src":"1298:23:24"},{"kind":"number","nativeSrc":"1323:2:24","nodeType":"YulLiteral","src":"1323:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1294:3:24","nodeType":"YulIdentifier","src":"1294:3:24"},"nativeSrc":"1294:32:24","nodeType":"YulFunctionCall","src":"1294:32:24"},{"name":"dataEnd","nativeSrc":"1328:7:24","nodeType":"YulIdentifier","src":"1328:7:24"}],"functionName":{"name":"gt","nativeSrc":"1291:2:24","nodeType":"YulIdentifier","src":"1291:2:24"},"nativeSrc":"1291:45:24","nodeType":"YulFunctionCall","src":"1291:45:24"},"nativeSrc":"1288:65:24","nodeType":"YulIf","src":"1288:65:24"},{"nativeSrc":"1362:21:24","nodeType":"YulAssignment","src":"1362:21:24","value":{"arguments":[{"name":"_1","nativeSrc":"1376:2:24","nodeType":"YulIdentifier","src":"1376:2:24"},{"kind":"number","nativeSrc":"1380:2:24","nodeType":"YulLiteral","src":"1380:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1372:3:24","nodeType":"YulIdentifier","src":"1372:3:24"},"nativeSrc":"1372:11:24","nodeType":"YulFunctionCall","src":"1372:11:24"},"variableNames":[{"name":"value0","nativeSrc":"1362:6:24","nodeType":"YulIdentifier","src":"1362:6:24"}]},{"nativeSrc":"1392:16:24","nodeType":"YulAssignment","src":"1392:16:24","value":{"name":"length","nativeSrc":"1402:6:24","nodeType":"YulIdentifier","src":"1402:6:24"},"variableNames":[{"name":"value1","nativeSrc":"1392:6:24","nodeType":"YulIdentifier","src":"1392:6:24"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_Call_$19_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"782:632:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"867:9:24","nodeType":"YulTypedName","src":"867:9:24","type":""},{"name":"dataEnd","nativeSrc":"878:7:24","nodeType":"YulTypedName","src":"878:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"890:6:24","nodeType":"YulTypedName","src":"890:6:24","type":""},{"name":"value1","nativeSrc":"898:6:24","nodeType":"YulTypedName","src":"898:6:24","type":""}],"src":"782:632:24"},{"body":{"nativeSrc":"1520:102:24","nodeType":"YulBlock","src":"1520:102:24","statements":[{"nativeSrc":"1530:26:24","nodeType":"YulAssignment","src":"1530:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1542:9:24","nodeType":"YulIdentifier","src":"1542:9:24"},{"kind":"number","nativeSrc":"1553:2:24","nodeType":"YulLiteral","src":"1553:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1538:3:24","nodeType":"YulIdentifier","src":"1538:3:24"},"nativeSrc":"1538:18:24","nodeType":"YulFunctionCall","src":"1538:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1530:4:24","nodeType":"YulIdentifier","src":"1530:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1572:9:24","nodeType":"YulIdentifier","src":"1572:9:24"},{"arguments":[{"name":"value0","nativeSrc":"1587:6:24","nodeType":"YulIdentifier","src":"1587:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1603:3:24","nodeType":"YulLiteral","src":"1603:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"1608:1:24","nodeType":"YulLiteral","src":"1608:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1599:3:24","nodeType":"YulIdentifier","src":"1599:3:24"},"nativeSrc":"1599:11:24","nodeType":"YulFunctionCall","src":"1599:11:24"},{"kind":"number","nativeSrc":"1612:1:24","nodeType":"YulLiteral","src":"1612:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1595:3:24","nodeType":"YulIdentifier","src":"1595:3:24"},"nativeSrc":"1595:19:24","nodeType":"YulFunctionCall","src":"1595:19:24"}],"functionName":{"name":"and","nativeSrc":"1583:3:24","nodeType":"YulIdentifier","src":"1583:3:24"},"nativeSrc":"1583:32:24","nodeType":"YulFunctionCall","src":"1583:32:24"}],"functionName":{"name":"mstore","nativeSrc":"1565:6:24","nodeType":"YulIdentifier","src":"1565:6:24"},"nativeSrc":"1565:51:24","nodeType":"YulFunctionCall","src":"1565:51:24"},"nativeSrc":"1565:51:24","nodeType":"YulExpressionStatement","src":"1565:51:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1419:203:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1489:9:24","nodeType":"YulTypedName","src":"1489:9:24","type":""},{"name":"value0","nativeSrc":"1500:6:24","nodeType":"YulTypedName","src":"1500:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1511:4:24","nodeType":"YulTypedName","src":"1511:4:24","type":""}],"src":"1419:203:24"},{"body":{"nativeSrc":"1748:102:24","nodeType":"YulBlock","src":"1748:102:24","statements":[{"nativeSrc":"1758:26:24","nodeType":"YulAssignment","src":"1758:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1770:9:24","nodeType":"YulIdentifier","src":"1770:9:24"},{"kind":"number","nativeSrc":"1781:2:24","nodeType":"YulLiteral","src":"1781:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1766:3:24","nodeType":"YulIdentifier","src":"1766:3:24"},"nativeSrc":"1766:18:24","nodeType":"YulFunctionCall","src":"1766:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1758:4:24","nodeType":"YulIdentifier","src":"1758:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1800:9:24","nodeType":"YulIdentifier","src":"1800:9:24"},{"arguments":[{"name":"value0","nativeSrc":"1815:6:24","nodeType":"YulIdentifier","src":"1815:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1831:3:24","nodeType":"YulLiteral","src":"1831:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"1836:1:24","nodeType":"YulLiteral","src":"1836:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1827:3:24","nodeType":"YulIdentifier","src":"1827:3:24"},"nativeSrc":"1827:11:24","nodeType":"YulFunctionCall","src":"1827:11:24"},{"kind":"number","nativeSrc":"1840:1:24","nodeType":"YulLiteral","src":"1840:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1823:3:24","nodeType":"YulIdentifier","src":"1823:3:24"},"nativeSrc":"1823:19:24","nodeType":"YulFunctionCall","src":"1823:19:24"}],"functionName":{"name":"and","nativeSrc":"1811:3:24","nodeType":"YulIdentifier","src":"1811:3:24"},"nativeSrc":"1811:32:24","nodeType":"YulFunctionCall","src":"1811:32:24"}],"functionName":{"name":"mstore","nativeSrc":"1793:6:24","nodeType":"YulIdentifier","src":"1793:6:24"},"nativeSrc":"1793:51:24","nodeType":"YulFunctionCall","src":"1793:51:24"},"nativeSrc":"1793:51:24","nodeType":"YulExpressionStatement","src":"1793:51:24"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed","nativeSrc":"1627:223:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1717:9:24","nodeType":"YulTypedName","src":"1717:9:24","type":""},{"name":"value0","nativeSrc":"1728:6:24","nodeType":"YulTypedName","src":"1728:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1739:4:24","nodeType":"YulTypedName","src":"1739:4:24","type":""}],"src":"1627:223:24"},{"body":{"nativeSrc":"1904:124:24","nodeType":"YulBlock","src":"1904:124:24","statements":[{"nativeSrc":"1914:29:24","nodeType":"YulAssignment","src":"1914:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"1936:6:24","nodeType":"YulIdentifier","src":"1936:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"1923:12:24","nodeType":"YulIdentifier","src":"1923:12:24"},"nativeSrc":"1923:20:24","nodeType":"YulFunctionCall","src":"1923:20:24"},"variableNames":[{"name":"value","nativeSrc":"1914:5:24","nodeType":"YulIdentifier","src":"1914:5:24"}]},{"body":{"nativeSrc":"2006:16:24","nodeType":"YulBlock","src":"2006:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2015:1:24","nodeType":"YulLiteral","src":"2015:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2018:1:24","nodeType":"YulLiteral","src":"2018:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2008:6:24","nodeType":"YulIdentifier","src":"2008:6:24"},"nativeSrc":"2008:12:24","nodeType":"YulFunctionCall","src":"2008:12:24"},"nativeSrc":"2008:12:24","nodeType":"YulExpressionStatement","src":"2008:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1965:5:24","nodeType":"YulIdentifier","src":"1965:5:24"},{"arguments":[{"name":"value","nativeSrc":"1976:5:24","nodeType":"YulIdentifier","src":"1976:5:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1991:3:24","nodeType":"YulLiteral","src":"1991:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"1996:1:24","nodeType":"YulLiteral","src":"1996:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1987:3:24","nodeType":"YulIdentifier","src":"1987:3:24"},"nativeSrc":"1987:11:24","nodeType":"YulFunctionCall","src":"1987:11:24"},{"kind":"number","nativeSrc":"2000:1:24","nodeType":"YulLiteral","src":"2000:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1983:3:24","nodeType":"YulIdentifier","src":"1983:3:24"},"nativeSrc":"1983:19:24","nodeType":"YulFunctionCall","src":"1983:19:24"}],"functionName":{"name":"and","nativeSrc":"1972:3:24","nodeType":"YulIdentifier","src":"1972:3:24"},"nativeSrc":"1972:31:24","nodeType":"YulFunctionCall","src":"1972:31:24"}],"functionName":{"name":"eq","nativeSrc":"1962:2:24","nodeType":"YulIdentifier","src":"1962:2:24"},"nativeSrc":"1962:42:24","nodeType":"YulFunctionCall","src":"1962:42:24"}],"functionName":{"name":"iszero","nativeSrc":"1955:6:24","nodeType":"YulIdentifier","src":"1955:6:24"},"nativeSrc":"1955:50:24","nodeType":"YulFunctionCall","src":"1955:50:24"},"nativeSrc":"1952:70:24","nodeType":"YulIf","src":"1952:70:24"}]},"name":"abi_decode_address","nativeSrc":"1855:173:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1883:6:24","nodeType":"YulTypedName","src":"1883:6:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1894:5:24","nodeType":"YulTypedName","src":"1894:5:24","type":""}],"src":"1855:173:24"},{"body":{"nativeSrc":"2156:651:24","nodeType":"YulBlock","src":"2156:651:24","statements":[{"body":{"nativeSrc":"2202:16:24","nodeType":"YulBlock","src":"2202:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2211:1:24","nodeType":"YulLiteral","src":"2211:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2214:1:24","nodeType":"YulLiteral","src":"2214:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2204:6:24","nodeType":"YulIdentifier","src":"2204:6:24"},"nativeSrc":"2204:12:24","nodeType":"YulFunctionCall","src":"2204:12:24"},"nativeSrc":"2204:12:24","nodeType":"YulExpressionStatement","src":"2204:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2177:7:24","nodeType":"YulIdentifier","src":"2177:7:24"},{"name":"headStart","nativeSrc":"2186:9:24","nodeType":"YulIdentifier","src":"2186:9:24"}],"functionName":{"name":"sub","nativeSrc":"2173:3:24","nodeType":"YulIdentifier","src":"2173:3:24"},"nativeSrc":"2173:23:24","nodeType":"YulFunctionCall","src":"2173:23:24"},{"kind":"number","nativeSrc":"2198:2:24","nodeType":"YulLiteral","src":"2198:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2169:3:24","nodeType":"YulIdentifier","src":"2169:3:24"},"nativeSrc":"2169:32:24","nodeType":"YulFunctionCall","src":"2169:32:24"},"nativeSrc":"2166:52:24","nodeType":"YulIf","src":"2166:52:24"},{"nativeSrc":"2227:39:24","nodeType":"YulAssignment","src":"2227:39:24","value":{"arguments":[{"name":"headStart","nativeSrc":"2256:9:24","nodeType":"YulIdentifier","src":"2256:9:24"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2237:18:24","nodeType":"YulIdentifier","src":"2237:18:24"},"nativeSrc":"2237:29:24","nodeType":"YulFunctionCall","src":"2237:29:24"},"variableNames":[{"name":"value0","nativeSrc":"2227:6:24","nodeType":"YulIdentifier","src":"2227:6:24"}]},{"nativeSrc":"2275:14:24","nodeType":"YulVariableDeclaration","src":"2275:14:24","value":{"kind":"number","nativeSrc":"2288:1:24","nodeType":"YulLiteral","src":"2288:1:24","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2279:5:24","nodeType":"YulTypedName","src":"2279:5:24","type":""}]},{"nativeSrc":"2298:41:24","nodeType":"YulAssignment","src":"2298:41:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2324:9:24","nodeType":"YulIdentifier","src":"2324:9:24"},{"kind":"number","nativeSrc":"2335:2:24","nodeType":"YulLiteral","src":"2335:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2320:3:24","nodeType":"YulIdentifier","src":"2320:3:24"},"nativeSrc":"2320:18:24","nodeType":"YulFunctionCall","src":"2320:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"2307:12:24","nodeType":"YulIdentifier","src":"2307:12:24"},"nativeSrc":"2307:32:24","nodeType":"YulFunctionCall","src":"2307:32:24"},"variableNames":[{"name":"value","nativeSrc":"2298:5:24","nodeType":"YulIdentifier","src":"2298:5:24"}]},{"nativeSrc":"2348:15:24","nodeType":"YulAssignment","src":"2348:15:24","value":{"name":"value","nativeSrc":"2358:5:24","nodeType":"YulIdentifier","src":"2358:5:24"},"variableNames":[{"name":"value1","nativeSrc":"2348:6:24","nodeType":"YulIdentifier","src":"2348:6:24"}]},{"nativeSrc":"2372:46:24","nodeType":"YulVariableDeclaration","src":"2372:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2403:9:24","nodeType":"YulIdentifier","src":"2403:9:24"},{"kind":"number","nativeSrc":"2414:2:24","nodeType":"YulLiteral","src":"2414:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2399:3:24","nodeType":"YulIdentifier","src":"2399:3:24"},"nativeSrc":"2399:18:24","nodeType":"YulFunctionCall","src":"2399:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"2386:12:24","nodeType":"YulIdentifier","src":"2386:12:24"},"nativeSrc":"2386:32:24","nodeType":"YulFunctionCall","src":"2386:32:24"},"variables":[{"name":"offset","nativeSrc":"2376:6:24","nodeType":"YulTypedName","src":"2376:6:24","type":""}]},{"body":{"nativeSrc":"2461:16:24","nodeType":"YulBlock","src":"2461:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2470:1:24","nodeType":"YulLiteral","src":"2470:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2473:1:24","nodeType":"YulLiteral","src":"2473:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2463:6:24","nodeType":"YulIdentifier","src":"2463:6:24"},"nativeSrc":"2463:12:24","nodeType":"YulFunctionCall","src":"2463:12:24"},"nativeSrc":"2463:12:24","nodeType":"YulExpressionStatement","src":"2463:12:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2433:6:24","nodeType":"YulIdentifier","src":"2433:6:24"},{"kind":"number","nativeSrc":"2441:18:24","nodeType":"YulLiteral","src":"2441:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2430:2:24","nodeType":"YulIdentifier","src":"2430:2:24"},"nativeSrc":"2430:30:24","nodeType":"YulFunctionCall","src":"2430:30:24"},"nativeSrc":"2427:50:24","nodeType":"YulIf","src":"2427:50:24"},{"nativeSrc":"2486:32:24","nodeType":"YulVariableDeclaration","src":"2486:32:24","value":{"arguments":[{"name":"headStart","nativeSrc":"2500:9:24","nodeType":"YulIdentifier","src":"2500:9:24"},{"name":"offset","nativeSrc":"2511:6:24","nodeType":"YulIdentifier","src":"2511:6:24"}],"functionName":{"name":"add","nativeSrc":"2496:3:24","nodeType":"YulIdentifier","src":"2496:3:24"},"nativeSrc":"2496:22:24","nodeType":"YulFunctionCall","src":"2496:22:24"},"variables":[{"name":"_1","nativeSrc":"2490:2:24","nodeType":"YulTypedName","src":"2490:2:24","type":""}]},{"body":{"nativeSrc":"2566:16:24","nodeType":"YulBlock","src":"2566:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2575:1:24","nodeType":"YulLiteral","src":"2575:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2578:1:24","nodeType":"YulLiteral","src":"2578:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2568:6:24","nodeType":"YulIdentifier","src":"2568:6:24"},"nativeSrc":"2568:12:24","nodeType":"YulFunctionCall","src":"2568:12:24"},"nativeSrc":"2568:12:24","nodeType":"YulExpressionStatement","src":"2568:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"2545:2:24","nodeType":"YulIdentifier","src":"2545:2:24"},{"kind":"number","nativeSrc":"2549:4:24","nodeType":"YulLiteral","src":"2549:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2541:3:24","nodeType":"YulIdentifier","src":"2541:3:24"},"nativeSrc":"2541:13:24","nodeType":"YulFunctionCall","src":"2541:13:24"},{"name":"dataEnd","nativeSrc":"2556:7:24","nodeType":"YulIdentifier","src":"2556:7:24"}],"functionName":{"name":"slt","nativeSrc":"2537:3:24","nodeType":"YulIdentifier","src":"2537:3:24"},"nativeSrc":"2537:27:24","nodeType":"YulFunctionCall","src":"2537:27:24"}],"functionName":{"name":"iszero","nativeSrc":"2530:6:24","nodeType":"YulIdentifier","src":"2530:6:24"},"nativeSrc":"2530:35:24","nodeType":"YulFunctionCall","src":"2530:35:24"},"nativeSrc":"2527:55:24","nodeType":"YulIf","src":"2527:55:24"},{"nativeSrc":"2591:30:24","nodeType":"YulVariableDeclaration","src":"2591:30:24","value":{"arguments":[{"name":"_1","nativeSrc":"2618:2:24","nodeType":"YulIdentifier","src":"2618:2:24"}],"functionName":{"name":"calldataload","nativeSrc":"2605:12:24","nodeType":"YulIdentifier","src":"2605:12:24"},"nativeSrc":"2605:16:24","nodeType":"YulFunctionCall","src":"2605:16:24"},"variables":[{"name":"length","nativeSrc":"2595:6:24","nodeType":"YulTypedName","src":"2595:6:24","type":""}]},{"body":{"nativeSrc":"2664:16:24","nodeType":"YulBlock","src":"2664:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2673:1:24","nodeType":"YulLiteral","src":"2673:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2676:1:24","nodeType":"YulLiteral","src":"2676:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2666:6:24","nodeType":"YulIdentifier","src":"2666:6:24"},"nativeSrc":"2666:12:24","nodeType":"YulFunctionCall","src":"2666:12:24"},"nativeSrc":"2666:12:24","nodeType":"YulExpressionStatement","src":"2666:12:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2636:6:24","nodeType":"YulIdentifier","src":"2636:6:24"},{"kind":"number","nativeSrc":"2644:18:24","nodeType":"YulLiteral","src":"2644:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2633:2:24","nodeType":"YulIdentifier","src":"2633:2:24"},"nativeSrc":"2633:30:24","nodeType":"YulFunctionCall","src":"2633:30:24"},"nativeSrc":"2630:50:24","nodeType":"YulIf","src":"2630:50:24"},{"body":{"nativeSrc":"2730:16:24","nodeType":"YulBlock","src":"2730:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2739:1:24","nodeType":"YulLiteral","src":"2739:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2742:1:24","nodeType":"YulLiteral","src":"2742:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2732:6:24","nodeType":"YulIdentifier","src":"2732:6:24"},"nativeSrc":"2732:12:24","nodeType":"YulFunctionCall","src":"2732:12:24"},"nativeSrc":"2732:12:24","nodeType":"YulExpressionStatement","src":"2732:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"2703:2:24","nodeType":"YulIdentifier","src":"2703:2:24"},{"name":"length","nativeSrc":"2707:6:24","nodeType":"YulIdentifier","src":"2707:6:24"}],"functionName":{"name":"add","nativeSrc":"2699:3:24","nodeType":"YulIdentifier","src":"2699:3:24"},"nativeSrc":"2699:15:24","nodeType":"YulFunctionCall","src":"2699:15:24"},{"kind":"number","nativeSrc":"2716:2:24","nodeType":"YulLiteral","src":"2716:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2695:3:24","nodeType":"YulIdentifier","src":"2695:3:24"},"nativeSrc":"2695:24:24","nodeType":"YulFunctionCall","src":"2695:24:24"},{"name":"dataEnd","nativeSrc":"2721:7:24","nodeType":"YulIdentifier","src":"2721:7:24"}],"functionName":{"name":"gt","nativeSrc":"2692:2:24","nodeType":"YulIdentifier","src":"2692:2:24"},"nativeSrc":"2692:37:24","nodeType":"YulFunctionCall","src":"2692:37:24"},"nativeSrc":"2689:57:24","nodeType":"YulIf","src":"2689:57:24"},{"nativeSrc":"2755:21:24","nodeType":"YulAssignment","src":"2755:21:24","value":{"arguments":[{"name":"_1","nativeSrc":"2769:2:24","nodeType":"YulIdentifier","src":"2769:2:24"},{"kind":"number","nativeSrc":"2773:2:24","nodeType":"YulLiteral","src":"2773:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2765:3:24","nodeType":"YulIdentifier","src":"2765:3:24"},"nativeSrc":"2765:11:24","nodeType":"YulFunctionCall","src":"2765:11:24"},"variableNames":[{"name":"value2","nativeSrc":"2755:6:24","nodeType":"YulIdentifier","src":"2755:6:24"}]},{"nativeSrc":"2785:16:24","nodeType":"YulAssignment","src":"2785:16:24","value":{"name":"length","nativeSrc":"2795:6:24","nodeType":"YulIdentifier","src":"2795:6:24"},"variableNames":[{"name":"value3","nativeSrc":"2785:6:24","nodeType":"YulIdentifier","src":"2785:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"2033:774:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2098:9:24","nodeType":"YulTypedName","src":"2098:9:24","type":""},{"name":"dataEnd","nativeSrc":"2109:7:24","nodeType":"YulTypedName","src":"2109:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2121:6:24","nodeType":"YulTypedName","src":"2121:6:24","type":""},{"name":"value1","nativeSrc":"2129:6:24","nodeType":"YulTypedName","src":"2129:6:24","type":""},{"name":"value2","nativeSrc":"2137:6:24","nodeType":"YulTypedName","src":"2137:6:24","type":""},{"name":"value3","nativeSrc":"2145:6:24","nodeType":"YulTypedName","src":"2145:6:24","type":""}],"src":"2033:774:24"},{"body":{"nativeSrc":"2844:95:24","nodeType":"YulBlock","src":"2844:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2861:1:24","nodeType":"YulLiteral","src":"2861:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2868:3:24","nodeType":"YulLiteral","src":"2868:3:24","type":"","value":"224"},{"kind":"number","nativeSrc":"2873:10:24","nodeType":"YulLiteral","src":"2873:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2864:3:24","nodeType":"YulIdentifier","src":"2864:3:24"},"nativeSrc":"2864:20:24","nodeType":"YulFunctionCall","src":"2864:20:24"}],"functionName":{"name":"mstore","nativeSrc":"2854:6:24","nodeType":"YulIdentifier","src":"2854:6:24"},"nativeSrc":"2854:31:24","nodeType":"YulFunctionCall","src":"2854:31:24"},"nativeSrc":"2854:31:24","nodeType":"YulExpressionStatement","src":"2854:31:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2901:1:24","nodeType":"YulLiteral","src":"2901:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"2904:4:24","nodeType":"YulLiteral","src":"2904:4:24","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"2894:6:24","nodeType":"YulIdentifier","src":"2894:6:24"},"nativeSrc":"2894:15:24","nodeType":"YulFunctionCall","src":"2894:15:24"},"nativeSrc":"2894:15:24","nodeType":"YulExpressionStatement","src":"2894:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2925:1:24","nodeType":"YulLiteral","src":"2925:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2928:4:24","nodeType":"YulLiteral","src":"2928:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2918:6:24","nodeType":"YulIdentifier","src":"2918:6:24"},"nativeSrc":"2918:15:24","nodeType":"YulFunctionCall","src":"2918:15:24"},"nativeSrc":"2918:15:24","nodeType":"YulExpressionStatement","src":"2918:15:24"}]},"name":"panic_error_0x32","nativeSrc":"2812:127:24","nodeType":"YulFunctionDefinition","src":"2812:127:24"},{"body":{"nativeSrc":"3041:222:24","nodeType":"YulBlock","src":"3041:222:24","statements":[{"nativeSrc":"3051:51:24","nodeType":"YulVariableDeclaration","src":"3051:51:24","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"3090:11:24","nodeType":"YulIdentifier","src":"3090:11:24"}],"functionName":{"name":"calldataload","nativeSrc":"3077:12:24","nodeType":"YulIdentifier","src":"3077:12:24"},"nativeSrc":"3077:25:24","nodeType":"YulFunctionCall","src":"3077:25:24"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"3055:18:24","nodeType":"YulTypedName","src":"3055:18:24","type":""}]},{"body":{"nativeSrc":"3191:16:24","nodeType":"YulBlock","src":"3191:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3200:1:24","nodeType":"YulLiteral","src":"3200:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3203:1:24","nodeType":"YulLiteral","src":"3203:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3193:6:24","nodeType":"YulIdentifier","src":"3193:6:24"},"nativeSrc":"3193:12:24","nodeType":"YulFunctionCall","src":"3193:12:24"},"nativeSrc":"3193:12:24","nodeType":"YulExpressionStatement","src":"3193:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"3125:18:24","nodeType":"YulIdentifier","src":"3125:18:24"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"3153:12:24","nodeType":"YulIdentifier","src":"3153:12:24"},"nativeSrc":"3153:14:24","nodeType":"YulFunctionCall","src":"3153:14:24"},{"name":"base_ref","nativeSrc":"3169:8:24","nodeType":"YulIdentifier","src":"3169:8:24"}],"functionName":{"name":"sub","nativeSrc":"3149:3:24","nodeType":"YulIdentifier","src":"3149:3:24"},"nativeSrc":"3149:29:24","nodeType":"YulFunctionCall","src":"3149:29:24"},{"arguments":[{"kind":"number","nativeSrc":"3184:2:24","nodeType":"YulLiteral","src":"3184:2:24","type":"","value":"94"}],"functionName":{"name":"not","nativeSrc":"3180:3:24","nodeType":"YulIdentifier","src":"3180:3:24"},"nativeSrc":"3180:7:24","nodeType":"YulFunctionCall","src":"3180:7:24"}],"functionName":{"name":"add","nativeSrc":"3145:3:24","nodeType":"YulIdentifier","src":"3145:3:24"},"nativeSrc":"3145:43:24","nodeType":"YulFunctionCall","src":"3145:43:24"}],"functionName":{"name":"slt","nativeSrc":"3121:3:24","nodeType":"YulIdentifier","src":"3121:3:24"},"nativeSrc":"3121:68:24","nodeType":"YulFunctionCall","src":"3121:68:24"}],"functionName":{"name":"iszero","nativeSrc":"3114:6:24","nodeType":"YulIdentifier","src":"3114:6:24"},"nativeSrc":"3114:76:24","nodeType":"YulFunctionCall","src":"3114:76:24"},"nativeSrc":"3111:96:24","nodeType":"YulIf","src":"3111:96:24"},{"nativeSrc":"3216:41:24","nodeType":"YulAssignment","src":"3216:41:24","value":{"arguments":[{"name":"base_ref","nativeSrc":"3228:8:24","nodeType":"YulIdentifier","src":"3228:8:24"},{"name":"rel_offset_of_tail","nativeSrc":"3238:18:24","nodeType":"YulIdentifier","src":"3238:18:24"}],"functionName":{"name":"add","nativeSrc":"3224:3:24","nodeType":"YulIdentifier","src":"3224:3:24"},"nativeSrc":"3224:33:24","nodeType":"YulFunctionCall","src":"3224:33:24"},"variableNames":[{"name":"addr","nativeSrc":"3216:4:24","nodeType":"YulIdentifier","src":"3216:4:24"}]}]},"name":"access_calldata_tail_t_struct$_Call_$19_calldata_ptr","nativeSrc":"2944:319:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"3006:8:24","nodeType":"YulTypedName","src":"3006:8:24","type":""},{"name":"ptr_to_tail","nativeSrc":"3016:11:24","nodeType":"YulTypedName","src":"3016:11:24","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"3032:4:24","nodeType":"YulTypedName","src":"3032:4:24","type":""}],"src":"2944:319:24"},{"body":{"nativeSrc":"3338:116:24","nodeType":"YulBlock","src":"3338:116:24","statements":[{"body":{"nativeSrc":"3384:16:24","nodeType":"YulBlock","src":"3384:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3393:1:24","nodeType":"YulLiteral","src":"3393:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3396:1:24","nodeType":"YulLiteral","src":"3396:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3386:6:24","nodeType":"YulIdentifier","src":"3386:6:24"},"nativeSrc":"3386:12:24","nodeType":"YulFunctionCall","src":"3386:12:24"},"nativeSrc":"3386:12:24","nodeType":"YulExpressionStatement","src":"3386:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3359:7:24","nodeType":"YulIdentifier","src":"3359:7:24"},{"name":"headStart","nativeSrc":"3368:9:24","nodeType":"YulIdentifier","src":"3368:9:24"}],"functionName":{"name":"sub","nativeSrc":"3355:3:24","nodeType":"YulIdentifier","src":"3355:3:24"},"nativeSrc":"3355:23:24","nodeType":"YulFunctionCall","src":"3355:23:24"},{"kind":"number","nativeSrc":"3380:2:24","nodeType":"YulLiteral","src":"3380:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3351:3:24","nodeType":"YulIdentifier","src":"3351:3:24"},"nativeSrc":"3351:32:24","nodeType":"YulFunctionCall","src":"3351:32:24"},"nativeSrc":"3348:52:24","nodeType":"YulIf","src":"3348:52:24"},{"nativeSrc":"3409:39:24","nodeType":"YulAssignment","src":"3409:39:24","value":{"arguments":[{"name":"headStart","nativeSrc":"3438:9:24","nodeType":"YulIdentifier","src":"3438:9:24"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3419:18:24","nodeType":"YulIdentifier","src":"3419:18:24"},"nativeSrc":"3419:29:24","nodeType":"YulFunctionCall","src":"3419:29:24"},"variableNames":[{"name":"value0","nativeSrc":"3409:6:24","nodeType":"YulIdentifier","src":"3409:6:24"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3268:186:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3304:9:24","nodeType":"YulTypedName","src":"3304:9:24","type":""},{"name":"dataEnd","nativeSrc":"3315:7:24","nodeType":"YulTypedName","src":"3315:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3327:6:24","nodeType":"YulTypedName","src":"3327:6:24","type":""}],"src":"3268:186:24"},{"body":{"nativeSrc":"3553:427:24","nodeType":"YulBlock","src":"3553:427:24","statements":[{"nativeSrc":"3563:51:24","nodeType":"YulVariableDeclaration","src":"3563:51:24","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"3602:11:24","nodeType":"YulIdentifier","src":"3602:11:24"}],"functionName":{"name":"calldataload","nativeSrc":"3589:12:24","nodeType":"YulIdentifier","src":"3589:12:24"},"nativeSrc":"3589:25:24","nodeType":"YulFunctionCall","src":"3589:25:24"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"3567:18:24","nodeType":"YulTypedName","src":"3567:18:24","type":""}]},{"body":{"nativeSrc":"3703:16:24","nodeType":"YulBlock","src":"3703:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3712:1:24","nodeType":"YulLiteral","src":"3712:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3715:1:24","nodeType":"YulLiteral","src":"3715:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3705:6:24","nodeType":"YulIdentifier","src":"3705:6:24"},"nativeSrc":"3705:12:24","nodeType":"YulFunctionCall","src":"3705:12:24"},"nativeSrc":"3705:12:24","nodeType":"YulExpressionStatement","src":"3705:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"3637:18:24","nodeType":"YulIdentifier","src":"3637:18:24"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"3665:12:24","nodeType":"YulIdentifier","src":"3665:12:24"},"nativeSrc":"3665:14:24","nodeType":"YulFunctionCall","src":"3665:14:24"},{"name":"base_ref","nativeSrc":"3681:8:24","nodeType":"YulIdentifier","src":"3681:8:24"}],"functionName":{"name":"sub","nativeSrc":"3661:3:24","nodeType":"YulIdentifier","src":"3661:3:24"},"nativeSrc":"3661:29:24","nodeType":"YulFunctionCall","src":"3661:29:24"},{"arguments":[{"kind":"number","nativeSrc":"3696:2:24","nodeType":"YulLiteral","src":"3696:2:24","type":"","value":"30"}],"functionName":{"name":"not","nativeSrc":"3692:3:24","nodeType":"YulIdentifier","src":"3692:3:24"},"nativeSrc":"3692:7:24","nodeType":"YulFunctionCall","src":"3692:7:24"}],"functionName":{"name":"add","nativeSrc":"3657:3:24","nodeType":"YulIdentifier","src":"3657:3:24"},"nativeSrc":"3657:43:24","nodeType":"YulFunctionCall","src":"3657:43:24"}],"functionName":{"name":"slt","nativeSrc":"3633:3:24","nodeType":"YulIdentifier","src":"3633:3:24"},"nativeSrc":"3633:68:24","nodeType":"YulFunctionCall","src":"3633:68:24"}],"functionName":{"name":"iszero","nativeSrc":"3626:6:24","nodeType":"YulIdentifier","src":"3626:6:24"},"nativeSrc":"3626:76:24","nodeType":"YulFunctionCall","src":"3626:76:24"},"nativeSrc":"3623:96:24","nodeType":"YulIf","src":"3623:96:24"},{"nativeSrc":"3728:47:24","nodeType":"YulVariableDeclaration","src":"3728:47:24","value":{"arguments":[{"name":"base_ref","nativeSrc":"3746:8:24","nodeType":"YulIdentifier","src":"3746:8:24"},{"name":"rel_offset_of_tail","nativeSrc":"3756:18:24","nodeType":"YulIdentifier","src":"3756:18:24"}],"functionName":{"name":"add","nativeSrc":"3742:3:24","nodeType":"YulIdentifier","src":"3742:3:24"},"nativeSrc":"3742:33:24","nodeType":"YulFunctionCall","src":"3742:33:24"},"variables":[{"name":"addr_1","nativeSrc":"3732:6:24","nodeType":"YulTypedName","src":"3732:6:24","type":""}]},{"nativeSrc":"3784:30:24","nodeType":"YulAssignment","src":"3784:30:24","value":{"arguments":[{"name":"addr_1","nativeSrc":"3807:6:24","nodeType":"YulIdentifier","src":"3807:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"3794:12:24","nodeType":"YulIdentifier","src":"3794:12:24"},"nativeSrc":"3794:20:24","nodeType":"YulFunctionCall","src":"3794:20:24"},"variableNames":[{"name":"length","nativeSrc":"3784:6:24","nodeType":"YulIdentifier","src":"3784:6:24"}]},{"body":{"nativeSrc":"3857:16:24","nodeType":"YulBlock","src":"3857:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:1:24","nodeType":"YulLiteral","src":"3866:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3869:1:24","nodeType":"YulLiteral","src":"3869:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3859:6:24","nodeType":"YulIdentifier","src":"3859:6:24"},"nativeSrc":"3859:12:24","nodeType":"YulFunctionCall","src":"3859:12:24"},"nativeSrc":"3859:12:24","nodeType":"YulExpressionStatement","src":"3859:12:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3829:6:24","nodeType":"YulIdentifier","src":"3829:6:24"},{"kind":"number","nativeSrc":"3837:18:24","nodeType":"YulLiteral","src":"3837:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3826:2:24","nodeType":"YulIdentifier","src":"3826:2:24"},"nativeSrc":"3826:30:24","nodeType":"YulFunctionCall","src":"3826:30:24"},"nativeSrc":"3823:50:24","nodeType":"YulIf","src":"3823:50:24"},{"nativeSrc":"3882:25:24","nodeType":"YulAssignment","src":"3882:25:24","value":{"arguments":[{"name":"addr_1","nativeSrc":"3894:6:24","nodeType":"YulIdentifier","src":"3894:6:24"},{"kind":"number","nativeSrc":"3902:4:24","nodeType":"YulLiteral","src":"3902:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3890:3:24","nodeType":"YulIdentifier","src":"3890:3:24"},"nativeSrc":"3890:17:24","nodeType":"YulFunctionCall","src":"3890:17:24"},"variableNames":[{"name":"addr","nativeSrc":"3882:4:24","nodeType":"YulIdentifier","src":"3882:4:24"}]},{"body":{"nativeSrc":"3958:16:24","nodeType":"YulBlock","src":"3958:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3967:1:24","nodeType":"YulLiteral","src":"3967:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"3970:1:24","nodeType":"YulLiteral","src":"3970:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3960:6:24","nodeType":"YulIdentifier","src":"3960:6:24"},"nativeSrc":"3960:12:24","nodeType":"YulFunctionCall","src":"3960:12:24"},"nativeSrc":"3960:12:24","nodeType":"YulExpressionStatement","src":"3960:12:24"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"3923:4:24","nodeType":"YulIdentifier","src":"3923:4:24"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"3933:12:24","nodeType":"YulIdentifier","src":"3933:12:24"},"nativeSrc":"3933:14:24","nodeType":"YulFunctionCall","src":"3933:14:24"},{"name":"length","nativeSrc":"3949:6:24","nodeType":"YulIdentifier","src":"3949:6:24"}],"functionName":{"name":"sub","nativeSrc":"3929:3:24","nodeType":"YulIdentifier","src":"3929:3:24"},"nativeSrc":"3929:27:24","nodeType":"YulFunctionCall","src":"3929:27:24"}],"functionName":{"name":"sgt","nativeSrc":"3919:3:24","nodeType":"YulIdentifier","src":"3919:3:24"},"nativeSrc":"3919:38:24","nodeType":"YulFunctionCall","src":"3919:38:24"},"nativeSrc":"3916:58:24","nodeType":"YulIf","src":"3916:58:24"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"3459:521:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"3510:8:24","nodeType":"YulTypedName","src":"3510:8:24","type":""},{"name":"ptr_to_tail","nativeSrc":"3520:11:24","nodeType":"YulTypedName","src":"3520:11:24","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"3536:4:24","nodeType":"YulTypedName","src":"3536:4:24","type":""},{"name":"length","nativeSrc":"3542:6:24","nodeType":"YulTypedName","src":"3542:6:24","type":""}],"src":"3459:521:24"},{"body":{"nativeSrc":"4132:449:24","nodeType":"YulBlock","src":"4132:449:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4149:9:24","nodeType":"YulIdentifier","src":"4149:9:24"},{"name":"value0","nativeSrc":"4160:6:24","nodeType":"YulIdentifier","src":"4160:6:24"}],"functionName":{"name":"mstore","nativeSrc":"4142:6:24","nodeType":"YulIdentifier","src":"4142:6:24"},"nativeSrc":"4142:25:24","nodeType":"YulFunctionCall","src":"4142:25:24"},"nativeSrc":"4142:25:24","nodeType":"YulExpressionStatement","src":"4142:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4187:9:24","nodeType":"YulIdentifier","src":"4187:9:24"},{"kind":"number","nativeSrc":"4198:2:24","nodeType":"YulLiteral","src":"4198:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4183:3:24","nodeType":"YulIdentifier","src":"4183:3:24"},"nativeSrc":"4183:18:24","nodeType":"YulFunctionCall","src":"4183:18:24"},{"kind":"number","nativeSrc":"4203:2:24","nodeType":"YulLiteral","src":"4203:2:24","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"4176:6:24","nodeType":"YulIdentifier","src":"4176:6:24"},"nativeSrc":"4176:30:24","nodeType":"YulFunctionCall","src":"4176:30:24"},"nativeSrc":"4176:30:24","nodeType":"YulExpressionStatement","src":"4176:30:24"},{"nativeSrc":"4215:27:24","nodeType":"YulVariableDeclaration","src":"4215:27:24","value":{"arguments":[{"name":"value1","nativeSrc":"4235:6:24","nodeType":"YulIdentifier","src":"4235:6:24"}],"functionName":{"name":"mload","nativeSrc":"4229:5:24","nodeType":"YulIdentifier","src":"4229:5:24"},"nativeSrc":"4229:13:24","nodeType":"YulFunctionCall","src":"4229:13:24"},"variables":[{"name":"length","nativeSrc":"4219:6:24","nodeType":"YulTypedName","src":"4219:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4262:9:24","nodeType":"YulIdentifier","src":"4262:9:24"},{"kind":"number","nativeSrc":"4273:2:24","nodeType":"YulLiteral","src":"4273:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4258:3:24","nodeType":"YulIdentifier","src":"4258:3:24"},"nativeSrc":"4258:18:24","nodeType":"YulFunctionCall","src":"4258:18:24"},{"name":"length","nativeSrc":"4278:6:24","nodeType":"YulIdentifier","src":"4278:6:24"}],"functionName":{"name":"mstore","nativeSrc":"4251:6:24","nodeType":"YulIdentifier","src":"4251:6:24"},"nativeSrc":"4251:34:24","nodeType":"YulFunctionCall","src":"4251:34:24"},"nativeSrc":"4251:34:24","nodeType":"YulExpressionStatement","src":"4251:34:24"},{"nativeSrc":"4294:10:24","nodeType":"YulVariableDeclaration","src":"4294:10:24","value":{"kind":"number","nativeSrc":"4303:1:24","nodeType":"YulLiteral","src":"4303:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4298:1:24","nodeType":"YulTypedName","src":"4298:1:24","type":""}]},{"body":{"nativeSrc":"4363:90:24","nodeType":"YulBlock","src":"4363:90:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4392:9:24","nodeType":"YulIdentifier","src":"4392:9:24"},{"name":"i","nativeSrc":"4403:1:24","nodeType":"YulIdentifier","src":"4403:1:24"}],"functionName":{"name":"add","nativeSrc":"4388:3:24","nodeType":"YulIdentifier","src":"4388:3:24"},"nativeSrc":"4388:17:24","nodeType":"YulFunctionCall","src":"4388:17:24"},{"kind":"number","nativeSrc":"4407:2:24","nodeType":"YulLiteral","src":"4407:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4384:3:24","nodeType":"YulIdentifier","src":"4384:3:24"},"nativeSrc":"4384:26:24","nodeType":"YulFunctionCall","src":"4384:26:24"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"4426:6:24","nodeType":"YulIdentifier","src":"4426:6:24"},{"name":"i","nativeSrc":"4434:1:24","nodeType":"YulIdentifier","src":"4434:1:24"}],"functionName":{"name":"add","nativeSrc":"4422:3:24","nodeType":"YulIdentifier","src":"4422:3:24"},"nativeSrc":"4422:14:24","nodeType":"YulFunctionCall","src":"4422:14:24"},{"kind":"number","nativeSrc":"4438:2:24","nodeType":"YulLiteral","src":"4438:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4418:3:24","nodeType":"YulIdentifier","src":"4418:3:24"},"nativeSrc":"4418:23:24","nodeType":"YulFunctionCall","src":"4418:23:24"}],"functionName":{"name":"mload","nativeSrc":"4412:5:24","nodeType":"YulIdentifier","src":"4412:5:24"},"nativeSrc":"4412:30:24","nodeType":"YulFunctionCall","src":"4412:30:24"}],"functionName":{"name":"mstore","nativeSrc":"4377:6:24","nodeType":"YulIdentifier","src":"4377:6:24"},"nativeSrc":"4377:66:24","nodeType":"YulFunctionCall","src":"4377:66:24"},"nativeSrc":"4377:66:24","nodeType":"YulExpressionStatement","src":"4377:66:24"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4324:1:24","nodeType":"YulIdentifier","src":"4324:1:24"},{"name":"length","nativeSrc":"4327:6:24","nodeType":"YulIdentifier","src":"4327:6:24"}],"functionName":{"name":"lt","nativeSrc":"4321:2:24","nodeType":"YulIdentifier","src":"4321:2:24"},"nativeSrc":"4321:13:24","nodeType":"YulFunctionCall","src":"4321:13:24"},"nativeSrc":"4313:140:24","nodeType":"YulForLoop","post":{"nativeSrc":"4335:19:24","nodeType":"YulBlock","src":"4335:19:24","statements":[{"nativeSrc":"4337:15:24","nodeType":"YulAssignment","src":"4337:15:24","value":{"arguments":[{"name":"i","nativeSrc":"4346:1:24","nodeType":"YulIdentifier","src":"4346:1:24"},{"kind":"number","nativeSrc":"4349:2:24","nodeType":"YulLiteral","src":"4349:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4342:3:24","nodeType":"YulIdentifier","src":"4342:3:24"},"nativeSrc":"4342:10:24","nodeType":"YulFunctionCall","src":"4342:10:24"},"variableNames":[{"name":"i","nativeSrc":"4337:1:24","nodeType":"YulIdentifier","src":"4337:1:24"}]}]},"pre":{"nativeSrc":"4317:3:24","nodeType":"YulBlock","src":"4317:3:24","statements":[]},"src":"4313:140:24"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4477:9:24","nodeType":"YulIdentifier","src":"4477:9:24"},{"name":"length","nativeSrc":"4488:6:24","nodeType":"YulIdentifier","src":"4488:6:24"}],"functionName":{"name":"add","nativeSrc":"4473:3:24","nodeType":"YulIdentifier","src":"4473:3:24"},"nativeSrc":"4473:22:24","nodeType":"YulFunctionCall","src":"4473:22:24"},{"kind":"number","nativeSrc":"4497:2:24","nodeType":"YulLiteral","src":"4497:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4469:3:24","nodeType":"YulIdentifier","src":"4469:3:24"},"nativeSrc":"4469:31:24","nodeType":"YulFunctionCall","src":"4469:31:24"},{"kind":"number","nativeSrc":"4502:1:24","nodeType":"YulLiteral","src":"4502:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4462:6:24","nodeType":"YulIdentifier","src":"4462:6:24"},"nativeSrc":"4462:42:24","nodeType":"YulFunctionCall","src":"4462:42:24"},"nativeSrc":"4462:42:24","nodeType":"YulExpressionStatement","src":"4462:42:24"},{"nativeSrc":"4513:62:24","nodeType":"YulAssignment","src":"4513:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4529:9:24","nodeType":"YulIdentifier","src":"4529:9:24"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4548:6:24","nodeType":"YulIdentifier","src":"4548:6:24"},{"kind":"number","nativeSrc":"4556:2:24","nodeType":"YulLiteral","src":"4556:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4544:3:24","nodeType":"YulIdentifier","src":"4544:3:24"},"nativeSrc":"4544:15:24","nodeType":"YulFunctionCall","src":"4544:15:24"},{"arguments":[{"kind":"number","nativeSrc":"4565:2:24","nodeType":"YulLiteral","src":"4565:2:24","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4561:3:24","nodeType":"YulIdentifier","src":"4561:3:24"},"nativeSrc":"4561:7:24","nodeType":"YulFunctionCall","src":"4561:7:24"}],"functionName":{"name":"and","nativeSrc":"4540:3:24","nodeType":"YulIdentifier","src":"4540:3:24"},"nativeSrc":"4540:29:24","nodeType":"YulFunctionCall","src":"4540:29:24"}],"functionName":{"name":"add","nativeSrc":"4525:3:24","nodeType":"YulIdentifier","src":"4525:3:24"},"nativeSrc":"4525:45:24","nodeType":"YulFunctionCall","src":"4525:45:24"},{"kind":"number","nativeSrc":"4572:2:24","nodeType":"YulLiteral","src":"4572:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4521:3:24","nodeType":"YulIdentifier","src":"4521:3:24"},"nativeSrc":"4521:54:24","nodeType":"YulFunctionCall","src":"4521:54:24"},"variableNames":[{"name":"tail","nativeSrc":"4513:4:24","nodeType":"YulIdentifier","src":"4513:4:24"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"3985:596:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4093:9:24","nodeType":"YulTypedName","src":"4093:9:24","type":""},{"name":"value1","nativeSrc":"4104:6:24","nodeType":"YulTypedName","src":"4104:6:24","type":""},{"name":"value0","nativeSrc":"4112:6:24","nodeType":"YulTypedName","src":"4112:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4123:4:24","nodeType":"YulTypedName","src":"4123:4:24","type":""}],"src":"3985:596:24"},{"body":{"nativeSrc":"4760:160:24","nodeType":"YulBlock","src":"4760:160:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4777:9:24","nodeType":"YulIdentifier","src":"4777:9:24"},{"kind":"number","nativeSrc":"4788:2:24","nodeType":"YulLiteral","src":"4788:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4770:6:24","nodeType":"YulIdentifier","src":"4770:6:24"},"nativeSrc":"4770:21:24","nodeType":"YulFunctionCall","src":"4770:21:24"},"nativeSrc":"4770:21:24","nodeType":"YulExpressionStatement","src":"4770:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4811:9:24","nodeType":"YulIdentifier","src":"4811:9:24"},{"kind":"number","nativeSrc":"4822:2:24","nodeType":"YulLiteral","src":"4822:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4807:3:24","nodeType":"YulIdentifier","src":"4807:3:24"},"nativeSrc":"4807:18:24","nodeType":"YulFunctionCall","src":"4807:18:24"},{"kind":"number","nativeSrc":"4827:2:24","nodeType":"YulLiteral","src":"4827:2:24","type":"","value":"10"}],"functionName":{"name":"mstore","nativeSrc":"4800:6:24","nodeType":"YulIdentifier","src":"4800:6:24"},"nativeSrc":"4800:30:24","nodeType":"YulFunctionCall","src":"4800:30:24"},"nativeSrc":"4800:30:24","nodeType":"YulExpressionStatement","src":"4800:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4850:9:24","nodeType":"YulIdentifier","src":"4850:9:24"},{"kind":"number","nativeSrc":"4861:2:24","nodeType":"YulLiteral","src":"4861:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4846:3:24","nodeType":"YulIdentifier","src":"4846:3:24"},"nativeSrc":"4846:18:24","nodeType":"YulFunctionCall","src":"4846:18:24"},{"hexValue":"4f6e6c79206f776e6572","kind":"string","nativeSrc":"4866:12:24","nodeType":"YulLiteral","src":"4866:12:24","type":"","value":"Only owner"}],"functionName":{"name":"mstore","nativeSrc":"4839:6:24","nodeType":"YulIdentifier","src":"4839:6:24"},"nativeSrc":"4839:40:24","nodeType":"YulFunctionCall","src":"4839:40:24"},"nativeSrc":"4839:40:24","nodeType":"YulExpressionStatement","src":"4839:40:24"},{"nativeSrc":"4888:26:24","nodeType":"YulAssignment","src":"4888:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"4900:9:24","nodeType":"YulIdentifier","src":"4900:9:24"},{"kind":"number","nativeSrc":"4911:2:24","nodeType":"YulLiteral","src":"4911:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4896:3:24","nodeType":"YulIdentifier","src":"4896:3:24"},"nativeSrc":"4896:18:24","nodeType":"YulFunctionCall","src":"4896:18:24"},"variableNames":[{"name":"tail","nativeSrc":"4888:4:24","nodeType":"YulIdentifier","src":"4888:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4586:334:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4737:9:24","nodeType":"YulTypedName","src":"4737:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4751:4:24","nodeType":"YulTypedName","src":"4751:4:24","type":""}],"src":"4586:334:24"},{"body":{"nativeSrc":"5072:124:24","nodeType":"YulBlock","src":"5072:124:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5095:3:24","nodeType":"YulIdentifier","src":"5095:3:24"},{"name":"value0","nativeSrc":"5100:6:24","nodeType":"YulIdentifier","src":"5100:6:24"},{"name":"value1","nativeSrc":"5108:6:24","nodeType":"YulIdentifier","src":"5108:6:24"}],"functionName":{"name":"calldatacopy","nativeSrc":"5082:12:24","nodeType":"YulIdentifier","src":"5082:12:24"},"nativeSrc":"5082:33:24","nodeType":"YulFunctionCall","src":"5082:33:24"},"nativeSrc":"5082:33:24","nodeType":"YulExpressionStatement","src":"5082:33:24"},{"nativeSrc":"5124:26:24","nodeType":"YulVariableDeclaration","src":"5124:26:24","value":{"arguments":[{"name":"pos","nativeSrc":"5138:3:24","nodeType":"YulIdentifier","src":"5138:3:24"},{"name":"value1","nativeSrc":"5143:6:24","nodeType":"YulIdentifier","src":"5143:6:24"}],"functionName":{"name":"add","nativeSrc":"5134:3:24","nodeType":"YulIdentifier","src":"5134:3:24"},"nativeSrc":"5134:16:24","nodeType":"YulFunctionCall","src":"5134:16:24"},"variables":[{"name":"_1","nativeSrc":"5128:2:24","nodeType":"YulTypedName","src":"5128:2:24","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"5166:2:24","nodeType":"YulIdentifier","src":"5166:2:24"},{"kind":"number","nativeSrc":"5170:1:24","nodeType":"YulLiteral","src":"5170:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5159:6:24","nodeType":"YulIdentifier","src":"5159:6:24"},"nativeSrc":"5159:13:24","nodeType":"YulFunctionCall","src":"5159:13:24"},"nativeSrc":"5159:13:24","nodeType":"YulExpressionStatement","src":"5159:13:24"},{"nativeSrc":"5181:9:24","nodeType":"YulAssignment","src":"5181:9:24","value":{"name":"_1","nativeSrc":"5188:2:24","nodeType":"YulIdentifier","src":"5188:2:24"},"variableNames":[{"name":"end","nativeSrc":"5181:3:24","nodeType":"YulIdentifier","src":"5181:3:24"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"4925:271:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5040:3:24","nodeType":"YulTypedName","src":"5040:3:24","type":""},{"name":"value1","nativeSrc":"5045:6:24","nodeType":"YulTypedName","src":"5045:6:24","type":""},{"name":"value0","nativeSrc":"5053:6:24","nodeType":"YulTypedName","src":"5053:6:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5064:3:24","nodeType":"YulTypedName","src":"5064:3:24","type":""}],"src":"4925:271:24"},{"body":{"nativeSrc":"5375:166:24","nodeType":"YulBlock","src":"5375:166:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5392:9:24","nodeType":"YulIdentifier","src":"5392:9:24"},{"kind":"number","nativeSrc":"5403:2:24","nodeType":"YulLiteral","src":"5403:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5385:6:24","nodeType":"YulIdentifier","src":"5385:6:24"},"nativeSrc":"5385:21:24","nodeType":"YulFunctionCall","src":"5385:21:24"},"nativeSrc":"5385:21:24","nodeType":"YulExpressionStatement","src":"5385:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5426:9:24","nodeType":"YulIdentifier","src":"5426:9:24"},{"kind":"number","nativeSrc":"5437:2:24","nodeType":"YulLiteral","src":"5437:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5422:3:24","nodeType":"YulIdentifier","src":"5422:3:24"},"nativeSrc":"5422:18:24","nodeType":"YulFunctionCall","src":"5422:18:24"},{"kind":"number","nativeSrc":"5442:2:24","nodeType":"YulLiteral","src":"5442:2:24","type":"","value":"16"}],"functionName":{"name":"mstore","nativeSrc":"5415:6:24","nodeType":"YulIdentifier","src":"5415:6:24"},"nativeSrc":"5415:30:24","nodeType":"YulFunctionCall","src":"5415:30:24"},"nativeSrc":"5415:30:24","nodeType":"YulExpressionStatement","src":"5415:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5465:9:24","nodeType":"YulIdentifier","src":"5465:9:24"},{"kind":"number","nativeSrc":"5476:2:24","nodeType":"YulLiteral","src":"5476:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5461:3:24","nodeType":"YulIdentifier","src":"5461:3:24"},"nativeSrc":"5461:18:24","nodeType":"YulFunctionCall","src":"5461:18:24"},{"hexValue":"457865637574696f6e206661696c6564","kind":"string","nativeSrc":"5481:18:24","nodeType":"YulLiteral","src":"5481:18:24","type":"","value":"Execution failed"}],"functionName":{"name":"mstore","nativeSrc":"5454:6:24","nodeType":"YulIdentifier","src":"5454:6:24"},"nativeSrc":"5454:46:24","nodeType":"YulFunctionCall","src":"5454:46:24"},"nativeSrc":"5454:46:24","nodeType":"YulExpressionStatement","src":"5454:46:24"},{"nativeSrc":"5509:26:24","nodeType":"YulAssignment","src":"5509:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"5521:9:24","nodeType":"YulIdentifier","src":"5521:9:24"},{"kind":"number","nativeSrc":"5532:2:24","nodeType":"YulLiteral","src":"5532:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5517:3:24","nodeType":"YulIdentifier","src":"5517:3:24"},"nativeSrc":"5517:18:24","nodeType":"YulFunctionCall","src":"5517:18:24"},"variableNames":[{"name":"tail","nativeSrc":"5509:4:24","nodeType":"YulIdentifier","src":"5509:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_36fdcc45171afde7667666c94fc33ecdb7822c92e5282dda8124205e12e0ac03__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5201:340:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5352:9:24","nodeType":"YulTypedName","src":"5352:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5366:4:24","nodeType":"YulTypedName","src":"5366:4:24","type":""}],"src":"5201:340:24"},{"body":{"nativeSrc":"5683:171:24","nodeType":"YulBlock","src":"5683:171:24","statements":[{"nativeSrc":"5693:26:24","nodeType":"YulAssignment","src":"5693:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"5705:9:24","nodeType":"YulIdentifier","src":"5705:9:24"},{"kind":"number","nativeSrc":"5716:2:24","nodeType":"YulLiteral","src":"5716:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5701:3:24","nodeType":"YulIdentifier","src":"5701:3:24"},"nativeSrc":"5701:18:24","nodeType":"YulFunctionCall","src":"5701:18:24"},"variableNames":[{"name":"tail","nativeSrc":"5693:4:24","nodeType":"YulIdentifier","src":"5693:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5735:9:24","nodeType":"YulIdentifier","src":"5735:9:24"},{"arguments":[{"name":"value0","nativeSrc":"5750:6:24","nodeType":"YulIdentifier","src":"5750:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5766:3:24","nodeType":"YulLiteral","src":"5766:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"5771:1:24","nodeType":"YulLiteral","src":"5771:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5762:3:24","nodeType":"YulIdentifier","src":"5762:3:24"},"nativeSrc":"5762:11:24","nodeType":"YulFunctionCall","src":"5762:11:24"},{"kind":"number","nativeSrc":"5775:1:24","nodeType":"YulLiteral","src":"5775:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5758:3:24","nodeType":"YulIdentifier","src":"5758:3:24"},"nativeSrc":"5758:19:24","nodeType":"YulFunctionCall","src":"5758:19:24"}],"functionName":{"name":"and","nativeSrc":"5746:3:24","nodeType":"YulIdentifier","src":"5746:3:24"},"nativeSrc":"5746:32:24","nodeType":"YulFunctionCall","src":"5746:32:24"}],"functionName":{"name":"mstore","nativeSrc":"5728:6:24","nodeType":"YulIdentifier","src":"5728:6:24"},"nativeSrc":"5728:51:24","nodeType":"YulFunctionCall","src":"5728:51:24"},"nativeSrc":"5728:51:24","nodeType":"YulExpressionStatement","src":"5728:51:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5799:9:24","nodeType":"YulIdentifier","src":"5799:9:24"},{"kind":"number","nativeSrc":"5810:2:24","nodeType":"YulLiteral","src":"5810:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5795:3:24","nodeType":"YulIdentifier","src":"5795:3:24"},"nativeSrc":"5795:18:24","nodeType":"YulFunctionCall","src":"5795:18:24"},{"arguments":[{"name":"value1","nativeSrc":"5819:6:24","nodeType":"YulIdentifier","src":"5819:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5835:3:24","nodeType":"YulLiteral","src":"5835:3:24","type":"","value":"192"},{"kind":"number","nativeSrc":"5840:1:24","nodeType":"YulLiteral","src":"5840:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5831:3:24","nodeType":"YulIdentifier","src":"5831:3:24"},"nativeSrc":"5831:11:24","nodeType":"YulFunctionCall","src":"5831:11:24"},{"kind":"number","nativeSrc":"5844:1:24","nodeType":"YulLiteral","src":"5844:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5827:3:24","nodeType":"YulIdentifier","src":"5827:3:24"},"nativeSrc":"5827:19:24","nodeType":"YulFunctionCall","src":"5827:19:24"}],"functionName":{"name":"and","nativeSrc":"5815:3:24","nodeType":"YulIdentifier","src":"5815:3:24"},"nativeSrc":"5815:32:24","nodeType":"YulFunctionCall","src":"5815:32:24"}],"functionName":{"name":"mstore","nativeSrc":"5788:6:24","nodeType":"YulIdentifier","src":"5788:6:24"},"nativeSrc":"5788:60:24","nodeType":"YulFunctionCall","src":"5788:60:24"},"nativeSrc":"5788:60:24","nodeType":"YulExpressionStatement","src":"5788:60:24"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed","nativeSrc":"5546:308:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5644:9:24","nodeType":"YulTypedName","src":"5644:9:24","type":""},{"name":"value1","nativeSrc":"5655:6:24","nodeType":"YulTypedName","src":"5655:6:24","type":""},{"name":"value0","nativeSrc":"5663:6:24","nodeType":"YulTypedName","src":"5663:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5674:4:24","nodeType":"YulTypedName","src":"5674:4:24","type":""}],"src":"5546:308:24"},{"body":{"nativeSrc":"5940:103:24","nodeType":"YulBlock","src":"5940:103:24","statements":[{"body":{"nativeSrc":"5986:16:24","nodeType":"YulBlock","src":"5986:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5995:1:24","nodeType":"YulLiteral","src":"5995:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"5998:1:24","nodeType":"YulLiteral","src":"5998:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5988:6:24","nodeType":"YulIdentifier","src":"5988:6:24"},"nativeSrc":"5988:12:24","nodeType":"YulFunctionCall","src":"5988:12:24"},"nativeSrc":"5988:12:24","nodeType":"YulExpressionStatement","src":"5988:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5961:7:24","nodeType":"YulIdentifier","src":"5961:7:24"},{"name":"headStart","nativeSrc":"5970:9:24","nodeType":"YulIdentifier","src":"5970:9:24"}],"functionName":{"name":"sub","nativeSrc":"5957:3:24","nodeType":"YulIdentifier","src":"5957:3:24"},"nativeSrc":"5957:23:24","nodeType":"YulFunctionCall","src":"5957:23:24"},{"kind":"number","nativeSrc":"5982:2:24","nodeType":"YulLiteral","src":"5982:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5953:3:24","nodeType":"YulIdentifier","src":"5953:3:24"},"nativeSrc":"5953:32:24","nodeType":"YulFunctionCall","src":"5953:32:24"},"nativeSrc":"5950:52:24","nodeType":"YulIf","src":"5950:52:24"},{"nativeSrc":"6011:26:24","nodeType":"YulAssignment","src":"6011:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"6027:9:24","nodeType":"YulIdentifier","src":"6027:9:24"}],"functionName":{"name":"mload","nativeSrc":"6021:5:24","nodeType":"YulIdentifier","src":"6021:5:24"},"nativeSrc":"6021:16:24","nodeType":"YulFunctionCall","src":"6021:16:24"},"variableNames":[{"name":"value0","nativeSrc":"6011:6:24","nodeType":"YulIdentifier","src":"6011:6:24"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"5859:184:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5906:9:24","nodeType":"YulTypedName","src":"5906:9:24","type":""},{"name":"dataEnd","nativeSrc":"5917:7:24","nodeType":"YulTypedName","src":"5917:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5929:6:24","nodeType":"YulTypedName","src":"5929:6:24","type":""}],"src":"5859:184:24"},{"body":{"nativeSrc":"6222:178:24","nodeType":"YulBlock","src":"6222:178:24","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6239:9:24","nodeType":"YulIdentifier","src":"6239:9:24"},{"kind":"number","nativeSrc":"6250:2:24","nodeType":"YulLiteral","src":"6250:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6232:6:24","nodeType":"YulIdentifier","src":"6232:6:24"},"nativeSrc":"6232:21:24","nodeType":"YulFunctionCall","src":"6232:21:24"},"nativeSrc":"6232:21:24","nodeType":"YulExpressionStatement","src":"6232:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6273:9:24","nodeType":"YulIdentifier","src":"6273:9:24"},{"kind":"number","nativeSrc":"6284:2:24","nodeType":"YulLiteral","src":"6284:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6269:3:24","nodeType":"YulIdentifier","src":"6269:3:24"},"nativeSrc":"6269:18:24","nodeType":"YulFunctionCall","src":"6269:18:24"},{"kind":"number","nativeSrc":"6289:2:24","nodeType":"YulLiteral","src":"6289:2:24","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"6262:6:24","nodeType":"YulIdentifier","src":"6262:6:24"},"nativeSrc":"6262:30:24","nodeType":"YulFunctionCall","src":"6262:30:24"},"nativeSrc":"6262:30:24","nodeType":"YulExpressionStatement","src":"6262:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6312:9:24","nodeType":"YulIdentifier","src":"6312:9:24"},{"kind":"number","nativeSrc":"6323:2:24","nodeType":"YulLiteral","src":"6323:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6308:3:24","nodeType":"YulIdentifier","src":"6308:3:24"},"nativeSrc":"6308:18:24","nodeType":"YulFunctionCall","src":"6308:18:24"},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","kind":"string","nativeSrc":"6328:30:24","nodeType":"YulLiteral","src":"6328:30:24","type":"","value":"account: not from EntryPoint"}],"functionName":{"name":"mstore","nativeSrc":"6301:6:24","nodeType":"YulIdentifier","src":"6301:6:24"},"nativeSrc":"6301:58:24","nodeType":"YulFunctionCall","src":"6301:58:24"},"nativeSrc":"6301:58:24","nodeType":"YulExpressionStatement","src":"6301:58:24"},{"nativeSrc":"6368:26:24","nodeType":"YulAssignment","src":"6368:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"6380:9:24","nodeType":"YulIdentifier","src":"6380:9:24"},{"kind":"number","nativeSrc":"6391:2:24","nodeType":"YulLiteral","src":"6391:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6376:3:24","nodeType":"YulIdentifier","src":"6376:3:24"},"nativeSrc":"6376:18:24","nodeType":"YulFunctionCall","src":"6376:18:24"},"variableNames":[{"name":"tail","nativeSrc":"6368:4:24","nodeType":"YulIdentifier","src":"6368:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6048:352:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6199:9:24","nodeType":"YulTypedName","src":"6199:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6213:4:24","nodeType":"YulTypedName","src":"6213:4:24","type":""}],"src":"6048:352:24"},{"body":{"nativeSrc":"6596:14:24","nodeType":"YulBlock","src":"6596:14:24","statements":[{"nativeSrc":"6598:10:24","nodeType":"YulAssignment","src":"6598:10:24","value":{"name":"pos","nativeSrc":"6605:3:24","nodeType":"YulIdentifier","src":"6605:3:24"},"variableNames":[{"name":"end","nativeSrc":"6598:3:24","nodeType":"YulIdentifier","src":"6598:3:24"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"6405:205:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6580:3:24","nodeType":"YulTypedName","src":"6580:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6588:3:24","nodeType":"YulTypedName","src":"6588:3:24","type":""}],"src":"6405:205:24"},{"body":{"nativeSrc":"6647:95:24","nodeType":"YulBlock","src":"6647:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6664:1:24","nodeType":"YulLiteral","src":"6664:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6671:3:24","nodeType":"YulLiteral","src":"6671:3:24","type":"","value":"224"},{"kind":"number","nativeSrc":"6676:10:24","nodeType":"YulLiteral","src":"6676:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6667:3:24","nodeType":"YulIdentifier","src":"6667:3:24"},"nativeSrc":"6667:20:24","nodeType":"YulFunctionCall","src":"6667:20:24"}],"functionName":{"name":"mstore","nativeSrc":"6657:6:24","nodeType":"YulIdentifier","src":"6657:6:24"},"nativeSrc":"6657:31:24","nodeType":"YulFunctionCall","src":"6657:31:24"},"nativeSrc":"6657:31:24","nodeType":"YulExpressionStatement","src":"6657:31:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6704:1:24","nodeType":"YulLiteral","src":"6704:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"6707:4:24","nodeType":"YulLiteral","src":"6707:4:24","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"6697:6:24","nodeType":"YulIdentifier","src":"6697:6:24"},"nativeSrc":"6697:15:24","nodeType":"YulFunctionCall","src":"6697:15:24"},"nativeSrc":"6697:15:24","nodeType":"YulExpressionStatement","src":"6697:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6728:1:24","nodeType":"YulLiteral","src":"6728:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"6731:4:24","nodeType":"YulLiteral","src":"6731:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6721:6:24","nodeType":"YulIdentifier","src":"6721:6:24"},"nativeSrc":"6721:15:24","nodeType":"YulFunctionCall","src":"6721:15:24"},"nativeSrc":"6721:15:24","nodeType":"YulExpressionStatement","src":"6721:15:24"}]},"name":"panic_error_0x21","nativeSrc":"6615:127:24","nodeType":"YulFunctionDefinition","src":"6615:127:24"},{"body":{"nativeSrc":"6848:76:24","nodeType":"YulBlock","src":"6848:76:24","statements":[{"nativeSrc":"6858:26:24","nodeType":"YulAssignment","src":"6858:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"6870:9:24","nodeType":"YulIdentifier","src":"6870:9:24"},{"kind":"number","nativeSrc":"6881:2:24","nodeType":"YulLiteral","src":"6881:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6866:3:24","nodeType":"YulIdentifier","src":"6866:3:24"},"nativeSrc":"6866:18:24","nodeType":"YulFunctionCall","src":"6866:18:24"},"variableNames":[{"name":"tail","nativeSrc":"6858:4:24","nodeType":"YulIdentifier","src":"6858:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6900:9:24","nodeType":"YulIdentifier","src":"6900:9:24"},{"name":"value0","nativeSrc":"6911:6:24","nodeType":"YulIdentifier","src":"6911:6:24"}],"functionName":{"name":"mstore","nativeSrc":"6893:6:24","nodeType":"YulIdentifier","src":"6893:6:24"},"nativeSrc":"6893:25:24","nodeType":"YulFunctionCall","src":"6893:25:24"},"nativeSrc":"6893:25:24","nodeType":"YulExpressionStatement","src":"6893:25:24"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6747:177:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6817:9:24","nodeType":"YulTypedName","src":"6817:9:24","type":""},{"name":"value0","nativeSrc":"6828:6:24","nodeType":"YulTypedName","src":"6828:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6839:4:24","nodeType":"YulTypedName","src":"6839:4:24","type":""}],"src":"6747:177:24"},{"body":{"nativeSrc":"7110:217:24","nodeType":"YulBlock","src":"7110:217:24","statements":[{"nativeSrc":"7120:27:24","nodeType":"YulAssignment","src":"7120:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"7132:9:24","nodeType":"YulIdentifier","src":"7132:9:24"},{"kind":"number","nativeSrc":"7143:3:24","nodeType":"YulLiteral","src":"7143:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7128:3:24","nodeType":"YulIdentifier","src":"7128:3:24"},"nativeSrc":"7128:19:24","nodeType":"YulFunctionCall","src":"7128:19:24"},"variableNames":[{"name":"tail","nativeSrc":"7120:4:24","nodeType":"YulIdentifier","src":"7120:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7163:9:24","nodeType":"YulIdentifier","src":"7163:9:24"},{"name":"value0","nativeSrc":"7174:6:24","nodeType":"YulIdentifier","src":"7174:6:24"}],"functionName":{"name":"mstore","nativeSrc":"7156:6:24","nodeType":"YulIdentifier","src":"7156:6:24"},"nativeSrc":"7156:25:24","nodeType":"YulFunctionCall","src":"7156:25:24"},"nativeSrc":"7156:25:24","nodeType":"YulExpressionStatement","src":"7156:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7201:9:24","nodeType":"YulIdentifier","src":"7201:9:24"},{"kind":"number","nativeSrc":"7212:2:24","nodeType":"YulLiteral","src":"7212:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7197:3:24","nodeType":"YulIdentifier","src":"7197:3:24"},"nativeSrc":"7197:18:24","nodeType":"YulFunctionCall","src":"7197:18:24"},{"arguments":[{"name":"value1","nativeSrc":"7221:6:24","nodeType":"YulIdentifier","src":"7221:6:24"},{"kind":"number","nativeSrc":"7229:4:24","nodeType":"YulLiteral","src":"7229:4:24","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7217:3:24","nodeType":"YulIdentifier","src":"7217:3:24"},"nativeSrc":"7217:17:24","nodeType":"YulFunctionCall","src":"7217:17:24"}],"functionName":{"name":"mstore","nativeSrc":"7190:6:24","nodeType":"YulIdentifier","src":"7190:6:24"},"nativeSrc":"7190:45:24","nodeType":"YulFunctionCall","src":"7190:45:24"},"nativeSrc":"7190:45:24","nodeType":"YulExpressionStatement","src":"7190:45:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7255:9:24","nodeType":"YulIdentifier","src":"7255:9:24"},{"kind":"number","nativeSrc":"7266:2:24","nodeType":"YulLiteral","src":"7266:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7251:3:24","nodeType":"YulIdentifier","src":"7251:3:24"},"nativeSrc":"7251:18:24","nodeType":"YulFunctionCall","src":"7251:18:24"},{"name":"value2","nativeSrc":"7271:6:24","nodeType":"YulIdentifier","src":"7271:6:24"}],"functionName":{"name":"mstore","nativeSrc":"7244:6:24","nodeType":"YulIdentifier","src":"7244:6:24"},"nativeSrc":"7244:34:24","nodeType":"YulFunctionCall","src":"7244:34:24"},"nativeSrc":"7244:34:24","nodeType":"YulExpressionStatement","src":"7244:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7298:9:24","nodeType":"YulIdentifier","src":"7298:9:24"},{"kind":"number","nativeSrc":"7309:2:24","nodeType":"YulLiteral","src":"7309:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7294:3:24","nodeType":"YulIdentifier","src":"7294:3:24"},"nativeSrc":"7294:18:24","nodeType":"YulFunctionCall","src":"7294:18:24"},{"name":"value3","nativeSrc":"7314:6:24","nodeType":"YulIdentifier","src":"7314:6:24"}],"functionName":{"name":"mstore","nativeSrc":"7287:6:24","nodeType":"YulIdentifier","src":"7287:6:24"},"nativeSrc":"7287:34:24","nodeType":"YulFunctionCall","src":"7287:34:24"},"nativeSrc":"7287:34:24","nodeType":"YulExpressionStatement","src":"7287:34:24"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"6929:398:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7055:9:24","nodeType":"YulTypedName","src":"7055:9:24","type":""},{"name":"value3","nativeSrc":"7066:6:24","nodeType":"YulTypedName","src":"7066:6:24","type":""},{"name":"value2","nativeSrc":"7074:6:24","nodeType":"YulTypedName","src":"7074:6:24","type":""},{"name":"value1","nativeSrc":"7082:6:24","nodeType":"YulTypedName","src":"7082:6:24","type":""},{"name":"value0","nativeSrc":"7090:6:24","nodeType":"YulTypedName","src":"7090:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7101:4:24","nodeType":"YulTypedName","src":"7101:4:24","type":""}],"src":"6929:398:24"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$1223_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 288) { revert(0, 0) }\n        value0 := _1\n        value1 := calldataload(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Call_$19_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_1, 32)\n        value3 := length\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_struct$_Call_$19_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(94)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value1, i), 32)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_36fdcc45171afde7667666c94fc33ecdb7822c92e5282dda8124205e12e0ac03__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Execution failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(192, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"account: not from EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7115":[{"length":32,"start":306},{"length":32,"start":922},{"length":32,"start":1082}]},"linkReferences":{},"object":"6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e01461010d578063b0d691fe14610123578063b61d27f614610156578063d087d2881461017657600080fd5b806319822f7c1461008057806334fcd5be146100b35780638da5cb5b146100d557600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461080f565b61018b565b6040519081526020015b60405180910390f35b3480156100bf57600080fd5b506100d36100ce366004610863565b6101b1565b005b3480156100e157600080fd5b506000546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561011957600080fd5b506100a060015481565b34801561012f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006100f5565b34801561016257600080fd5b506100d36101713660046108f6565b6102a5565b34801561018257600080fd5b506100a0610396565b600061019561042f565b61019f84846104a9565b90506101aa82610558565b9392505050565b6101b96105a0565b8060005b8181101561029f57368484838181106101d8576101d8610980565b90506020028101906101ea9190610996565b9050600061024a6101fe60208401846109b6565b602084013561021060408601866109d1565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a6105a8565b9050806102955783600103610266576102616105c0565b610295565b8261027160006105d2565b604051635a15467560e01b815260040161028c929190610a1f565b60405180910390fd5b50506001016101bd565b50505050565b6000546001600160a01b031633146102ec5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161028c565b6000846001600160a01b0316848484604051610309929190610a74565b60006040518083038185875af1925050503d8060008114610346576040519150601f19603f3d011682016040523d82523d6000602084013e61034b565b606091505b505090508061038f5760405162461bcd60e51b815260206004820152601060248201526f115e1958dd5d1a5bdb8819985a5b195960821b604482015260640161028c565b5050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a84565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a75760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161028c565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812081546001600160a01b03166105316104f46101008701876109d1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106049050565b6001600160a01b03161461054957600191505061054f565b60009150505b92915050565b50565b801561055557604051600090339083908381818185875af1925050503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e61038f565b6104a761042f565b6000806000845160208601878987f195945050505050565b6104a76105cd60006105d2565b61062e565b60603d82156105e657828111156105e65750815b604051602082018101604052818152816000602083013e9392505050565b6000806000806106148686610636565b9250925092506106248282610683565b5090949350505050565b805160208201fd5b600080600083516041036106705760208401516040850151606086015160001a61066288828585610740565b95509550955050505061067c565b50508151600091506002905b9250925092565b600082600381111561069757610697610a9d565b036106a0575050565b60018260038111156106b4576106b4610a9d565b036106d25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156106e6576106e6610a9d565b036107075760405163fce698f760e01b81526004810182905260240161028c565b600382600381111561071b5761071b610a9d565b0361073c576040516335e2f38360e21b81526004810182905260240161028c565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561077b5750600091506003905082610805565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156107cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107fb57506000925060019150829050610805565b9250600091508190505b9450945094915050565b60008060006060848603121561082457600080fd5b833567ffffffffffffffff81111561083b57600080fd5b8401610120818703121561084e57600080fd5b95602085013595506040909401359392505050565b6000806020838503121561087657600080fd5b823567ffffffffffffffff81111561088d57600080fd5b8301601f8101851361089e57600080fd5b803567ffffffffffffffff8111156108b557600080fd5b8560208260051b84010111156108ca57600080fd5b6020919091019590945092505050565b80356001600160a01b03811681146108f157600080fd5b919050565b6000806000806060858703121561090c57600080fd5b610915856108da565b935060208501359250604085013567ffffffffffffffff81111561093857600080fd5b8501601f8101871361094957600080fd5b803567ffffffffffffffff81111561096057600080fd5b87602082840101111561097257600080fd5b949793965060200194505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126109ac57600080fd5b9190910192915050565b6000602082840312156109c857600080fd5b6101aa826108da565b6000808335601e198436030181126109e857600080fd5b83018035915067ffffffffffffffff821115610a0357600080fd5b602001915036819003821315610a1857600080fd5b9250929050565b828152604060208201526000825180604084015260005b81811015610a535760208186018101516060868401015201610a36565b506000606082850101526060601f19601f8301168401019150509392505050565b8183823760009101908152919050565b600060208284031215610a9657600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220da04371a6850372f49a90103209cdf1d0ab31b291d875d237ca9f67e01eda06b64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19822F7C EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x34FCD5BE EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x19F DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AA DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x5A0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29F JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D8 PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24A PUSH2 0x1FE PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x210 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP GAS PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x295 JUMPI DUP4 PUSH1 0x1 SUB PUSH2 0x266 JUMPI PUSH2 0x261 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST DUP3 PUSH2 0x271 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5A154675 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP3 SWAP2 SWAP1 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x309 SWAP3 SWAP2 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115E1958DD5D1A5BDB8819985A5B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x1AAB3F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x531 PUSH2 0x4F4 PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x604 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x549 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x54F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x38F JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP8 DUP10 DUP8 CALL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x5CD PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE DUP3 ISZERO PUSH2 0x5E6 JUMPI DUP3 DUP2 GT ISZERO PUSH2 0x5E6 JUMPI POP DUP2 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP3 ADD DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP2 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x614 DUP7 DUP7 PUSH2 0x636 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x624 DUP3 DUP3 PUSH2 0x683 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x670 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x662 DUP9 DUP3 DUP6 DUP6 PUSH2 0x740 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x67C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x697 JUMPI PUSH2 0x697 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6A0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6E6 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x77B JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7FB JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x805 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x915 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x5E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA DUP3 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xA36 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA DIV CALLDATACOPY BYTE PUSH9 0x50372F49A90103209C 0xDF SAR EXP 0xB3 SHL 0x29 SAR DUP8 TSTORE 0x23 PUSH29 0xA9F67E01EDA06B64736F6C634300081C00330000000000000000000000 ","sourceMap":"402:1380:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:385:0;;;;;;;;;;-1:-1:-1;2487:385:0;;;;;:::i;:::-;;:::i;:::-;;;746:25:24;;;734:2;719:18;2487:385:0;;;;;;;;1887:565;;;;;;;;;;-1:-1:-1;1887:565:0;;;;;:::i;:::-;;:::i;:::-;;569:20:22;;;;;;;;;;-1:-1:-1;569:20:22;;;;-1:-1:-1;;;;;569:20:22;;;;;;-1:-1:-1;;;;;1583:32:24;;;1565:51;;1553:2;1538:18;569:20:22;1419:203:24;1427:20:22;;;;;;;;;;;;;;;;728:102;;;;;;;;;;-1:-1:-1;811:11:22;728:102;;1456:286;;;;;;;;;;-1:-1:-1;1456:286:22;;;;;:::i;:::-;;:::i;981:121:0:-;;;;;;;;;;;;;:::i;2487:385::-;2662:22;2696:24;:22;:24::i;:::-;2747:38;2766:6;2774:10;2747:18;:38::i;:::-;2730:55;;2833:32;2845:19;2833:11;:32::i;:::-;2487:385;;;;;:::o;1887:565::-;1959:20;:18;:20::i;:::-;2012:5;1990:19;2034:412;2058:11;2054:1;:15;2034:412;;;2090:18;2111:5;;2117:1;2111:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2090:29;-1:-1:-1;2133:7:0;2143:56;2153:11;;;;2090:29;2153:11;:::i;:::-;2166:10;;;;2178:9;;;;2166:4;2178:9;:::i;:::-;2143:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2189:9:0;2143;:56::i;:::-;2133:66;;2218:2;2213:223;;2244:11;2259:1;2244:16;2240:182;;2284:27;:25;:27::i;:::-;2240:182;;;2378:1;2381:21;2400:1;2381:18;:21::i;:::-;2365:38;;-1:-1:-1;;;2365:38:0;;;;;;;;;:::i;:::-;;;;;;;;2240:182;-1:-1:-1;;2071:3:0;;2034:412;;;;1949:503;1887:565;;:::o;1456:286:22:-;1608:5;;-1:-1:-1;;;;;1608:5:22;1594:10;:19;1586:42;;;;-1:-1:-1;;;1586:42:22;;4788:2:24;1586:42:22;;;4770:21:24;4827:2;4807:18;;;4800:30;-1:-1:-1;;;4846:18:24;;;4839:40;4896:18;;1586:42:22;4586:334:24;1586:42:22;1640:12;1658:4;-1:-1:-1;;;;;1658:9:22;1675:5;1682:4;;1658:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1639:48;;;1706:7;1698:36;;;;-1:-1:-1;;;1698:36:22;;5403:2:24;1698:36:22;;;5385:21:24;5442:2;5422:18;;;5415:30;-1:-1:-1;;;5461:18:24;;;5454:46;5517:18;;1698:36:22;5201:340:24;1698:36:22;1575:167;1456:286;;;;:::o;981:121:0:-;1030:7;811:11:22;1056:39:0;;-1:-1:-1;;;1056:39:0;;1086:4;1056:39;;;5728:51:24;1093:1:0;5795:18:24;;;5788:60;-1:-1:-1;;;;;1056:21:0;;;;;;;5701:18:24;;1056:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1049:46;;981:121;:::o;2953:183::-;3040:10;-1:-1:-1;;;;;811:11:22;3040:35:0;;3019:110;;;;-1:-1:-1;;;3019:110:0;;6250:2:24;3019:110:0;;;6232:21:24;6289:2;6269:18;;;6262:30;6328;6308:18;;;6301:58;6376:18;;3019:110:0;6048:352:24;3019:110:0;2953:183::o;838:394:22:-;1401:34:17;980:22:22;1388:48:17;;;1497:4;1490:25;;;1595:4;1579:21;;1114:5:22;;-1:-1:-1;;;;;1114:5:22;1080:30;1093:16;1114:5;1093:16;;;;:::i;:::-;1080:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1080:4:22;;:30;-1:-1:-1;;1080:12:22;:30;-1:-1:-1;1080:30:22:i;:::-;-1:-1:-1;;;;;1080:39:22;;1076:111;;1143:1;1136:8;;;;;1076:111;1204:1;1197:8;;;838:394;;;;;:::o;5168:68:0:-;;:::o;5811:350::-;5892:24;;5888:267;;5950:94;;5933:12;;5958:10;;6003:19;;5933:12;5950:94;5933:12;5950:94;6003:19;5958:10;5950:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3142:93;3204:24;:22;:24::i;213:279:11:-;344:12;474:1;471;464:4;458:11;451:4;445;441:15;434:5;430:2;423:5;418:58;407:69;213:279;-1:-1:-1;;;;;213:279:11:o;1988:95::-;2044:32;2059:16;2073:1;2059:13;:16::i;:::-;2044:14;:32::i;1176:508::-;1238:23;1323:16;1355:12;;1352:120;;1397:6;1392:3;1389:15;1386:72;;;-1:-1:-1;1434:6:11;1386:72;1502:4;1496:11;1551:4;1546:3;1542:14;1537:3;1533:24;1527:4;1520:38;1583:3;1578;1571:16;1634:3;1631:1;1624:4;1619:3;1615:14;1600:38;1665:3;1176:508;-1:-1:-1;;;1176:508:11:o;3714:255:16:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:16;;3714:255;-1:-1:-1;;;;3714:255:16:o;1764:174:11:-;1910:10;1904:17;1899:2;1887:10;1883:19;1876:46;2129:778:16;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:16;;2823:1;;-1:-1:-1;2827:35:16;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:16;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:16;;;;;746:25:24;;;719:18;;7634:46:16;600:177:24;7563:243:16;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:16;;;;;746:25:24;;;719:18;;7763:32:16;600:177:24;7697:109:16;7280:532;;:::o;5203:1551::-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:16;;-1:-1:-1;6385:30:16;;-1:-1:-1;6417:1:16;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;7156:25:24;;;7229:4;7217:17;;7197:18;;;7190:45;;;;7251:18;;;7244:34;;;7294:18;;;7287:34;;;6541:24:16;;7128:19:24;;6541:24:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:16;;-1:-1:-1;;6541:24:16;;;-1:-1:-1;;;;;;;6579:20:16;;6575:113;;-1:-1:-1;6631:1:16;;-1:-1:-1;6635:29:16;;-1:-1:-1;6631:1:16;;-1:-1:-1;6615:62:16;;6575:113;6706:6;-1:-1:-1;6714:20:16;;-1:-1:-1;6714:20:16;;-1:-1:-1;5203:1551:16;;;;;;;;;:::o;14:581:24:-;130:6;138;146;199:2;187:9;178:7;174:23;170:32;167:52;;;215:1;212;205:12;167:52;255:9;242:23;288:18;280:6;277:30;274:50;;;320:1;317;310:12;274:50;343:22;;399:3;381:16;;;377:26;374:46;;;416:1;413;406:12;374:46;439:2;488;473:18;;460:32;;-1:-1:-1;561:2:24;546:18;;;533:32;;14:581;-1:-1:-1;;;14:581:24:o;782:632::-;890:6;898;951:2;939:9;930:7;926:23;922:32;919:52;;;967:1;964;957:12;919:52;1007:9;994:23;1040:18;1032:6;1029:30;1026:50;;;1072:1;1069;1062:12;1026:50;1095:22;;1148:4;1140:13;;1136:27;-1:-1:-1;1126:55:24;;1177:1;1174;1167:12;1126:55;1217:2;1204:16;1243:18;1235:6;1232:30;1229:50;;;1275:1;1272;1265:12;1229:50;1328:7;1323:2;1313:6;1310:1;1306:14;1302:2;1298:23;1294:32;1291:45;1288:65;;;1349:1;1346;1339:12;1288:65;1380:2;1372:11;;;;;1402:6;;-1:-1:-1;782:632:24;-1:-1:-1;;;782:632:24:o;1855:173::-;1923:20;;-1:-1:-1;;;;;1972:31:24;;1962:42;;1952:70;;2018:1;2015;2008:12;1952:70;1855:173;;;:::o;2033:774::-;2121:6;2129;2137;2145;2198:2;2186:9;2177:7;2173:23;2169:32;2166:52;;;2214:1;2211;2204:12;2166:52;2237:29;2256:9;2237:29;:::i;:::-;2227:39;-1:-1:-1;2335:2:24;2320:18;;2307:32;;-1:-1:-1;2414:2:24;2399:18;;2386:32;2441:18;2430:30;;2427:50;;;2473:1;2470;2463:12;2427:50;2496:22;;2549:4;2541:13;;2537:27;-1:-1:-1;2527:55:24;;2578:1;2575;2568:12;2527:55;2618:2;2605:16;2644:18;2636:6;2633:30;2630:50;;;2676:1;2673;2666:12;2630:50;2721:7;2716:2;2707:6;2703:2;2699:15;2695:24;2692:37;2689:57;;;2742:1;2739;2732:12;2689:57;2033:774;;;;-1:-1:-1;2773:2:24;2765:11;;-1:-1:-1;;;2033:774:24:o;2812:127::-;2873:10;2868:3;2864:20;2861:1;2854:31;2904:4;2901:1;2894:15;2928:4;2925:1;2918:15;2944:319;3032:4;3090:11;3077:25;3184:2;3180:7;3169:8;3153:14;3149:29;3145:43;3125:18;3121:68;3111:96;;3203:1;3200;3193:12;3111:96;3224:33;;;;;2944:319;-1:-1:-1;;2944:319:24:o;3268:186::-;3327:6;3380:2;3368:9;3359:7;3355:23;3351:32;3348:52;;;3396:1;3393;3386:12;3348:52;3419:29;3438:9;3419:29;:::i;3459:521::-;3536:4;3542:6;3602:11;3589:25;3696:2;3692:7;3681:8;3665:14;3661:29;3657:43;3637:18;3633:68;3623:96;;3715:1;3712;3705:12;3623:96;3742:33;;3794:20;;;-1:-1:-1;3837:18:24;3826:30;;3823:50;;;3869:1;3866;3859:12;3823:50;3902:4;3890:17;;-1:-1:-1;3933:14:24;3929:27;;;3919:38;;3916:58;;;3970:1;3967;3960:12;3916:58;3459:521;;;;;:::o;3985:596::-;4160:6;4149:9;4142:25;4203:2;4198;4187:9;4183:18;4176:30;4123:4;4235:6;4229:13;4278:6;4273:2;4262:9;4258:18;4251:34;4303:1;4313:140;4327:6;4324:1;4321:13;4313:140;;;4438:2;4422:14;;;4418:23;;4412:30;4407:2;4388:17;;;4384:26;4377:66;4342:10;4313:140;;;4317:3;4502:1;4497:2;4488:6;4477:9;4473:22;4469:31;4462:42;4572:2;4565;4561:7;4556:2;4548:6;4544:15;4540:29;4529:9;4525:45;4521:54;4513:62;;;3985:596;;;;;:::o;4925:271::-;5108:6;5100;5095:3;5082:33;5064:3;5134:16;;5159:13;;;5134:16;4925:271;-1:-1:-1;4925:271:24:o;5859:184::-;5929:6;5982:2;5970:9;5961:7;5957:23;5953:32;5950:52;;;5998:1;5995;5988:12;5950:52;-1:-1:-1;6021:16:24;;5859:184;-1:-1:-1;5859:184:24:o;6615:127::-;6676:10;6671:3;6667:20;6664:1;6657:31;6707:4;6704:1;6697:15;6731:4;6728:1;6721:15"},"methodIdentifiers":{"entryPoint()":"b0d691fe","execute(address,uint256,bytes)":"b61d27f6","executeBatch((address,uint256,bytes)[])":"34fcd5be","getNonce()":"d087d288","nonce()":"affed0e0","owner()":"8da5cb5b","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"error\",\"type\":\"bytes\"}],\"name\":\"ExecuteError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BaseAccount.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"aggregator\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"executeBatch((address,uint256,bytes)[])\":{\"notice\":\"execute a batch of calls. revert on the first call that fails. If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,  to mark the failing call index.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartAccount.sol\":\"SmartAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x071e38cf697bedbfe021955879277620ff763ecca1a1143ce14792e8c86c6d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d55468ffadcec140a1dc853fac153de985d7335655e70935b9d28e148a495ab\",\"dweb:/ipfs/QmXMPLx92TLCDRtNTdmTLSWBNbPVmSGeN9im2zsK9P9p4R\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x1030b464b49ce80da46b5b6c9af357c2d526f308de61391db6a4ec767d33b864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671945f8e18e7305797312b5a209506be3c9bd1d9b9b561c1e8863bccfa61319\",\"dweb:/ipfs/QmVanLK5Aenrb7J94doiE1C9oHwo86jvv8NrpDeNHwvnii\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]},\"@account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x9c724ee22011193ea7f92d3c3c467ee6aa27139d3ddc225c7f1254d241e6ccdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96cc246fe944a212cbb9ba82065b2d380ec80954fcdb5d8d982b476bd5b72868\",\"dweb:/ipfs/QmZ25eFixEhukbfWGz5TBjsp7YohxUqD5i2rxhaghfvHt8\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SmartAccount.sol\":{\"keccak256\":\"0xaedd0c31238ae691166ddf82945a116db6b3250710eb7da0387d2d6b8f21cdd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eecf1b4826a196827537c7e81184662d15b707b7724757d26b9c8cd7ea4465d0\",\"dweb:/ipfs/QmURuYPHqkcbxABqnXrzq7YtcAGYGphRLZETYDC3U3NhzU\"]}},\"version\":1}"}},"contracts/SmartAccountFactory.sol":{"SmartAccountFactory":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"entryPoint_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"WalletDeployed","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"createWallet","outputs":[{"internalType":"address","name":"wallet","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"getAddress","outputs":[{"internalType":"address","name":"predicted","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"walletImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7288":{"entryPoint":null,"id":7288,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_contract$_IEntryPoint_$1022_fromMemory":{"entryPoint":164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1022_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:651:24","nodeType":"YulBlock","src":"0:651:24","statements":[{"nativeSrc":"6:3:24","nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nativeSrc":"115:209:24","nodeType":"YulBlock","src":"115:209:24","statements":[{"body":{"nativeSrc":"161:16:24","nodeType":"YulBlock","src":"161:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"170:1:24","nodeType":"YulLiteral","src":"170:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"173:1:24","nodeType":"YulLiteral","src":"173:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"163:6:24","nodeType":"YulIdentifier","src":"163:6:24"},"nativeSrc":"163:12:24","nodeType":"YulFunctionCall","src":"163:12:24"},"nativeSrc":"163:12:24","nodeType":"YulExpressionStatement","src":"163:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"136:7:24","nodeType":"YulIdentifier","src":"136:7:24"},{"name":"headStart","nativeSrc":"145:9:24","nodeType":"YulIdentifier","src":"145:9:24"}],"functionName":{"name":"sub","nativeSrc":"132:3:24","nodeType":"YulIdentifier","src":"132:3:24"},"nativeSrc":"132:23:24","nodeType":"YulFunctionCall","src":"132:23:24"},{"kind":"number","nativeSrc":"157:2:24","nodeType":"YulLiteral","src":"157:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"128:3:24","nodeType":"YulIdentifier","src":"128:3:24"},"nativeSrc":"128:32:24","nodeType":"YulFunctionCall","src":"128:32:24"},"nativeSrc":"125:52:24","nodeType":"YulIf","src":"125:52:24"},{"nativeSrc":"186:29:24","nodeType":"YulVariableDeclaration","src":"186:29:24","value":{"arguments":[{"name":"headStart","nativeSrc":"205:9:24","nodeType":"YulIdentifier","src":"205:9:24"}],"functionName":{"name":"mload","nativeSrc":"199:5:24","nodeType":"YulIdentifier","src":"199:5:24"},"nativeSrc":"199:16:24","nodeType":"YulFunctionCall","src":"199:16:24"},"variables":[{"name":"value","nativeSrc":"190:5:24","nodeType":"YulTypedName","src":"190:5:24","type":""}]},{"body":{"nativeSrc":"278:16:24","nodeType":"YulBlock","src":"278:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"287:1:24","nodeType":"YulLiteral","src":"287:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"290:1:24","nodeType":"YulLiteral","src":"290:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"280:6:24","nodeType":"YulIdentifier","src":"280:6:24"},"nativeSrc":"280:12:24","nodeType":"YulFunctionCall","src":"280:12:24"},"nativeSrc":"280:12:24","nodeType":"YulExpressionStatement","src":"280:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"237:5:24","nodeType":"YulIdentifier","src":"237:5:24"},{"arguments":[{"name":"value","nativeSrc":"248:5:24","nodeType":"YulIdentifier","src":"248:5:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"263:3:24","nodeType":"YulLiteral","src":"263:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"268:1:24","nodeType":"YulLiteral","src":"268:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"259:3:24","nodeType":"YulIdentifier","src":"259:3:24"},"nativeSrc":"259:11:24","nodeType":"YulFunctionCall","src":"259:11:24"},{"kind":"number","nativeSrc":"272:1:24","nodeType":"YulLiteral","src":"272:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"255:3:24","nodeType":"YulIdentifier","src":"255:3:24"},"nativeSrc":"255:19:24","nodeType":"YulFunctionCall","src":"255:19:24"}],"functionName":{"name":"and","nativeSrc":"244:3:24","nodeType":"YulIdentifier","src":"244:3:24"},"nativeSrc":"244:31:24","nodeType":"YulFunctionCall","src":"244:31:24"}],"functionName":{"name":"eq","nativeSrc":"234:2:24","nodeType":"YulIdentifier","src":"234:2:24"},"nativeSrc":"234:42:24","nodeType":"YulFunctionCall","src":"234:42:24"}],"functionName":{"name":"iszero","nativeSrc":"227:6:24","nodeType":"YulIdentifier","src":"227:6:24"},"nativeSrc":"227:50:24","nodeType":"YulFunctionCall","src":"227:50:24"},"nativeSrc":"224:70:24","nodeType":"YulIf","src":"224:70:24"},{"nativeSrc":"303:15:24","nodeType":"YulAssignment","src":"303:15:24","value":{"name":"value","nativeSrc":"313:5:24","nodeType":"YulIdentifier","src":"313:5:24"},"variableNames":[{"name":"value0","nativeSrc":"303:6:24","nodeType":"YulIdentifier","src":"303:6:24"}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$1022_fromMemory","nativeSrc":"14:310:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"81:9:24","nodeType":"YulTypedName","src":"81:9:24","type":""},{"name":"dataEnd","nativeSrc":"92:7:24","nodeType":"YulTypedName","src":"92:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"104:6:24","nodeType":"YulTypedName","src":"104:6:24","type":""}],"src":"14:310:24"},{"body":{"nativeSrc":"478:171:24","nodeType":"YulBlock","src":"478:171:24","statements":[{"nativeSrc":"488:26:24","nodeType":"YulAssignment","src":"488:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"500:9:24","nodeType":"YulIdentifier","src":"500:9:24"},{"kind":"number","nativeSrc":"511:2:24","nodeType":"YulLiteral","src":"511:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"496:3:24","nodeType":"YulIdentifier","src":"496:3:24"},"nativeSrc":"496:18:24","nodeType":"YulFunctionCall","src":"496:18:24"},"variableNames":[{"name":"tail","nativeSrc":"488:4:24","nodeType":"YulIdentifier","src":"488:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"530:9:24","nodeType":"YulIdentifier","src":"530:9:24"},{"arguments":[{"name":"value0","nativeSrc":"545:6:24","nodeType":"YulIdentifier","src":"545:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"561:3:24","nodeType":"YulLiteral","src":"561:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"566:1:24","nodeType":"YulLiteral","src":"566:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"557:3:24","nodeType":"YulIdentifier","src":"557:3:24"},"nativeSrc":"557:11:24","nodeType":"YulFunctionCall","src":"557:11:24"},{"kind":"number","nativeSrc":"570:1:24","nodeType":"YulLiteral","src":"570:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"553:3:24","nodeType":"YulIdentifier","src":"553:3:24"},"nativeSrc":"553:19:24","nodeType":"YulFunctionCall","src":"553:19:24"}],"functionName":{"name":"and","nativeSrc":"541:3:24","nodeType":"YulIdentifier","src":"541:3:24"},"nativeSrc":"541:32:24","nodeType":"YulFunctionCall","src":"541:32:24"}],"functionName":{"name":"mstore","nativeSrc":"523:6:24","nodeType":"YulIdentifier","src":"523:6:24"},"nativeSrc":"523:51:24","nodeType":"YulFunctionCall","src":"523:51:24"},"nativeSrc":"523:51:24","nodeType":"YulExpressionStatement","src":"523:51:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"594:9:24","nodeType":"YulIdentifier","src":"594:9:24"},{"kind":"number","nativeSrc":"605:2:24","nodeType":"YulLiteral","src":"605:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"590:3:24","nodeType":"YulIdentifier","src":"590:3:24"},"nativeSrc":"590:18:24","nodeType":"YulFunctionCall","src":"590:18:24"},{"arguments":[{"name":"value1","nativeSrc":"614:6:24","nodeType":"YulIdentifier","src":"614:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"630:3:24","nodeType":"YulLiteral","src":"630:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"635:1:24","nodeType":"YulLiteral","src":"635:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"626:3:24","nodeType":"YulIdentifier","src":"626:3:24"},"nativeSrc":"626:11:24","nodeType":"YulFunctionCall","src":"626:11:24"},{"kind":"number","nativeSrc":"639:1:24","nodeType":"YulLiteral","src":"639:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"622:3:24","nodeType":"YulIdentifier","src":"622:3:24"},"nativeSrc":"622:19:24","nodeType":"YulFunctionCall","src":"622:19:24"}],"functionName":{"name":"and","nativeSrc":"610:3:24","nodeType":"YulIdentifier","src":"610:3:24"},"nativeSrc":"610:32:24","nodeType":"YulFunctionCall","src":"610:32:24"}],"functionName":{"name":"mstore","nativeSrc":"583:6:24","nodeType":"YulIdentifier","src":"583:6:24"},"nativeSrc":"583:60:24","nodeType":"YulFunctionCall","src":"583:60:24"},"nativeSrc":"583:60:24","nodeType":"YulExpressionStatement","src":"583:60:24"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1022_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"329:320:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"439:9:24","nodeType":"YulTypedName","src":"439:9:24","type":""},{"name":"value1","nativeSrc":"450:6:24","nodeType":"YulTypedName","src":"450:6:24","type":""},{"name":"value0","nativeSrc":"458:6:24","nodeType":"YulTypedName","src":"458:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"469:4:24","nodeType":"YulTypedName","src":"469:4:24","type":""}],"src":"329:320:24"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IEntryPoint_$1022_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1022_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b50604051611b8e380380611b8e83398101604081905261002f916100a4565b6001600160a01b0381166080526040516000908290309061004f90610097565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015610082573d6000803e3d6000fd5b506001600160a01b031660a052506100d49050565b610bbb80610fd383390190565b6000602082840312156100b657600080fd5b81516001600160a01b03811681146100cd57600080fd5b9392505050565b60805160a051610ed56100fe6000396000605601526000818160a901526101ea0152610ed56000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638117abc1146100515780638cb84e1814610094578063b0d691fe146100a7578063f247d217146100cd575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100786100a236600461025f565b6100e0565b7f0000000000000000000000000000000000000000000000000000000000000000610078565b6100786100db36600461025f565b610152565b6000806100ec846101c1565b80516020918201206040516001600160f81b0319928101929092526bffffffffffffffffffffffff193060601b1660218301526035820185905260558201819052915060750160408051601f198184030181529190528051602090910120949350505050565b60008061015e846101c1565b9050828151602083016000f59150813b61017757600080fd5b604080516001600160a01b038085168252861660208201527ff25144576b87c0db53fd13e964c2b18299ee19d7d44d4b2636144644acff745b910160405180910390a15092915050565b6060604051806020016101d390610252565b601f1982820381018352601f9091011660408181527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811660208401528516818301528051808303820181526060830190915261023c92916080016102c7565b6040516020818303038152906040529050919050565b610bbb806102e583390190565b6000806040838503121561027257600080fd5b82356001600160a01b038116811461028957600080fd5b946020939093013593505050565b6000815160005b818110156102b8576020818501810151868301520161029e565b50600093019283525090919050565b60006102dc6102d68386610297565b84610297565b94935050505056fe60a060405234801561001057600080fd5b50604051610bbb380380610bbb83398101604081905261002f9161006f565b6001600160a01b03918216608052600080546001600160a01b031916919092161790556100a9565b6001600160a01b038116811461006c57600080fd5b50565b6000806040838503121561008257600080fd5b825161008d81610057565b602084015190925061009e81610057565b809150509250929050565b608051610ae96100d2600039600081816101320152818161039a015261043a0152610ae96000f3fe6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e01461010d578063b0d691fe14610123578063b61d27f614610156578063d087d2881461017657600080fd5b806319822f7c1461008057806334fcd5be146100b35780638da5cb5b146100d557600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461080f565b61018b565b6040519081526020015b60405180910390f35b3480156100bf57600080fd5b506100d36100ce366004610863565b6101b1565b005b3480156100e157600080fd5b506000546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561011957600080fd5b506100a060015481565b34801561012f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006100f5565b34801561016257600080fd5b506100d36101713660046108f6565b6102a5565b34801561018257600080fd5b506100a0610396565b600061019561042f565b61019f84846104a9565b90506101aa82610558565b9392505050565b6101b96105a0565b8060005b8181101561029f57368484838181106101d8576101d8610980565b90506020028101906101ea9190610996565b9050600061024a6101fe60208401846109b6565b602084013561021060408601866109d1565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a6105a8565b9050806102955783600103610266576102616105c0565b610295565b8261027160006105d2565b604051635a15467560e01b815260040161028c929190610a1f565b60405180910390fd5b50506001016101bd565b50505050565b6000546001600160a01b031633146102ec5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161028c565b6000846001600160a01b0316848484604051610309929190610a74565b60006040518083038185875af1925050503d8060008114610346576040519150601f19603f3d011682016040523d82523d6000602084013e61034b565b606091505b505090508061038f5760405162461bcd60e51b815260206004820152601060248201526f115e1958dd5d1a5bdb8819985a5b195960821b604482015260640161028c565b5050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a84565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a75760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161028c565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812081546001600160a01b03166105316104f46101008701876109d1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106049050565b6001600160a01b03161461054957600191505061054f565b60009150505b92915050565b50565b801561055557604051600090339083908381818185875af1925050503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e61038f565b6104a761042f565b6000806000845160208601878987f195945050505050565b6104a76105cd60006105d2565b61062e565b60603d82156105e657828111156105e65750815b604051602082018101604052818152816000602083013e9392505050565b6000806000806106148686610636565b9250925092506106248282610683565b5090949350505050565b805160208201fd5b600080600083516041036106705760208401516040850151606086015160001a61066288828585610740565b95509550955050505061067c565b50508151600091506002905b9250925092565b600082600381111561069757610697610a9d565b036106a0575050565b60018260038111156106b4576106b4610a9d565b036106d25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156106e6576106e6610a9d565b036107075760405163fce698f760e01b81526004810182905260240161028c565b600382600381111561071b5761071b610a9d565b0361073c576040516335e2f38360e21b81526004810182905260240161028c565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561077b5750600091506003905082610805565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156107cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107fb57506000925060019150829050610805565b9250600091508190505b9450945094915050565b60008060006060848603121561082457600080fd5b833567ffffffffffffffff81111561083b57600080fd5b8401610120818703121561084e57600080fd5b95602085013595506040909401359392505050565b6000806020838503121561087657600080fd5b823567ffffffffffffffff81111561088d57600080fd5b8301601f8101851361089e57600080fd5b803567ffffffffffffffff8111156108b557600080fd5b8560208260051b84010111156108ca57600080fd5b6020919091019590945092505050565b80356001600160a01b03811681146108f157600080fd5b919050565b6000806000806060858703121561090c57600080fd5b610915856108da565b935060208501359250604085013567ffffffffffffffff81111561093857600080fd5b8501601f8101871361094957600080fd5b803567ffffffffffffffff81111561096057600080fd5b87602082840101111561097257600080fd5b949793965060200194505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126109ac57600080fd5b9190910192915050565b6000602082840312156109c857600080fd5b6101aa826108da565b6000808335601e198436030181126109e857600080fd5b83018035915067ffffffffffffffff821115610a0357600080fd5b602001915036819003821315610a1857600080fd5b9250929050565b828152604060208201526000825180604084015260005b81811015610a535760208186018101516060868401015201610a36565b506000606082850101526060601f19601f8301168401019150509392505050565b8183823760009101908152919050565b600060208284031215610a9657600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220da04371a6850372f49a90103209cdf1d0ab31b291d875d237ca9f67e01eda06b64736f6c634300081c0033a2646970667358221220044bf51390c52d759e190c6c93278729e46594d644757eaa16ab7374727b862a64736f6c634300081c003360a060405234801561001057600080fd5b50604051610bbb380380610bbb83398101604081905261002f9161006f565b6001600160a01b03918216608052600080546001600160a01b031916919092161790556100a9565b6001600160a01b038116811461006c57600080fd5b50565b6000806040838503121561008257600080fd5b825161008d81610057565b602084015190925061009e81610057565b809150509250929050565b608051610ae96100d2600039600081816101320152818161039a015261043a0152610ae96000f3fe6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e01461010d578063b0d691fe14610123578063b61d27f614610156578063d087d2881461017657600080fd5b806319822f7c1461008057806334fcd5be146100b35780638da5cb5b146100d557600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461080f565b61018b565b6040519081526020015b60405180910390f35b3480156100bf57600080fd5b506100d36100ce366004610863565b6101b1565b005b3480156100e157600080fd5b506000546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561011957600080fd5b506100a060015481565b34801561012f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006100f5565b34801561016257600080fd5b506100d36101713660046108f6565b6102a5565b34801561018257600080fd5b506100a0610396565b600061019561042f565b61019f84846104a9565b90506101aa82610558565b9392505050565b6101b96105a0565b8060005b8181101561029f57368484838181106101d8576101d8610980565b90506020028101906101ea9190610996565b9050600061024a6101fe60208401846109b6565b602084013561021060408601866109d1565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a6105a8565b9050806102955783600103610266576102616105c0565b610295565b8261027160006105d2565b604051635a15467560e01b815260040161028c929190610a1f565b60405180910390fd5b50506001016101bd565b50505050565b6000546001600160a01b031633146102ec5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161028c565b6000846001600160a01b0316848484604051610309929190610a74565b60006040518083038185875af1925050503d8060008114610346576040519150601f19603f3d011682016040523d82523d6000602084013e61034b565b606091505b505090508061038f5760405162461bcd60e51b815260206004820152601060248201526f115e1958dd5d1a5bdb8819985a5b195960821b604482015260640161028c565b5050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a84565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a75760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161028c565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812081546001600160a01b03166105316104f46101008701876109d1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106049050565b6001600160a01b03161461054957600191505061054f565b60009150505b92915050565b50565b801561055557604051600090339083908381818185875af1925050503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e61038f565b6104a761042f565b6000806000845160208601878987f195945050505050565b6104a76105cd60006105d2565b61062e565b60603d82156105e657828111156105e65750815b604051602082018101604052818152816000602083013e9392505050565b6000806000806106148686610636565b9250925092506106248282610683565b5090949350505050565b805160208201fd5b600080600083516041036106705760208401516040850151606086015160001a61066288828585610740565b95509550955050505061067c565b50508151600091506002905b9250925092565b600082600381111561069757610697610a9d565b036106a0575050565b60018260038111156106b4576106b4610a9d565b036106d25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156106e6576106e6610a9d565b036107075760405163fce698f760e01b81526004810182905260240161028c565b600382600381111561071b5761071b610a9d565b0361073c576040516335e2f38360e21b81526004810182905260240161028c565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561077b5750600091506003905082610805565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156107cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107fb57506000925060019150829050610805565b9250600091508190505b9450945094915050565b60008060006060848603121561082457600080fd5b833567ffffffffffffffff81111561083b57600080fd5b8401610120818703121561084e57600080fd5b95602085013595506040909401359392505050565b6000806020838503121561087657600080fd5b823567ffffffffffffffff81111561088d57600080fd5b8301601f8101851361089e57600080fd5b803567ffffffffffffffff8111156108b557600080fd5b8560208260051b84010111156108ca57600080fd5b6020919091019590945092505050565b80356001600160a01b03811681146108f157600080fd5b919050565b6000806000806060858703121561090c57600080fd5b610915856108da565b935060208501359250604085013567ffffffffffffffff81111561093857600080fd5b8501601f8101871361094957600080fd5b803567ffffffffffffffff81111561096057600080fd5b87602082840101111561097257600080fd5b949793965060200194505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126109ac57600080fd5b9190910192915050565b6000602082840312156109c857600080fd5b6101aa826108da565b6000808335601e198436030181126109e857600080fd5b83018035915067ffffffffffffffff821115610a0357600080fd5b602001915036819003821315610a1857600080fd5b9250929050565b828152604060208201526000825180604084015260005b81811015610a535760208186018101516060868401015201610a36565b506000606082850101526060601f19601f8301168401019150509392505050565b8183823760009101908152919050565b600060208284031215610a9657600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220da04371a6850372f49a90103209cdf1d0ab31b291d875d237ca9f67e01eda06b64736f6c634300081c0033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B8E CODESIZE SUB DUP1 PUSH2 0x1B8E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 PUSH2 0x4F SWAP1 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 MSTORE POP PUSH2 0xD4 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBB DUP1 PUSH2 0xFD3 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xED5 PUSH2 0xFE PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x56 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xA9 ADD MSTORE PUSH2 0x1EA ADD MSTORE PUSH2 0xED5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8117ABC1 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xF247D217 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F JUMP JUMPDEST PUSH2 0xE0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x78 JUMP JUMPDEST PUSH2 0x78 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x25F JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEC DUP5 PUSH2 0x1C1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x55 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15E DUP5 PUSH2 0x1C1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE2 SWAP2 POP DUP2 EXTCODESIZE PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF25144576B87C0DB53FD13E964C2B18299EE19D7D44D4B2636144644ACFF745B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x1D3 SWAP1 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE DUP6 AND DUP2 DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 SWAP2 MSTORE PUSH2 0x23C SWAP3 SWAP2 PUSH1 0x80 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBB DUP1 PUSH2 0x2E5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x29E JUMP JUMPDEST POP PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC PUSH2 0x2D6 DUP4 DUP7 PUSH2 0x297 JUMP JUMPDEST DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBBB CODESIZE SUB DUP1 PUSH2 0xBBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x8D DUP2 PUSH2 0x57 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x9E DUP2 PUSH2 0x57 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAE9 PUSH2 0xD2 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x132 ADD MSTORE DUP2 DUP2 PUSH2 0x39A ADD MSTORE PUSH2 0x43A ADD MSTORE PUSH2 0xAE9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19822F7C EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x34FCD5BE EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x19F DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AA DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x5A0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29F JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D8 PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24A PUSH2 0x1FE PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x210 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP GAS PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x295 JUMPI DUP4 PUSH1 0x1 SUB PUSH2 0x266 JUMPI PUSH2 0x261 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST DUP3 PUSH2 0x271 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5A154675 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP3 SWAP2 SWAP1 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x309 SWAP3 SWAP2 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115E1958DD5D1A5BDB8819985A5B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x1AAB3F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x531 PUSH2 0x4F4 PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x604 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x549 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x54F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x38F JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP8 DUP10 DUP8 CALL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x5CD PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE DUP3 ISZERO PUSH2 0x5E6 JUMPI DUP3 DUP2 GT ISZERO PUSH2 0x5E6 JUMPI POP DUP2 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP3 ADD DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP2 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x614 DUP7 DUP7 PUSH2 0x636 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x624 DUP3 DUP3 PUSH2 0x683 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x670 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x662 DUP9 DUP3 DUP6 DUP6 PUSH2 0x740 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x67C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x697 JUMPI PUSH2 0x697 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6A0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6E6 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x77B JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7FB JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x805 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x915 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x5E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA DUP3 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xA36 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA DIV CALLDATACOPY BYTE PUSH9 0x50372F49A90103209C 0xDF SAR EXP 0xB3 SHL 0x29 SAR DUP8 TSTORE 0x23 PUSH29 0xA9F67E01EDA06B64736F6C634300081C0033A264697066735822122004 0x4B CREATE2 SGT SWAP1 0xC5 0x2D PUSH22 0x9E190C6C93278729E46594D644757EAA16AB7374727B DUP7 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBBB CODESIZE SUB DUP1 PUSH2 0xBBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x8D DUP2 PUSH2 0x57 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x9E DUP2 PUSH2 0x57 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAE9 PUSH2 0xD2 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x132 ADD MSTORE DUP2 DUP2 PUSH2 0x39A ADD MSTORE PUSH2 0x43A ADD MSTORE PUSH2 0xAE9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19822F7C EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x34FCD5BE EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x19F DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AA DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x5A0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29F JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D8 PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24A PUSH2 0x1FE PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x210 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP GAS PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x295 JUMPI DUP4 PUSH1 0x1 SUB PUSH2 0x266 JUMPI PUSH2 0x261 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST DUP3 PUSH2 0x271 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5A154675 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP3 SWAP2 SWAP1 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x309 SWAP3 SWAP2 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115E1958DD5D1A5BDB8819985A5B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x1AAB3F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x531 PUSH2 0x4F4 PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x604 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x549 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x54F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x38F JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP8 DUP10 DUP8 CALL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x5CD PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE DUP3 ISZERO PUSH2 0x5E6 JUMPI DUP3 DUP2 GT ISZERO PUSH2 0x5E6 JUMPI POP DUP2 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP3 ADD DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP2 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x614 DUP7 DUP7 PUSH2 0x636 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x624 DUP3 DUP3 PUSH2 0x683 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x670 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x662 DUP9 DUP3 DUP6 DUP6 PUSH2 0x740 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x67C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x697 JUMPI PUSH2 0x697 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6A0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6E6 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x77B JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7FB JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x805 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x915 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x5E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA DUP3 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xA36 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA DIV CALLDATACOPY BYTE PUSH9 0x50372F49A90103209C 0xDF SAR EXP 0xB3 SHL 0x29 SAR DUP8 TSTORE 0x23 PUSH29 0xA9F67E01EDA06B64736F6C634300081C00330000000000000000000000 ","sourceMap":"162:1857:23:-:0;;;463:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;511:25:23;;;;571:44;;549:19;;525:11;;609:4;;571:44;;;:::i;:::-;-1:-1:-1;;;;;541:32:24;;;523:51;;610:32;;605:2;590:18;;583:60;511:2;496:18;571:44:23;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;626:38:23;;;-1:-1:-1;162:1857:23;;-1:-1:-1;162:1857:23;;;;;;;;;:::o;14:310:24:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:24;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:24:o;329:320::-;162:1857:23;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@createWallet_7356":{"entryPoint":338,"id":7356,"parameterSlots":2,"returnSlots":1},"@entryPoint_7249":{"entryPoint":null,"id":7249,"parameterSlots":0,"returnSlots":1},"@getAddress_7334":{"entryPoint":224,"id":7334,"parameterSlots":2,"returnSlots":1},"@getBytecode_7377":{"entryPoint":449,"id":7377,"parameterSlots":1,"returnSlots":1},"@walletImplementation_7251":{"entryPoint":null,"id":7251,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":607,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_bytes":{"entryPoint":663,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":711,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1022_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:2475:24","nodeType":"YulBlock","src":"0:2475:24","statements":[{"nativeSrc":"6:3:24","nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nativeSrc":"115:102:24","nodeType":"YulBlock","src":"115:102:24","statements":[{"nativeSrc":"125:26:24","nodeType":"YulAssignment","src":"125:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:24","nodeType":"YulIdentifier","src":"137:9:24"},{"kind":"number","nativeSrc":"148:2:24","nodeType":"YulLiteral","src":"148:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:24","nodeType":"YulIdentifier","src":"133:3:24"},"nativeSrc":"133:18:24","nodeType":"YulFunctionCall","src":"133:18:24"},"variableNames":[{"name":"tail","nativeSrc":"125:4:24","nodeType":"YulIdentifier","src":"125:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:24","nodeType":"YulIdentifier","src":"167:9:24"},{"arguments":[{"name":"value0","nativeSrc":"182:6:24","nodeType":"YulIdentifier","src":"182:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"198:3:24","nodeType":"YulLiteral","src":"198:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"203:1:24","nodeType":"YulLiteral","src":"203:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"194:3:24","nodeType":"YulIdentifier","src":"194:3:24"},"nativeSrc":"194:11:24","nodeType":"YulFunctionCall","src":"194:11:24"},{"kind":"number","nativeSrc":"207:1:24","nodeType":"YulLiteral","src":"207:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"190:3:24","nodeType":"YulIdentifier","src":"190:3:24"},"nativeSrc":"190:19:24","nodeType":"YulFunctionCall","src":"190:19:24"}],"functionName":{"name":"and","nativeSrc":"178:3:24","nodeType":"YulIdentifier","src":"178:3:24"},"nativeSrc":"178:32:24","nodeType":"YulFunctionCall","src":"178:32:24"}],"functionName":{"name":"mstore","nativeSrc":"160:6:24","nodeType":"YulIdentifier","src":"160:6:24"},"nativeSrc":"160:51:24","nodeType":"YulFunctionCall","src":"160:51:24"},"nativeSrc":"160:51:24","nodeType":"YulExpressionStatement","src":"160:51:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"14:203:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:24","nodeType":"YulTypedName","src":"84:9:24","type":""},{"name":"value0","nativeSrc":"95:6:24","nodeType":"YulTypedName","src":"95:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:24","nodeType":"YulTypedName","src":"106:4:24","type":""}],"src":"14:203:24"},{"body":{"nativeSrc":"309:267:24","nodeType":"YulBlock","src":"309:267:24","statements":[{"body":{"nativeSrc":"355:16:24","nodeType":"YulBlock","src":"355:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"364:1:24","nodeType":"YulLiteral","src":"364:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"367:1:24","nodeType":"YulLiteral","src":"367:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"357:6:24","nodeType":"YulIdentifier","src":"357:6:24"},"nativeSrc":"357:12:24","nodeType":"YulFunctionCall","src":"357:12:24"},"nativeSrc":"357:12:24","nodeType":"YulExpressionStatement","src":"357:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"330:7:24","nodeType":"YulIdentifier","src":"330:7:24"},{"name":"headStart","nativeSrc":"339:9:24","nodeType":"YulIdentifier","src":"339:9:24"}],"functionName":{"name":"sub","nativeSrc":"326:3:24","nodeType":"YulIdentifier","src":"326:3:24"},"nativeSrc":"326:23:24","nodeType":"YulFunctionCall","src":"326:23:24"},{"kind":"number","nativeSrc":"351:2:24","nodeType":"YulLiteral","src":"351:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"322:3:24","nodeType":"YulIdentifier","src":"322:3:24"},"nativeSrc":"322:32:24","nodeType":"YulFunctionCall","src":"322:32:24"},"nativeSrc":"319:52:24","nodeType":"YulIf","src":"319:52:24"},{"nativeSrc":"380:36:24","nodeType":"YulVariableDeclaration","src":"380:36:24","value":{"arguments":[{"name":"headStart","nativeSrc":"406:9:24","nodeType":"YulIdentifier","src":"406:9:24"}],"functionName":{"name":"calldataload","nativeSrc":"393:12:24","nodeType":"YulIdentifier","src":"393:12:24"},"nativeSrc":"393:23:24","nodeType":"YulFunctionCall","src":"393:23:24"},"variables":[{"name":"value","nativeSrc":"384:5:24","nodeType":"YulTypedName","src":"384:5:24","type":""}]},{"body":{"nativeSrc":"479:16:24","nodeType":"YulBlock","src":"479:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"488:1:24","nodeType":"YulLiteral","src":"488:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"491:1:24","nodeType":"YulLiteral","src":"491:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"481:6:24","nodeType":"YulIdentifier","src":"481:6:24"},"nativeSrc":"481:12:24","nodeType":"YulFunctionCall","src":"481:12:24"},"nativeSrc":"481:12:24","nodeType":"YulExpressionStatement","src":"481:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"438:5:24","nodeType":"YulIdentifier","src":"438:5:24"},{"arguments":[{"name":"value","nativeSrc":"449:5:24","nodeType":"YulIdentifier","src":"449:5:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"464:3:24","nodeType":"YulLiteral","src":"464:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"469:1:24","nodeType":"YulLiteral","src":"469:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"460:3:24","nodeType":"YulIdentifier","src":"460:3:24"},"nativeSrc":"460:11:24","nodeType":"YulFunctionCall","src":"460:11:24"},{"kind":"number","nativeSrc":"473:1:24","nodeType":"YulLiteral","src":"473:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"456:3:24","nodeType":"YulIdentifier","src":"456:3:24"},"nativeSrc":"456:19:24","nodeType":"YulFunctionCall","src":"456:19:24"}],"functionName":{"name":"and","nativeSrc":"445:3:24","nodeType":"YulIdentifier","src":"445:3:24"},"nativeSrc":"445:31:24","nodeType":"YulFunctionCall","src":"445:31:24"}],"functionName":{"name":"eq","nativeSrc":"435:2:24","nodeType":"YulIdentifier","src":"435:2:24"},"nativeSrc":"435:42:24","nodeType":"YulFunctionCall","src":"435:42:24"}],"functionName":{"name":"iszero","nativeSrc":"428:6:24","nodeType":"YulIdentifier","src":"428:6:24"},"nativeSrc":"428:50:24","nodeType":"YulFunctionCall","src":"428:50:24"},"nativeSrc":"425:70:24","nodeType":"YulIf","src":"425:70:24"},{"nativeSrc":"504:15:24","nodeType":"YulAssignment","src":"504:15:24","value":{"name":"value","nativeSrc":"514:5:24","nodeType":"YulIdentifier","src":"514:5:24"},"variableNames":[{"name":"value0","nativeSrc":"504:6:24","nodeType":"YulIdentifier","src":"504:6:24"}]},{"nativeSrc":"528:42:24","nodeType":"YulAssignment","src":"528:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"555:9:24","nodeType":"YulIdentifier","src":"555:9:24"},{"kind":"number","nativeSrc":"566:2:24","nodeType":"YulLiteral","src":"566:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"551:3:24","nodeType":"YulIdentifier","src":"551:3:24"},"nativeSrc":"551:18:24","nodeType":"YulFunctionCall","src":"551:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"538:12:24","nodeType":"YulIdentifier","src":"538:12:24"},"nativeSrc":"538:32:24","nodeType":"YulFunctionCall","src":"538:32:24"},"variableNames":[{"name":"value1","nativeSrc":"528:6:24","nodeType":"YulIdentifier","src":"528:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"222:354:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"267:9:24","nodeType":"YulTypedName","src":"267:9:24","type":""},{"name":"dataEnd","nativeSrc":"278:7:24","nodeType":"YulTypedName","src":"278:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"290:6:24","nodeType":"YulTypedName","src":"290:6:24","type":""},{"name":"value1","nativeSrc":"298:6:24","nodeType":"YulTypedName","src":"298:6:24","type":""}],"src":"222:354:24"},{"body":{"nativeSrc":"702:102:24","nodeType":"YulBlock","src":"702:102:24","statements":[{"nativeSrc":"712:26:24","nodeType":"YulAssignment","src":"712:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"724:9:24","nodeType":"YulIdentifier","src":"724:9:24"},{"kind":"number","nativeSrc":"735:2:24","nodeType":"YulLiteral","src":"735:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"720:3:24","nodeType":"YulIdentifier","src":"720:3:24"},"nativeSrc":"720:18:24","nodeType":"YulFunctionCall","src":"720:18:24"},"variableNames":[{"name":"tail","nativeSrc":"712:4:24","nodeType":"YulIdentifier","src":"712:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"754:9:24","nodeType":"YulIdentifier","src":"754:9:24"},{"arguments":[{"name":"value0","nativeSrc":"769:6:24","nodeType":"YulIdentifier","src":"769:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"785:3:24","nodeType":"YulLiteral","src":"785:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"790:1:24","nodeType":"YulLiteral","src":"790:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"781:3:24","nodeType":"YulIdentifier","src":"781:3:24"},"nativeSrc":"781:11:24","nodeType":"YulFunctionCall","src":"781:11:24"},{"kind":"number","nativeSrc":"794:1:24","nodeType":"YulLiteral","src":"794:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"777:3:24","nodeType":"YulIdentifier","src":"777:3:24"},"nativeSrc":"777:19:24","nodeType":"YulFunctionCall","src":"777:19:24"}],"functionName":{"name":"and","nativeSrc":"765:3:24","nodeType":"YulIdentifier","src":"765:3:24"},"nativeSrc":"765:32:24","nodeType":"YulFunctionCall","src":"765:32:24"}],"functionName":{"name":"mstore","nativeSrc":"747:6:24","nodeType":"YulIdentifier","src":"747:6:24"},"nativeSrc":"747:51:24","nodeType":"YulFunctionCall","src":"747:51:24"},"nativeSrc":"747:51:24","nodeType":"YulExpressionStatement","src":"747:51:24"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed","nativeSrc":"581:223:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"671:9:24","nodeType":"YulTypedName","src":"671:9:24","type":""},{"name":"value0","nativeSrc":"682:6:24","nodeType":"YulTypedName","src":"682:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"693:4:24","nodeType":"YulTypedName","src":"693:4:24","type":""}],"src":"581:223:24"},{"body":{"nativeSrc":"1010:240:24","nodeType":"YulBlock","src":"1010:240:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1027:3:24","nodeType":"YulIdentifier","src":"1027:3:24"},{"arguments":[{"name":"value0","nativeSrc":"1036:6:24","nodeType":"YulIdentifier","src":"1036:6:24"},{"arguments":[{"kind":"number","nativeSrc":"1048:3:24","nodeType":"YulLiteral","src":"1048:3:24","type":"","value":"248"},{"kind":"number","nativeSrc":"1053:3:24","nodeType":"YulLiteral","src":"1053:3:24","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"1044:3:24","nodeType":"YulIdentifier","src":"1044:3:24"},"nativeSrc":"1044:13:24","nodeType":"YulFunctionCall","src":"1044:13:24"}],"functionName":{"name":"and","nativeSrc":"1032:3:24","nodeType":"YulIdentifier","src":"1032:3:24"},"nativeSrc":"1032:26:24","nodeType":"YulFunctionCall","src":"1032:26:24"}],"functionName":{"name":"mstore","nativeSrc":"1020:6:24","nodeType":"YulIdentifier","src":"1020:6:24"},"nativeSrc":"1020:39:24","nodeType":"YulFunctionCall","src":"1020:39:24"},"nativeSrc":"1020:39:24","nodeType":"YulExpressionStatement","src":"1020:39:24"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1079:3:24","nodeType":"YulIdentifier","src":"1079:3:24"},{"kind":"number","nativeSrc":"1084:1:24","nodeType":"YulLiteral","src":"1084:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1075:3:24","nodeType":"YulIdentifier","src":"1075:3:24"},"nativeSrc":"1075:11:24","nodeType":"YulFunctionCall","src":"1075:11:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1096:2:24","nodeType":"YulLiteral","src":"1096:2:24","type":"","value":"96"},{"name":"value1","nativeSrc":"1100:6:24","nodeType":"YulIdentifier","src":"1100:6:24"}],"functionName":{"name":"shl","nativeSrc":"1092:3:24","nodeType":"YulIdentifier","src":"1092:3:24"},"nativeSrc":"1092:15:24","nodeType":"YulFunctionCall","src":"1092:15:24"},{"arguments":[{"kind":"number","nativeSrc":"1113:26:24","nodeType":"YulLiteral","src":"1113:26:24","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"1109:3:24","nodeType":"YulIdentifier","src":"1109:3:24"},"nativeSrc":"1109:31:24","nodeType":"YulFunctionCall","src":"1109:31:24"}],"functionName":{"name":"and","nativeSrc":"1088:3:24","nodeType":"YulIdentifier","src":"1088:3:24"},"nativeSrc":"1088:53:24","nodeType":"YulFunctionCall","src":"1088:53:24"}],"functionName":{"name":"mstore","nativeSrc":"1068:6:24","nodeType":"YulIdentifier","src":"1068:6:24"},"nativeSrc":"1068:74:24","nodeType":"YulFunctionCall","src":"1068:74:24"},"nativeSrc":"1068:74:24","nodeType":"YulExpressionStatement","src":"1068:74:24"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1162:3:24","nodeType":"YulIdentifier","src":"1162:3:24"},{"kind":"number","nativeSrc":"1167:2:24","nodeType":"YulLiteral","src":"1167:2:24","type":"","value":"21"}],"functionName":{"name":"add","nativeSrc":"1158:3:24","nodeType":"YulIdentifier","src":"1158:3:24"},"nativeSrc":"1158:12:24","nodeType":"YulFunctionCall","src":"1158:12:24"},{"name":"value2","nativeSrc":"1172:6:24","nodeType":"YulIdentifier","src":"1172:6:24"}],"functionName":{"name":"mstore","nativeSrc":"1151:6:24","nodeType":"YulIdentifier","src":"1151:6:24"},"nativeSrc":"1151:28:24","nodeType":"YulFunctionCall","src":"1151:28:24"},"nativeSrc":"1151:28:24","nodeType":"YulExpressionStatement","src":"1151:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1199:3:24","nodeType":"YulIdentifier","src":"1199:3:24"},{"kind":"number","nativeSrc":"1204:2:24","nodeType":"YulLiteral","src":"1204:2:24","type":"","value":"53"}],"functionName":{"name":"add","nativeSrc":"1195:3:24","nodeType":"YulIdentifier","src":"1195:3:24"},"nativeSrc":"1195:12:24","nodeType":"YulFunctionCall","src":"1195:12:24"},{"name":"value3","nativeSrc":"1209:6:24","nodeType":"YulIdentifier","src":"1209:6:24"}],"functionName":{"name":"mstore","nativeSrc":"1188:6:24","nodeType":"YulIdentifier","src":"1188:6:24"},"nativeSrc":"1188:28:24","nodeType":"YulFunctionCall","src":"1188:28:24"},"nativeSrc":"1188:28:24","nodeType":"YulExpressionStatement","src":"1188:28:24"},{"nativeSrc":"1225:19:24","nodeType":"YulAssignment","src":"1225:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"1236:3:24","nodeType":"YulIdentifier","src":"1236:3:24"},{"kind":"number","nativeSrc":"1241:2:24","nodeType":"YulLiteral","src":"1241:2:24","type":"","value":"85"}],"functionName":{"name":"add","nativeSrc":"1232:3:24","nodeType":"YulIdentifier","src":"1232:3:24"},"nativeSrc":"1232:12:24","nodeType":"YulFunctionCall","src":"1232:12:24"},"variableNames":[{"name":"end","nativeSrc":"1225:3:24","nodeType":"YulIdentifier","src":"1225:3:24"}]}]},"name":"abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"809:441:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"962:3:24","nodeType":"YulTypedName","src":"962:3:24","type":""},{"name":"value3","nativeSrc":"967:6:24","nodeType":"YulTypedName","src":"967:6:24","type":""},{"name":"value2","nativeSrc":"975:6:24","nodeType":"YulTypedName","src":"975:6:24","type":""},{"name":"value1","nativeSrc":"983:6:24","nodeType":"YulTypedName","src":"983:6:24","type":""},{"name":"value0","nativeSrc":"991:6:24","nodeType":"YulTypedName","src":"991:6:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1002:3:24","nodeType":"YulTypedName","src":"1002:3:24","type":""}],"src":"809:441:24"},{"body":{"nativeSrc":"1384:171:24","nodeType":"YulBlock","src":"1384:171:24","statements":[{"nativeSrc":"1394:26:24","nodeType":"YulAssignment","src":"1394:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1406:9:24","nodeType":"YulIdentifier","src":"1406:9:24"},{"kind":"number","nativeSrc":"1417:2:24","nodeType":"YulLiteral","src":"1417:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1402:3:24","nodeType":"YulIdentifier","src":"1402:3:24"},"nativeSrc":"1402:18:24","nodeType":"YulFunctionCall","src":"1402:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1394:4:24","nodeType":"YulIdentifier","src":"1394:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1436:9:24","nodeType":"YulIdentifier","src":"1436:9:24"},{"arguments":[{"name":"value0","nativeSrc":"1451:6:24","nodeType":"YulIdentifier","src":"1451:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1467:3:24","nodeType":"YulLiteral","src":"1467:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"1472:1:24","nodeType":"YulLiteral","src":"1472:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1463:3:24","nodeType":"YulIdentifier","src":"1463:3:24"},"nativeSrc":"1463:11:24","nodeType":"YulFunctionCall","src":"1463:11:24"},{"kind":"number","nativeSrc":"1476:1:24","nodeType":"YulLiteral","src":"1476:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1459:3:24","nodeType":"YulIdentifier","src":"1459:3:24"},"nativeSrc":"1459:19:24","nodeType":"YulFunctionCall","src":"1459:19:24"}],"functionName":{"name":"and","nativeSrc":"1447:3:24","nodeType":"YulIdentifier","src":"1447:3:24"},"nativeSrc":"1447:32:24","nodeType":"YulFunctionCall","src":"1447:32:24"}],"functionName":{"name":"mstore","nativeSrc":"1429:6:24","nodeType":"YulIdentifier","src":"1429:6:24"},"nativeSrc":"1429:51:24","nodeType":"YulFunctionCall","src":"1429:51:24"},"nativeSrc":"1429:51:24","nodeType":"YulExpressionStatement","src":"1429:51:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1500:9:24","nodeType":"YulIdentifier","src":"1500:9:24"},{"kind":"number","nativeSrc":"1511:2:24","nodeType":"YulLiteral","src":"1511:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1496:3:24","nodeType":"YulIdentifier","src":"1496:3:24"},"nativeSrc":"1496:18:24","nodeType":"YulFunctionCall","src":"1496:18:24"},{"arguments":[{"name":"value1","nativeSrc":"1520:6:24","nodeType":"YulIdentifier","src":"1520:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1536:3:24","nodeType":"YulLiteral","src":"1536:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"1541:1:24","nodeType":"YulLiteral","src":"1541:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1532:3:24","nodeType":"YulIdentifier","src":"1532:3:24"},"nativeSrc":"1532:11:24","nodeType":"YulFunctionCall","src":"1532:11:24"},{"kind":"number","nativeSrc":"1545:1:24","nodeType":"YulLiteral","src":"1545:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1528:3:24","nodeType":"YulIdentifier","src":"1528:3:24"},"nativeSrc":"1528:19:24","nodeType":"YulFunctionCall","src":"1528:19:24"}],"functionName":{"name":"and","nativeSrc":"1516:3:24","nodeType":"YulIdentifier","src":"1516:3:24"},"nativeSrc":"1516:32:24","nodeType":"YulFunctionCall","src":"1516:32:24"}],"functionName":{"name":"mstore","nativeSrc":"1489:6:24","nodeType":"YulIdentifier","src":"1489:6:24"},"nativeSrc":"1489:60:24","nodeType":"YulFunctionCall","src":"1489:60:24"},"nativeSrc":"1489:60:24","nodeType":"YulExpressionStatement","src":"1489:60:24"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"1255:300:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1345:9:24","nodeType":"YulTypedName","src":"1345:9:24","type":""},{"name":"value1","nativeSrc":"1356:6:24","nodeType":"YulTypedName","src":"1356:6:24","type":""},{"name":"value0","nativeSrc":"1364:6:24","nodeType":"YulTypedName","src":"1364:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1375:4:24","nodeType":"YulTypedName","src":"1375:4:24","type":""}],"src":"1255:300:24"},{"body":{"nativeSrc":"1709:171:24","nodeType":"YulBlock","src":"1709:171:24","statements":[{"nativeSrc":"1719:26:24","nodeType":"YulAssignment","src":"1719:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1731:9:24","nodeType":"YulIdentifier","src":"1731:9:24"},{"kind":"number","nativeSrc":"1742:2:24","nodeType":"YulLiteral","src":"1742:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1727:3:24","nodeType":"YulIdentifier","src":"1727:3:24"},"nativeSrc":"1727:18:24","nodeType":"YulFunctionCall","src":"1727:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1719:4:24","nodeType":"YulIdentifier","src":"1719:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1761:9:24","nodeType":"YulIdentifier","src":"1761:9:24"},{"arguments":[{"name":"value0","nativeSrc":"1776:6:24","nodeType":"YulIdentifier","src":"1776:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1792:3:24","nodeType":"YulLiteral","src":"1792:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"1797:1:24","nodeType":"YulLiteral","src":"1797:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1788:3:24","nodeType":"YulIdentifier","src":"1788:3:24"},"nativeSrc":"1788:11:24","nodeType":"YulFunctionCall","src":"1788:11:24"},{"kind":"number","nativeSrc":"1801:1:24","nodeType":"YulLiteral","src":"1801:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1784:3:24","nodeType":"YulIdentifier","src":"1784:3:24"},"nativeSrc":"1784:19:24","nodeType":"YulFunctionCall","src":"1784:19:24"}],"functionName":{"name":"and","nativeSrc":"1772:3:24","nodeType":"YulIdentifier","src":"1772:3:24"},"nativeSrc":"1772:32:24","nodeType":"YulFunctionCall","src":"1772:32:24"}],"functionName":{"name":"mstore","nativeSrc":"1754:6:24","nodeType":"YulIdentifier","src":"1754:6:24"},"nativeSrc":"1754:51:24","nodeType":"YulFunctionCall","src":"1754:51:24"},"nativeSrc":"1754:51:24","nodeType":"YulExpressionStatement","src":"1754:51:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1825:9:24","nodeType":"YulIdentifier","src":"1825:9:24"},{"kind":"number","nativeSrc":"1836:2:24","nodeType":"YulLiteral","src":"1836:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1821:3:24","nodeType":"YulIdentifier","src":"1821:3:24"},"nativeSrc":"1821:18:24","nodeType":"YulFunctionCall","src":"1821:18:24"},{"arguments":[{"name":"value1","nativeSrc":"1845:6:24","nodeType":"YulIdentifier","src":"1845:6:24"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1861:3:24","nodeType":"YulLiteral","src":"1861:3:24","type":"","value":"160"},{"kind":"number","nativeSrc":"1866:1:24","nodeType":"YulLiteral","src":"1866:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1857:3:24","nodeType":"YulIdentifier","src":"1857:3:24"},"nativeSrc":"1857:11:24","nodeType":"YulFunctionCall","src":"1857:11:24"},{"kind":"number","nativeSrc":"1870:1:24","nodeType":"YulLiteral","src":"1870:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1853:3:24","nodeType":"YulIdentifier","src":"1853:3:24"},"nativeSrc":"1853:19:24","nodeType":"YulFunctionCall","src":"1853:19:24"}],"functionName":{"name":"and","nativeSrc":"1841:3:24","nodeType":"YulIdentifier","src":"1841:3:24"},"nativeSrc":"1841:32:24","nodeType":"YulFunctionCall","src":"1841:32:24"}],"functionName":{"name":"mstore","nativeSrc":"1814:6:24","nodeType":"YulIdentifier","src":"1814:6:24"},"nativeSrc":"1814:60:24","nodeType":"YulFunctionCall","src":"1814:60:24"},"nativeSrc":"1814:60:24","nodeType":"YulExpressionStatement","src":"1814:60:24"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1022_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"1560:320:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1670:9:24","nodeType":"YulTypedName","src":"1670:9:24","type":""},{"name":"value1","nativeSrc":"1681:6:24","nodeType":"YulTypedName","src":"1681:6:24","type":""},{"name":"value0","nativeSrc":"1689:6:24","nodeType":"YulTypedName","src":"1689:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1700:4:24","nodeType":"YulTypedName","src":"1700:4:24","type":""}],"src":"1560:320:24"},{"body":{"nativeSrc":"1934:273:24","nodeType":"YulBlock","src":"1934:273:24","statements":[{"nativeSrc":"1944:26:24","nodeType":"YulVariableDeclaration","src":"1944:26:24","value":{"arguments":[{"name":"value","nativeSrc":"1964:5:24","nodeType":"YulIdentifier","src":"1964:5:24"}],"functionName":{"name":"mload","nativeSrc":"1958:5:24","nodeType":"YulIdentifier","src":"1958:5:24"},"nativeSrc":"1958:12:24","nodeType":"YulFunctionCall","src":"1958:12:24"},"variables":[{"name":"length","nativeSrc":"1948:6:24","nodeType":"YulTypedName","src":"1948:6:24","type":""}]},{"nativeSrc":"1979:10:24","nodeType":"YulVariableDeclaration","src":"1979:10:24","value":{"kind":"number","nativeSrc":"1988:1:24","nodeType":"YulLiteral","src":"1988:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1983:1:24","nodeType":"YulTypedName","src":"1983:1:24","type":""}]},{"body":{"nativeSrc":"2050:76:24","nodeType":"YulBlock","src":"2050:76:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"2075:3:24","nodeType":"YulIdentifier","src":"2075:3:24"},{"name":"i","nativeSrc":"2080:1:24","nodeType":"YulIdentifier","src":"2080:1:24"}],"functionName":{"name":"add","nativeSrc":"2071:3:24","nodeType":"YulIdentifier","src":"2071:3:24"},"nativeSrc":"2071:11:24","nodeType":"YulFunctionCall","src":"2071:11:24"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2098:5:24","nodeType":"YulIdentifier","src":"2098:5:24"},{"name":"i","nativeSrc":"2105:1:24","nodeType":"YulIdentifier","src":"2105:1:24"}],"functionName":{"name":"add","nativeSrc":"2094:3:24","nodeType":"YulIdentifier","src":"2094:3:24"},"nativeSrc":"2094:13:24","nodeType":"YulFunctionCall","src":"2094:13:24"},{"kind":"number","nativeSrc":"2109:4:24","nodeType":"YulLiteral","src":"2109:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2090:3:24","nodeType":"YulIdentifier","src":"2090:3:24"},"nativeSrc":"2090:24:24","nodeType":"YulFunctionCall","src":"2090:24:24"}],"functionName":{"name":"mload","nativeSrc":"2084:5:24","nodeType":"YulIdentifier","src":"2084:5:24"},"nativeSrc":"2084:31:24","nodeType":"YulFunctionCall","src":"2084:31:24"}],"functionName":{"name":"mstore","nativeSrc":"2064:6:24","nodeType":"YulIdentifier","src":"2064:6:24"},"nativeSrc":"2064:52:24","nodeType":"YulFunctionCall","src":"2064:52:24"},"nativeSrc":"2064:52:24","nodeType":"YulExpressionStatement","src":"2064:52:24"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2009:1:24","nodeType":"YulIdentifier","src":"2009:1:24"},{"name":"length","nativeSrc":"2012:6:24","nodeType":"YulIdentifier","src":"2012:6:24"}],"functionName":{"name":"lt","nativeSrc":"2006:2:24","nodeType":"YulIdentifier","src":"2006:2:24"},"nativeSrc":"2006:13:24","nodeType":"YulFunctionCall","src":"2006:13:24"},"nativeSrc":"1998:128:24","nodeType":"YulForLoop","post":{"nativeSrc":"2020:21:24","nodeType":"YulBlock","src":"2020:21:24","statements":[{"nativeSrc":"2022:17:24","nodeType":"YulAssignment","src":"2022:17:24","value":{"arguments":[{"name":"i","nativeSrc":"2031:1:24","nodeType":"YulIdentifier","src":"2031:1:24"},{"kind":"number","nativeSrc":"2034:4:24","nodeType":"YulLiteral","src":"2034:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2027:3:24","nodeType":"YulIdentifier","src":"2027:3:24"},"nativeSrc":"2027:12:24","nodeType":"YulFunctionCall","src":"2027:12:24"},"variableNames":[{"name":"i","nativeSrc":"2022:1:24","nodeType":"YulIdentifier","src":"2022:1:24"}]}]},"pre":{"nativeSrc":"2002:3:24","nodeType":"YulBlock","src":"2002:3:24","statements":[]},"src":"1998:128:24"},{"nativeSrc":"2135:26:24","nodeType":"YulVariableDeclaration","src":"2135:26:24","value":{"arguments":[{"name":"pos","nativeSrc":"2149:3:24","nodeType":"YulIdentifier","src":"2149:3:24"},{"name":"length","nativeSrc":"2154:6:24","nodeType":"YulIdentifier","src":"2154:6:24"}],"functionName":{"name":"add","nativeSrc":"2145:3:24","nodeType":"YulIdentifier","src":"2145:3:24"},"nativeSrc":"2145:16:24","nodeType":"YulFunctionCall","src":"2145:16:24"},"variables":[{"name":"_1","nativeSrc":"2139:2:24","nodeType":"YulTypedName","src":"2139:2:24","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"2177:2:24","nodeType":"YulIdentifier","src":"2177:2:24"},{"kind":"number","nativeSrc":"2181:1:24","nodeType":"YulLiteral","src":"2181:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2170:6:24","nodeType":"YulIdentifier","src":"2170:6:24"},"nativeSrc":"2170:13:24","nodeType":"YulFunctionCall","src":"2170:13:24"},"nativeSrc":"2170:13:24","nodeType":"YulExpressionStatement","src":"2170:13:24"},{"nativeSrc":"2192:9:24","nodeType":"YulAssignment","src":"2192:9:24","value":{"name":"_1","nativeSrc":"2199:2:24","nodeType":"YulIdentifier","src":"2199:2:24"},"variableNames":[{"name":"end","nativeSrc":"2192:3:24","nodeType":"YulIdentifier","src":"2192:3:24"}]}]},"name":"abi_encode_bytes","nativeSrc":"1885:322:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1911:5:24","nodeType":"YulTypedName","src":"1911:5:24","type":""},{"name":"pos","nativeSrc":"1918:3:24","nodeType":"YulTypedName","src":"1918:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1926:3:24","nodeType":"YulTypedName","src":"1926:3:24","type":""}],"src":"1885:322:24"},{"body":{"nativeSrc":"2395:78:24","nodeType":"YulBlock","src":"2395:78:24","statements":[{"nativeSrc":"2405:62:24","nodeType":"YulAssignment","src":"2405:62:24","value":{"arguments":[{"name":"value1","nativeSrc":"2429:6:24","nodeType":"YulIdentifier","src":"2429:6:24"},{"arguments":[{"name":"value0","nativeSrc":"2454:6:24","nodeType":"YulIdentifier","src":"2454:6:24"},{"name":"pos","nativeSrc":"2462:3:24","nodeType":"YulIdentifier","src":"2462:3:24"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"2437:16:24","nodeType":"YulIdentifier","src":"2437:16:24"},"nativeSrc":"2437:29:24","nodeType":"YulFunctionCall","src":"2437:29:24"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"2412:16:24","nodeType":"YulIdentifier","src":"2412:16:24"},"nativeSrc":"2412:55:24","nodeType":"YulFunctionCall","src":"2412:55:24"},"variableNames":[{"name":"end","nativeSrc":"2405:3:24","nodeType":"YulIdentifier","src":"2405:3:24"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"2212:261:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2363:3:24","nodeType":"YulTypedName","src":"2363:3:24","type":""},{"name":"value1","nativeSrc":"2368:6:24","nodeType":"YulTypedName","src":"2368:6:24","type":""},{"name":"value0","nativeSrc":"2376:6:24","nodeType":"YulTypedName","src":"2376:6:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2387:3:24","nodeType":"YulTypedName","src":"2387:3:24","type":""}],"src":"2212:261:24"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1022__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, shl(248, 255)))\n        mstore(add(pos, 1), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 21), value2)\n        mstore(add(pos, 53), value3)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1022_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_bytes(value1, abi_encode_bytes(value0, pos))\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7240":[{"length":32,"start":169},{"length":32,"start":490}],"7251":[{"length":32,"start":86}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80638117abc1146100515780638cb84e1814610094578063b0d691fe146100a7578063f247d217146100cd575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100786100a236600461025f565b6100e0565b7f0000000000000000000000000000000000000000000000000000000000000000610078565b6100786100db36600461025f565b610152565b6000806100ec846101c1565b80516020918201206040516001600160f81b0319928101929092526bffffffffffffffffffffffff193060601b1660218301526035820185905260558201819052915060750160408051601f198184030181529190528051602090910120949350505050565b60008061015e846101c1565b9050828151602083016000f59150813b61017757600080fd5b604080516001600160a01b038085168252861660208201527ff25144576b87c0db53fd13e964c2b18299ee19d7d44d4b2636144644acff745b910160405180910390a15092915050565b6060604051806020016101d390610252565b601f1982820381018352601f9091011660408181527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811660208401528516818301528051808303820181526060830190915261023c92916080016102c7565b6040516020818303038152906040529050919050565b610bbb806102e583390190565b6000806040838503121561027257600080fd5b82356001600160a01b038116811461028957600080fd5b946020939093013593505050565b6000815160005b818110156102b8576020818501810151868301520161029e565b50600093019283525090919050565b60006102dc6102d68386610297565b84610297565b94935050505056fe60a060405234801561001057600080fd5b50604051610bbb380380610bbb83398101604081905261002f9161006f565b6001600160a01b03918216608052600080546001600160a01b031916919092161790556100a9565b6001600160a01b038116811461006c57600080fd5b50565b6000806040838503121561008257600080fd5b825161008d81610057565b602084015190925061009e81610057565b809150509250929050565b608051610ae96100d2600039600081816101320152818161039a015261043a0152610ae96000f3fe6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e01461010d578063b0d691fe14610123578063b61d27f614610156578063d087d2881461017657600080fd5b806319822f7c1461008057806334fcd5be146100b35780638da5cb5b146100d557600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461080f565b61018b565b6040519081526020015b60405180910390f35b3480156100bf57600080fd5b506100d36100ce366004610863565b6101b1565b005b3480156100e157600080fd5b506000546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561011957600080fd5b506100a060015481565b34801561012f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006100f5565b34801561016257600080fd5b506100d36101713660046108f6565b6102a5565b34801561018257600080fd5b506100a0610396565b600061019561042f565b61019f84846104a9565b90506101aa82610558565b9392505050565b6101b96105a0565b8060005b8181101561029f57368484838181106101d8576101d8610980565b90506020028101906101ea9190610996565b9050600061024a6101fe60208401846109b6565b602084013561021060408601866109d1565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a6105a8565b9050806102955783600103610266576102616105c0565b610295565b8261027160006105d2565b604051635a15467560e01b815260040161028c929190610a1f565b60405180910390fd5b50506001016101bd565b50505050565b6000546001600160a01b031633146102ec5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161028c565b6000846001600160a01b0316848484604051610309929190610a74565b60006040518083038185875af1925050503d8060008114610346576040519150601f19603f3d011682016040523d82523d6000602084013e61034b565b606091505b505090508061038f5760405162461bcd60e51b815260206004820152601060248201526f115e1958dd5d1a5bdb8819985a5b195960821b604482015260640161028c565b5050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a84565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a75760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161028c565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812081546001600160a01b03166105316104f46101008701876109d1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106049050565b6001600160a01b03161461054957600191505061054f565b60009150505b92915050565b50565b801561055557604051600090339083908381818185875af1925050503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e61038f565b6104a761042f565b6000806000845160208601878987f195945050505050565b6104a76105cd60006105d2565b61062e565b60603d82156105e657828111156105e65750815b604051602082018101604052818152816000602083013e9392505050565b6000806000806106148686610636565b9250925092506106248282610683565b5090949350505050565b805160208201fd5b600080600083516041036106705760208401516040850151606086015160001a61066288828585610740565b95509550955050505061067c565b50508151600091506002905b9250925092565b600082600381111561069757610697610a9d565b036106a0575050565b60018260038111156106b4576106b4610a9d565b036106d25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156106e6576106e6610a9d565b036107075760405163fce698f760e01b81526004810182905260240161028c565b600382600381111561071b5761071b610a9d565b0361073c576040516335e2f38360e21b81526004810182905260240161028c565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561077b5750600091506003905082610805565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156107cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107fb57506000925060019150829050610805565b9250600091508190505b9450945094915050565b60008060006060848603121561082457600080fd5b833567ffffffffffffffff81111561083b57600080fd5b8401610120818703121561084e57600080fd5b95602085013595506040909401359392505050565b6000806020838503121561087657600080fd5b823567ffffffffffffffff81111561088d57600080fd5b8301601f8101851361089e57600080fd5b803567ffffffffffffffff8111156108b557600080fd5b8560208260051b84010111156108ca57600080fd5b6020919091019590945092505050565b80356001600160a01b03811681146108f157600080fd5b919050565b6000806000806060858703121561090c57600080fd5b610915856108da565b935060208501359250604085013567ffffffffffffffff81111561093857600080fd5b8501601f8101871361094957600080fd5b803567ffffffffffffffff81111561096057600080fd5b87602082840101111561097257600080fd5b949793965060200194505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126109ac57600080fd5b9190910192915050565b6000602082840312156109c857600080fd5b6101aa826108da565b6000808335601e198436030181126109e857600080fd5b83018035915067ffffffffffffffff821115610a0357600080fd5b602001915036819003821315610a1857600080fd5b9250929050565b828152604060208201526000825180604084015260005b81811015610a535760208186018101516060868401015201610a36565b506000606082850101526060601f19601f8301168401019150509392505050565b8183823760009101908152919050565b600060208284031215610a9657600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220da04371a6850372f49a90103209cdf1d0ab31b291d875d237ca9f67e01eda06b64736f6c634300081c0033a2646970667358221220044bf51390c52d759e190c6c93278729e46594d644757eaa16ab7374727b862a64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8117ABC1 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xF247D217 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F JUMP JUMPDEST PUSH2 0xE0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x78 JUMP JUMPDEST PUSH2 0x78 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x25F JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEC DUP5 PUSH2 0x1C1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x55 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15E DUP5 PUSH2 0x1C1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE2 SWAP2 POP DUP2 EXTCODESIZE PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF25144576B87C0DB53FD13E964C2B18299EE19D7D44D4B2636144644ACFF745B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x1D3 SWAP1 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE DUP6 AND DUP2 DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 SWAP2 MSTORE PUSH2 0x23C SWAP3 SWAP2 PUSH1 0x80 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBB DUP1 PUSH2 0x2E5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x29E JUMP JUMPDEST POP PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC PUSH2 0x2D6 DUP4 DUP7 PUSH2 0x297 JUMP JUMPDEST DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBBB CODESIZE SUB DUP1 PUSH2 0xBBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x8D DUP2 PUSH2 0x57 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x9E DUP2 PUSH2 0x57 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAE9 PUSH2 0xD2 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x132 ADD MSTORE DUP2 DUP2 PUSH2 0x39A ADD MSTORE PUSH2 0x43A ADD MSTORE PUSH2 0xAE9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19822F7C EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x34FCD5BE EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x19F DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AA DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x5A0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29F JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D8 PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24A PUSH2 0x1FE PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x210 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP GAS PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x295 JUMPI DUP4 PUSH1 0x1 SUB PUSH2 0x266 JUMPI PUSH2 0x261 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST DUP3 PUSH2 0x271 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5A154675 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP3 SWAP2 SWAP1 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x309 SWAP3 SWAP2 SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x115E1958DD5D1A5BDB8819985A5B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x1AAB3F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35567E1A SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28C JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x531 PUSH2 0x4F4 PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x604 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x549 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x54F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x38F JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP8 DUP10 DUP8 CALL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x5CD PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE DUP3 ISZERO PUSH2 0x5E6 JUMPI DUP3 DUP2 GT ISZERO PUSH2 0x5E6 JUMPI POP DUP2 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP3 ADD DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP2 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x614 DUP7 DUP7 PUSH2 0x636 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x624 DUP3 DUP3 PUSH2 0x683 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x670 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x662 DUP9 DUP3 DUP6 DUP6 PUSH2 0x740 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x67C JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x697 JUMPI PUSH2 0x697 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6A0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6E6 PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xA9D JUMP JUMPDEST SUB PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x28C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x77B JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7FB JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x805 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x915 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x5E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA DUP3 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xA36 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA DIV CALLDATACOPY BYTE PUSH9 0x50372F49A90103209C 0xDF SAR EXP 0xB3 SHL 0x29 SAR DUP8 TSTORE 0x23 PUSH29 0xA9F67E01EDA06B64736F6C634300081C0033A264697066735822122004 0x4B CREATE2 SGT SWAP1 0xC5 0x2D PUSH22 0x9E190C6C93278729E46594D644757EAA16AB7374727B DUP7 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"162:1857:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:45;;;;;;;;-1:-1:-1;;;;;178:32:24;;;160:51;;148:2;133:18;349:45:23;;;;;;;680:664;;;;;;:::i;:::-;;:::i;248:93::-;322:11;248:93;;1352:414;;;;;;:::i;:::-;;:::i;680:664::-;775:17;805:20;838:18;850:5;838:11;:18::i;:::-;828:29;;;;;;;1015:237;;-1:-1:-1;;;;;;1015:237:23;;;1020:39:24;;;;-1:-1:-1;;1121:4:23;1096:2:24;1092:15;1088:53;1075:11;;;1068:74;1158:12;;;1151:28;;;1195:12;;;1188:28;;;828:29:23;-1:-1:-1;1232:12:24;;1015:237:23;;;-1:-1:-1;;1015:237:23;;;;;;;;;975:304;;1015:237;975:304;;;;;680:664;-1:-1:-1;;;;680:664:23:o;1352:414::-;1446:14;1473:21;1497:18;1509:5;1497:11;:18::i;:::-;1473:42;;1607:4;1596:8;1590:15;1585:2;1575:8;1571:17;1568:1;1560:52;1550:62;;1648:6;1636:19;1626:77;;1686:1;1683;1676:12;1626:77;1729:29;;;-1:-1:-1;;;;;1447:32:24;;;1429:51;;1516:32;;1511:2;1496:18;;1489:60;1729:29:23;;1402:18:24;1729:29:23;;;;;;;1462:304;1352:414;;;;:::o;1774:242::-;1833:12;1913:31;;;;;;;;:::i;:::-;-1:-1:-1;;1913:31:23;;;;;;;;;;;;;;;;1974:11;-1:-1:-1;;;;;1447:32:24;;;1913:31:23;1963:30;;1429:51:24;1516:32;;1496:18;;;1489:60;1963:30:23;;;;;;;;;1402:18:24;;;1963:30:23;;;1878:130;;1913:31;1878:130;;;:::i;:::-;;;;;;;;;;;;;1858:150;;1774:242;;;:::o;-1:-1:-1:-;;;;;;;;:::o;222:354:24:-;290:6;298;351:2;339:9;330:7;326:23;322:32;319:52;;;367:1;364;357:12;319:52;393:23;;-1:-1:-1;;;;;445:31:24;;435:42;;425:70;;491:1;488;481:12;425:70;514:5;566:2;551:18;;;;538:32;;-1:-1:-1;;;222:354:24:o;1885:322::-;1926:3;1964:5;1958:12;1988:1;1998:128;2012:6;2009:1;2006:13;1998:128;;;2109:4;2094:13;;;2090:24;;2084:31;2071:11;;;2064:52;2027:12;1998:128;;;-1:-1:-1;2181:1:24;2145:16;;2170:13;;;-1:-1:-1;2145:16:24;;1885:322;-1:-1:-1;1885:322:24:o;2212:261::-;2387:3;2412:55;2437:29;2462:3;2454:6;2437:29;:::i;:::-;2429:6;2412:55;:::i;:::-;2405:62;2212:261;-1:-1:-1;;;;2212:261:24:o"},"methodIdentifiers":{"createWallet(address,uint256)":"f247d217","entryPoint()":"b0d691fe","getAddress(address,uint256)":"8cb84e18","walletImplementation()":"8117abc1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"WalletDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"predicted\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartAccountFactory.sol\":\"SmartAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x071e38cf697bedbfe021955879277620ff763ecca1a1143ce14792e8c86c6d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d55468ffadcec140a1dc853fac153de985d7335655e70935b9d28e148a495ab\",\"dweb:/ipfs/QmXMPLx92TLCDRtNTdmTLSWBNbPVmSGeN9im2zsK9P9p4R\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x1030b464b49ce80da46b5b6c9af357c2d526f308de61391db6a4ec767d33b864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671945f8e18e7305797312b5a209506be3c9bd1d9b9b561c1e8863bccfa61319\",\"dweb:/ipfs/QmVanLK5Aenrb7J94doiE1C9oHwo86jvv8NrpDeNHwvnii\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"@account-abstraction/contracts/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]},\"@account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x9c724ee22011193ea7f92d3c3c467ee6aa27139d3ddc225c7f1254d241e6ccdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96cc246fe944a212cbb9ba82065b2d380ec80954fcdb5d8d982b476bd5b72868\",\"dweb:/ipfs/QmZ25eFixEhukbfWGz5TBjsp7YohxUqD5i2rxhaghfvHt8\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SmartAccount.sol\":{\"keccak256\":\"0xaedd0c31238ae691166ddf82945a116db6b3250710eb7da0387d2d6b8f21cdd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eecf1b4826a196827537c7e81184662d15b707b7724757d26b9c8cd7ea4465d0\",\"dweb:/ipfs/QmURuYPHqkcbxABqnXrzq7YtcAGYGphRLZETYDC3U3NhzU\"]},\"contracts/SmartAccountFactory.sol\":{\"keccak256\":\"0xc2c349887661143008200ee3f9525641d826ceedeac5a03bc8af15a986adddac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://001e8304da25b4386ca1bdab5f3048d7e911e3d6c3587cf2ec36b68bf1d3fc51\",\"dweb:/ipfs/QmPYETdA58JSAfS1TyhBGizCpG4DcNJEM59Mb3DjKjSbbS\"]}},\"version\":1}"}}}}}